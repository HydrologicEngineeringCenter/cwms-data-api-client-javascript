/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LocationGroup from '../model/LocationGroup';
import RadarError from '../model/RadarError';

/**
* LocationGroupsBeta service.
* @module api/LocationGroupsBetaApi
* @version 2.5
*/
export default class LocationGroupsBetaApi {

    /**
    * Constructs a new LocationGroupsBetaApi. 
    * @alias module:api/LocationGroupsBetaApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCwmsDataLocationGroup operation.
     * @callback module:api/LocationGroupsBetaApi~getCwmsDataLocationGroupCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/LocationGroup>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData location group
     * Returns CWMS Location Groups Data
     * @param {Object} opts Optional parameters
     * @param {String} [office] Specifies the owning office of the location group(s) whose data is to be included in the response. If this field is not specified, matching location groups information from all offices shall be returned.
     * @param {Boolean} [includeAssigned] Include the assigned locations in the returned location groups. (default: false)
     * @param {Boolean} [includeAssigned2] Deprecated. Use include-assigned instead.
     * @param {module:api/LocationGroupsBetaApi~getCwmsDataLocationGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/LocationGroup>}
     */
    getCwmsDataLocationGroup(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'office': opts['office'],
        'include-assigned': opts['includeAssigned'],
        'includeAssigned': opts['includeAssigned2']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/csv'];
      let returnType = [LocationGroup];
      return this.apiClient.callApi(
        '/cwms-data/location/group', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataLocationGroupWithGroupId operation.
     * @callback module:api/LocationGroupsBetaApi~getCwmsDataLocationGroupWithGroupIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocationGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData location group with groupId
     * Retrieves requested Location Group
     * @param {String} groupId Specifies the location_group whose data is to be included in the response
     * @param {String} office Specifies the owning office of the location group whose data is to be included in the response.
     * @param {String} categoryId Specifies the category containing the location group whose data is to be included in the response.
     * @param {module:api/LocationGroupsBetaApi~getCwmsDataLocationGroupWithGroupIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocationGroup}
     */
    getCwmsDataLocationGroupWithGroupId(groupId, office, categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling getCwmsDataLocationGroupWithGroupId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling getCwmsDataLocationGroupWithGroupId");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getCwmsDataLocationGroupWithGroupId");
      }

      let pathParams = {
        'group-id': groupId
      };
      let queryParams = {
        'office': office,
        'category-id': categoryId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/csv', 'application/geo+json'];
      let returnType = LocationGroup;
      return this.apiClient.callApi(
        '/cwms-data/location/group/{group-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
