/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import RadarError from '../model/RadarError';
import TimeSeries from '../model/TimeSeries';

/**
* TimeSeries service.
* @module api/TimeSeriesApi
* @version 2.5
*/
export default class TimeSeriesApi {

    /**
    * Constructs a new TimeSeriesApi. 
    * @alias module:api/TimeSeriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCwmsDataTimeseriesWithTimeseries operation.
     * @callback module:api/TimeSeriesApi~deleteCwmsDataTimeseriesWithTimeseriesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete cwmsData timeseries with timeseries
     * @param {String} timeseries 
     * @param {String} office Specifies the owning office of the timeseries to be deleted.
     * @param {module:api/TimeSeriesApi~deleteCwmsDataTimeseriesWithTimeseriesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCwmsDataTimeseriesWithTimeseries(timeseries, office, callback) {
      let postBody = null;
      // verify the required parameter 'timeseries' is set
      if (timeseries === undefined || timeseries === null) {
        throw new Error("Missing the required parameter 'timeseries' when calling deleteCwmsDataTimeseriesWithTimeseries");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling deleteCwmsDataTimeseriesWithTimeseries");
      }

      let pathParams = {
        'timeseries': timeseries
      };
      let queryParams = {
        'office': office
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/timeseries/{timeseries}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataTimeseries operation.
     * @callback module:api/TimeSeriesApi~getCwmsDataTimeseriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimeSeries} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData timeseries
     * @param {String} name Specifies the name(s) of the time series whose data is to be included in the response. A case insensitive comparison is used to match names.
     * @param {Object} opts Optional parameters
     * @param {String} [office] Specifies the owning office of the time series(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
     * @param {String} [unit] Specifies the unit or unit system of the response. Valid values for the unit field are:   1. EN.   (default) Specifies English unit system.  Location level values will be in the default English units for their parameters.  2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.  3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters.
     * @param {String} [datum] Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:  1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.  2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum.
     * @param {String} [begin] Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-0700[PST8PDT]'.
     * @param {String} [end] Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time. The format for this field is ISO 8601 extended, with optional timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-0700[PST8PDT]'.
     * @param {String} [timezone] Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.  Ignored if begin was specified with offset and timezone.
     * @param {String} [format] Specifies the encoding format of the response. Valid values for the format field for this URI are:  1.    tab  2.    csv  3.    xml  4.  wml2 (only if name field is specified)  5.    json (default)
     * @param {String} [page] This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
     * @param {String} [cursor] Deprecated. Use 'page' instead.
     * @param {Number} [pageSize] How many entries per page returned. Default 500.
     * @param {Number} [pageSize2] Deprecated. Please use page-size instead.
     * @param {module:api/TimeSeriesApi~getCwmsDataTimeseriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TimeSeries}
     */
    getCwmsDataTimeseries(name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling getCwmsDataTimeseries");
      }

      let pathParams = {
      };
      let queryParams = {
        'name': name,
        'office': opts['office'],
        'unit': opts['unit'],
        'datum': opts['datum'],
        'begin': opts['begin'],
        'end': opts['end'],
        'timezone': opts['timezone'],
        'format': opts['format'],
        'page': opts['page'],
        'cursor': opts['cursor'],
        'page-size': opts['pageSize'],
        'pageSize': opts['pageSize2']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json;version=2', 'application/xml'];
      let returnType = TimeSeries;
      return this.apiClient.callApi(
        '/cwms-data/timeseries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchCwmsDataTimeseriesWithTimeseries operation.
     * @callback module:api/TimeSeriesApi~patchCwmsDataTimeseriesWithTimeseriesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patch cwmsData timeseries with timeseries
     * Update a TimeSeries with provided values
     * @param {String} timeseries Full CWMS Timeseries name
     * @param {module:model/TimeSeries} timeSeries 
     * @param {module:api/TimeSeriesApi~patchCwmsDataTimeseriesWithTimeseriesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    patchCwmsDataTimeseriesWithTimeseries(timeseries, timeSeries, callback) {
      let postBody = timeSeries;
      // verify the required parameter 'timeseries' is set
      if (timeseries === undefined || timeseries === null) {
        throw new Error("Missing the required parameter 'timeseries' when calling patchCwmsDataTimeseriesWithTimeseries");
      }
      // verify the required parameter 'timeSeries' is set
      if (timeSeries === undefined || timeSeries === null) {
        throw new Error("Missing the required parameter 'timeSeries' when calling patchCwmsDataTimeseriesWithTimeseries");
      }

      let pathParams = {
        'timeseries': timeseries
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json;version=2', 'application/xml;version=2'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/timeseries/{timeseries}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCwmsDataTimeseries operation.
     * @callback module:api/TimeSeriesApi~postCwmsDataTimeseriesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Post cwmsData timeseries
     * Create new TimeSeries, will store any data provided
     * @param {module:model/TimeSeries} timeSeries 
     * @param {module:api/TimeSeriesApi~postCwmsDataTimeseriesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postCwmsDataTimeseries(timeSeries, callback) {
      let postBody = timeSeries;
      // verify the required parameter 'timeSeries' is set
      if (timeSeries === undefined || timeSeries === null) {
        throw new Error("Missing the required parameter 'timeSeries' when calling postCwmsDataTimeseries");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json;version=2', 'application/xml;version=2'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/timeseries', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
