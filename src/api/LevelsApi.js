/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import LocationLevel from '../model/LocationLevel';
import LocationLevels from '../model/LocationLevels';
import RadarError from '../model/RadarError';

/**
* Levels service.
* @module api/LevelsApi
* @version 2.5
*/
export default class LevelsApi {

    /**
    * Constructs a new LevelsApi. 
    * @alias module:api/LevelsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCwmsDataLevelsWithLevelId operation.
     * @callback module:api/LevelsApi~deleteCwmsDataLevelsWithLevelIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete cwmsData levels with levelId
     * Delete CWMS Location Level
     * @param {String} levelId Specifies the location level id of the Location Level to be deleted
     * @param {Object} opts Optional parameters
     * @param {Boolean} [cascadeDelete] 
     * @param {String} [office] Specifies the owning office of the location level whose data is to be deleted. If this field is not specified, matching location level information will be deleted from all offices.
     * @param {String} [date] Deprecated, use effective-date
     * @param {String} [effectiveDate] Specifies the effective date of the level to be deleted. If not provided will delete all data and reference to the location level.
     * @param {module:api/LevelsApi~deleteCwmsDataLevelsWithLevelIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCwmsDataLevelsWithLevelId(levelId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'levelId' is set
      if (levelId === undefined || levelId === null) {
        throw new Error("Missing the required parameter 'levelId' when calling deleteCwmsDataLevelsWithLevelId");
      }

      let pathParams = {
        'level-id': levelId
      };
      let queryParams = {
        'cascade-delete': opts['cascadeDelete'],
        'office': opts['office'],
        'date': opts['date'],
        'effective-date': opts['effectiveDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/levels/{level-id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataLevels operation.
     * @callback module:api/LevelsApi~getCwmsDataLevelsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData levels
     * @param {Object} opts Optional parameters
     * @param {String} [name] Deprecated, use level-id-mask. 
     * @param {String} [levelIdMask] Specifies the name(s) of the location level(s) whose data is to be included in the response. Uses * for all.
     * @param {String} [office] Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.
     * @param {String} [unit] Specifies the unit or unit system of the response. Valid values for the unit field are:   1. EN.   Specifies English unit system.  Location level values will be in the default English units for their parameters.  2. SI.   Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.  3. Other. Any unit returned in the response to the units URI request that is appropriate for the requested parameters.
     * @param {String} [datum] Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:  1. NAVD88.  The elevation values will in the specified or default units above the NAVD-88 datum.  2. NGVD29.  The elevation values will be in the specified or default units above the NGVD-29 datum.
     * @param {String} [begin] Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time.
     * @param {String} [end] Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time
     * @param {String} [timezone] Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.
     * @param {String} [format] Specifies the encoding format of the response. Requests specifying an Accept header:application/json;version=2 must not include this field. Valid format field values for this URI are:  1.    tab  2.    csv  3.    xml  4.    wml2 (only if name field is specified)  5.    json (default)  
     * @param {String} [page] This identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
     * @param {Number} [pageSize] How many entries per page returned. Default 100.
     * @param {module:api/LevelsApi~getCwmsDataLevelsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getCwmsDataLevels(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'level-id-mask': opts['levelIdMask'],
        'office': opts['office'],
        'unit': opts['unit'],
        'datum': opts['datum'],
        'begin': opts['begin'],
        'end': opts['end'],
        'timezone': opts['timezone'],
        'format': opts['format'],
        'page': opts['page'],
        'page-size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json;version=2'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/cwms-data/levels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataLevelsWithLevelId operation.
     * @callback module:api/LevelsApi~getCwmsDataLevelsWithLevelIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocationLevel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData levels with levelId
     * Retrieves requested Location Level
     * @param {String} levelId Specifies the requested location level.
     * @param {String} office Specifies the office of the Location Level to be returned
     * @param {String} effectiveDate Specifies the effective date of Location Level to be returned
     * @param {Object} opts Optional parameters
     * @param {String} [date] Deprecated, use effective-date
     * @param {module:api/LevelsApi~getCwmsDataLevelsWithLevelIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocationLevel}
     */
    getCwmsDataLevelsWithLevelId(levelId, office, effectiveDate, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'levelId' is set
      if (levelId === undefined || levelId === null) {
        throw new Error("Missing the required parameter 'levelId' when calling getCwmsDataLevelsWithLevelId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling getCwmsDataLevelsWithLevelId");
      }
      // verify the required parameter 'effectiveDate' is set
      if (effectiveDate === undefined || effectiveDate === null) {
        throw new Error("Missing the required parameter 'effectiveDate' when calling getCwmsDataLevelsWithLevelId");
      }

      let pathParams = {
        'level-id': levelId
      };
      let queryParams = {
        'office': office,
        'date': opts['date'],
        'effective-date': effectiveDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json;version=2'];
      let returnType = LocationLevel;
      return this.apiClient.callApi(
        '/cwms-data/levels/{level-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchCwmsDataLevelsWithLevelId operation.
     * @callback module:api/LevelsApi~patchCwmsDataLevelsWithLevelIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patch cwmsData levels with levelId
     * Update CWMS Location Level
     * @param {String} levelId Specifies the location level id of the Location Level to be updated
     * @param {String} office Specifies the office in which Location Level will be updated
     * @param {String} effectiveDate Specifies the effective date of Location Level that will be updated
     * @param {module:model/LocationLevel} locationLevel 
     * @param {Object} opts Optional parameters
     * @param {String} [date] Deprecated, use effective-date
     * @param {module:api/LevelsApi~patchCwmsDataLevelsWithLevelIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    patchCwmsDataLevelsWithLevelId(levelId, office, effectiveDate, locationLevel, opts, callback) {
      opts = opts || {};
      let postBody = locationLevel;
      // verify the required parameter 'levelId' is set
      if (levelId === undefined || levelId === null) {
        throw new Error("Missing the required parameter 'levelId' when calling patchCwmsDataLevelsWithLevelId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling patchCwmsDataLevelsWithLevelId");
      }
      // verify the required parameter 'effectiveDate' is set
      if (effectiveDate === undefined || effectiveDate === null) {
        throw new Error("Missing the required parameter 'effectiveDate' when calling patchCwmsDataLevelsWithLevelId");
      }
      // verify the required parameter 'locationLevel' is set
      if (locationLevel === undefined || locationLevel === null) {
        throw new Error("Missing the required parameter 'locationLevel' when calling patchCwmsDataLevelsWithLevelId");
      }

      let pathParams = {
        'level-id': levelId
      };
      let queryParams = {
        'office': office,
        'date': opts['date'],
        'effective-date': effectiveDate
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/levels/{level-id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCwmsDataLevels operation.
     * @callback module:api/LevelsApi~postCwmsDataLevelsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Post cwmsData levels
     * Create new CWMS Location Level
     * @param {String} office Specifies the office in which Location Level will be created
     * @param {module:model/LocationLevel} locationLevel 
     * @param {module:api/LevelsApi~postCwmsDataLevelsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postCwmsDataLevels(office, locationLevel, callback) {
      let postBody = locationLevel;
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling postCwmsDataLevels");
      }
      // verify the required parameter 'locationLevel' is set
      if (locationLevel === undefined || locationLevel === null) {
        throw new Error("Missing the required parameter 'locationLevel' when calling postCwmsDataLevels");
      }

      let pathParams = {
      };
      let queryParams = {
        'office': office
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/xml'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/levels', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
