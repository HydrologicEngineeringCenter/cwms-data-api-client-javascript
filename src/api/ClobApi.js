/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Clob from '../model/Clob';
import Clobs from '../model/Clobs';
import RadarError from '../model/RadarError';

/**
* Clob service.
* @module api/ClobApi
* @version 2.5
*/
export default class ClobApi {

    /**
    * Constructs a new ClobApi. 
    * @alias module:api/ClobApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCwmsDataClobs operation.
     * @callback module:api/ClobApi~getCwmsDataClobsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Clobs} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData clobs
     * @param {Object} opts Optional parameters
     * @param {String} [office] Specifies the owning office. If this field is not specified, matching information from all offices shall be returned.
     * @param {String} [page] This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.
     * @param {String} [cursor] Deprecated. Use 'page' instead.
     * @param {Number} [pageSize] How many entries per page returned. Default 20.
     * @param {Number} [pageSize2] Deprecated, use 'page-size' instead.
     * @param {Boolean} [includeValues] Do you want the value associated with this particular clob (default: false)
     * @param {Boolean} [includeValues2] Deprecated, use 'include-values' instead.
     * @param {String} [like] Posix regular expression matching against the id
     * @param {module:api/ClobApi~getCwmsDataClobsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Clobs}
     */
    getCwmsDataClobs(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'office': opts['office'],
        'page': opts['page'],
        'cursor': opts['cursor'],
        'page-size': opts['pageSize'],
        'pageSize': opts['pageSize2'],
        'include-values': opts['includeValues'],
        'includeValues': opts['includeValues2'],
        'like': opts['like']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json;version=2', 'application/xml;version=2'];
      let returnType = Clobs;
      return this.apiClient.callApi(
        '/cwms-data/clobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataClobsWithClobId operation.
     * @callback module:api/ClobApi~getCwmsDataClobsWithClobIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Clob} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData clobs with clobId
     * @param {String} clobId 
     * @param {Object} opts Optional parameters
     * @param {String} [office] Specifies the owning office.
     * @param {module:api/ClobApi~getCwmsDataClobsWithClobIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Clob}
     */
    getCwmsDataClobsWithClobId(clobId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clobId' is set
      if (clobId === undefined || clobId === null) {
        throw new Error("Missing the required parameter 'clobId' when calling getCwmsDataClobsWithClobId");
      }

      let pathParams = {
        'clob-id': clobId
      };
      let queryParams = {
        'office': opts['office']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Clob;
      return this.apiClient.callApi(
        '/cwms-data/clobs/{clob-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
