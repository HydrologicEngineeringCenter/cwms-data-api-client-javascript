/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AssignedTimeSeries model module.
 * @module model/AssignedTimeSeries
 * @version 2.5
 */
class AssignedTimeSeries {
    /**
     * Constructs a new <code>AssignedTimeSeries</code>.
     * @alias module:model/AssignedTimeSeries
     */
    constructor() { 
        
        AssignedTimeSeries.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AssignedTimeSeries</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AssignedTimeSeries} obj Optional instance to populate.
     * @return {module:model/AssignedTimeSeries} The populated <code>AssignedTimeSeries</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AssignedTimeSeries();

            if (data.hasOwnProperty('timeseriesId')) {
                obj['timeseriesId'] = ApiClient.convertToType(data['timeseriesId'], 'String');
            }
            if (data.hasOwnProperty('tsCode')) {
                obj['tsCode'] = ApiClient.convertToType(data['tsCode'], 'Number');
            }
            if (data.hasOwnProperty('aliasId')) {
                obj['aliasId'] = ApiClient.convertToType(data['aliasId'], 'String');
            }
            if (data.hasOwnProperty('refTsId')) {
                obj['refTsId'] = ApiClient.convertToType(data['refTsId'], 'String');
            }
            if (data.hasOwnProperty('attribute')) {
                obj['attribute'] = ApiClient.convertToType(data['attribute'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AssignedTimeSeries</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AssignedTimeSeries</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['timeseriesId'] && !(typeof data['timeseriesId'] === 'string' || data['timeseriesId'] instanceof String)) {
            throw new Error("Expected the field `timeseriesId` to be a primitive type in the JSON string but got " + data['timeseriesId']);
        }
        // ensure the json data is a string
        if (data['aliasId'] && !(typeof data['aliasId'] === 'string' || data['aliasId'] instanceof String)) {
            throw new Error("Expected the field `aliasId` to be a primitive type in the JSON string but got " + data['aliasId']);
        }
        // ensure the json data is a string
        if (data['refTsId'] && !(typeof data['refTsId'] === 'string' || data['refTsId'] instanceof String)) {
            throw new Error("Expected the field `refTsId` to be a primitive type in the JSON string but got " + data['refTsId']);
        }

        return true;
    }


}



/**
 * @member {String} timeseriesId
 */
AssignedTimeSeries.prototype['timeseriesId'] = undefined;

/**
 * @member {Number} tsCode
 */
AssignedTimeSeries.prototype['tsCode'] = undefined;

/**
 * @member {String} aliasId
 */
AssignedTimeSeries.prototype['aliasId'] = undefined;

/**
 * @member {String} refTsId
 */
AssignedTimeSeries.prototype['refTsId'] = undefined;

/**
 * @member {Number} attribute
 */
AssignedTimeSeries.prototype['attribute'] = undefined;






export default AssignedTimeSeries;

