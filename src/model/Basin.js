/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Stream from './Stream';

/**
 * The Basin model module.
 * @module model/Basin
 * @version 2.5
 */
class Basin {
    /**
     * Constructs a new <code>Basin</code>.
     * @alias module:model/Basin
     */
    constructor() { 
        
        Basin.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Basin</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Basin} obj Optional instance to populate.
     * @return {module:model/Basin} The populated <code>Basin</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Basin();

            if (data.hasOwnProperty('basinName')) {
                obj['basinName'] = ApiClient.convertToType(data['basinName'], 'String');
            }
            if (data.hasOwnProperty('officeId')) {
                obj['officeId'] = ApiClient.convertToType(data['officeId'], 'String');
            }
            if (data.hasOwnProperty('primaryStream')) {
                obj['primaryStream'] = Stream.constructFromObject(data['primaryStream']);
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
            if (data.hasOwnProperty('basinArea')) {
                obj['basinArea'] = ApiClient.convertToType(data['basinArea'], 'Number');
            }
            if (data.hasOwnProperty('contributingArea')) {
                obj['contributingArea'] = ApiClient.convertToType(data['contributingArea'], 'Number');
            }
            if (data.hasOwnProperty('parentBasinId')) {
                obj['parentBasinId'] = ApiClient.convertToType(data['parentBasinId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Basin</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Basin</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['basinName'] && !(typeof data['basinName'] === 'string' || data['basinName'] instanceof String)) {
            throw new Error("Expected the field `basinName` to be a primitive type in the JSON string but got " + data['basinName']);
        }
        // ensure the json data is a string
        if (data['officeId'] && !(typeof data['officeId'] === 'string' || data['officeId'] instanceof String)) {
            throw new Error("Expected the field `officeId` to be a primitive type in the JSON string but got " + data['officeId']);
        }
        // validate the optional field `primaryStream`
        if (data['primaryStream']) { // data not null
          Stream.validateJSON(data['primaryStream']);
        }
        // ensure the json data is a string
        if (data['parentBasinId'] && !(typeof data['parentBasinId'] === 'string' || data['parentBasinId'] instanceof String)) {
            throw new Error("Expected the field `parentBasinId` to be a primitive type in the JSON string but got " + data['parentBasinId']);
        }

        return true;
    }


}



/**
 * @member {String} basinName
 */
Basin.prototype['basinName'] = undefined;

/**
 * @member {String} officeId
 */
Basin.prototype['officeId'] = undefined;

/**
 * @member {module:model/Stream} primaryStream
 */
Basin.prototype['primaryStream'] = undefined;

/**
 * @member {Number} sortOrder
 */
Basin.prototype['sortOrder'] = undefined;

/**
 * @member {Number} basinArea
 */
Basin.prototype['basinArea'] = undefined;

/**
 * @member {Number} contributingArea
 */
Basin.prototype['contributingArea'] = undefined;

/**
 * @member {String} parentBasinId
 */
Basin.prototype['parentBasinId'] = undefined;






export default Basin;

