/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssignedTimeSeries from './AssignedTimeSeries';
import TimeSeriesCategory from './TimeSeriesCategory';

/**
 * The TimeSeriesGroup model module.
 * @module model/TimeSeriesGroup
 * @version 2.5
 */
class TimeSeriesGroup {
    /**
     * Constructs a new <code>TimeSeriesGroup</code>.
     * A representation of a timeseries group
     * @alias module:model/TimeSeriesGroup
     */
    constructor() { 
        
        TimeSeriesGroup.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimeSeriesGroup</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesGroup} obj Optional instance to populate.
     * @return {module:model/TimeSeriesGroup} The populated <code>TimeSeriesGroup</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesGroup();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('timeSeriesCategory')) {
                obj['timeSeriesCategory'] = TimeSeriesCategory.constructFromObject(data['timeSeriesCategory']);
            }
            if (data.hasOwnProperty('officeId')) {
                obj['officeId'] = ApiClient.convertToType(data['officeId'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('sharedAliasId')) {
                obj['sharedAliasId'] = ApiClient.convertToType(data['sharedAliasId'], 'String');
            }
            if (data.hasOwnProperty('sharedRefTsId')) {
                obj['sharedRefTsId'] = ApiClient.convertToType(data['sharedRefTsId'], 'String');
            }
            if (data.hasOwnProperty('assignedTimeSeries')) {
                obj['assignedTimeSeries'] = ApiClient.convertToType(data['assignedTimeSeries'], [AssignedTimeSeries]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesGroup</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesGroup</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `timeSeriesCategory`
        if (data['timeSeriesCategory']) { // data not null
          TimeSeriesCategory.validateJSON(data['timeSeriesCategory']);
        }
        // ensure the json data is a string
        if (data['officeId'] && !(typeof data['officeId'] === 'string' || data['officeId'] instanceof String)) {
            throw new Error("Expected the field `officeId` to be a primitive type in the JSON string but got " + data['officeId']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['sharedAliasId'] && !(typeof data['sharedAliasId'] === 'string' || data['sharedAliasId'] instanceof String)) {
            throw new Error("Expected the field `sharedAliasId` to be a primitive type in the JSON string but got " + data['sharedAliasId']);
        }
        // ensure the json data is a string
        if (data['sharedRefTsId'] && !(typeof data['sharedRefTsId'] === 'string' || data['sharedRefTsId'] instanceof String)) {
            throw new Error("Expected the field `sharedRefTsId` to be a primitive type in the JSON string but got " + data['sharedRefTsId']);
        }
        if (data['assignedTimeSeries']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assignedTimeSeries'])) {
                throw new Error("Expected the field `assignedTimeSeries` to be an array in the JSON data but got " + data['assignedTimeSeries']);
            }
            // validate the optional field `assignedTimeSeries` (array)
            for (const item of data['assignedTimeSeries']) {
                AssignedTimeSeries.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} id
 */
TimeSeriesGroup.prototype['id'] = undefined;

/**
 * @member {module:model/TimeSeriesCategory} timeSeriesCategory
 */
TimeSeriesGroup.prototype['timeSeriesCategory'] = undefined;

/**
 * @member {String} officeId
 */
TimeSeriesGroup.prototype['officeId'] = undefined;

/**
 * @member {String} description
 */
TimeSeriesGroup.prototype['description'] = undefined;

/**
 * @member {String} sharedAliasId
 */
TimeSeriesGroup.prototype['sharedAliasId'] = undefined;

/**
 * @member {String} sharedRefTsId
 */
TimeSeriesGroup.prototype['sharedRefTsId'] = undefined;

/**
 * @member {Array.<module:model/AssignedTimeSeries>} assignedTimeSeries
 */
TimeSeriesGroup.prototype['assignedTimeSeries'] = undefined;






export default TimeSeriesGroup;

