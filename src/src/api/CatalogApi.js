/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Catalog from '../model/Catalog';
import CatalogableEndpoint from '../model/CatalogableEndpoint';
import CdaError from '../model/CdaError';
import UnitSystem from '../model/UnitSystem';

/**
* Catalog service.
* @module api/CatalogApi
* @version 1.4.0
*/
export default class CatalogApi {

    /**
    * Constructs a new CatalogApi. 
    * @alias module:api/CatalogApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get cwmsData catalog with dataset
     * @param {module:model/CatalogableEndpoint} dataset A list of what data? E.g. Timeseries, Locations, Ratings, etc
     * @param {Object} opts Optional parameters
     * @param {String} [page] This end point can return a lot of data, this identifies where in the request you are.
     * @param {Number} [pageSize] How many entires per page returned. Default 500.
     * @param {module:model/UnitSystem} [unitSystem] Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.
     * @param {String} [office] 3-4 letter office name representing the district you want to isolate data to.
     * @param {String} [like] Posix <a href=\"regexp.html\">regular expression</a> matching against the id
     * @param {String} [timeseriesCategoryLike] Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries category id
     * @param {String} [timeseriesGroupLike] Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries group id
     * @param {String} [locationCategoryLike] Posix <a href=\"regexp.html\">regular expression</a> matching against the location category id
     * @param {String} [locationGroupLike] Posix <a href=\"regexp.html\">regular expression</a> matching against the location group id
     * @param {String} [boundingOfficeLike] Posix <a href=\"regexp.html\">regular expression</a> matching against the location bounding office. When this field is used items with no bounding office set will not be present in results.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/Catalog} and HTTP response
     */
    getCwmsDataCatalogWithDatasetWithHttpInfo(dataset, opts) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'dataset' is set
      if (dataset === undefined || dataset === null) {
        throw new Error("Missing the required parameter 'dataset' when calling getCwmsDataCatalogWithDataset");
      }

      let pathParams = {
        'dataset': dataset
      };
      let queryParams = {
        'page': opts['page'],
        'page-size': opts['pageSize'],
        'unit-system': opts['unitSystem'],
        'office': opts['office'],
        'like': opts['like'],
        'timeseries-category-like': opts['timeseriesCategoryLike'],
        'timeseries-group-like': opts['timeseriesGroupLike'],
        'location-category-like': opts['locationCategoryLike'],
        'location-group-like': opts['locationGroupLike'],
        'bounding-office-like': opts['boundingOfficeLike']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/json;version=2', 'application/xml'];
      let returnType = Catalog;
      return this.apiClient.callApi(
        '/cwms-data/catalog/{dataset}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get cwmsData catalog with dataset
     * @param {module:model/CatalogableEndpoint} dataset A list of what data? E.g. Timeseries, Locations, Ratings, etc
     * @param {Object} opts Optional parameters
     * @param {String} opts.page This end point can return a lot of data, this identifies where in the request you are.
     * @param {Number} opts.pageSize How many entires per page returned. Default 500.
     * @param {module:model/UnitSystem} opts.unitSystem Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.
     * @param {String} opts.office 3-4 letter office name representing the district you want to isolate data to.
     * @param {String} opts.like Posix <a href=\"regexp.html\">regular expression</a> matching against the id
     * @param {String} opts.timeseriesCategoryLike Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries category id
     * @param {String} opts.timeseriesGroupLike Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries group id
     * @param {String} opts.locationCategoryLike Posix <a href=\"regexp.html\">regular expression</a> matching against the location category id
     * @param {String} opts.locationGroupLike Posix <a href=\"regexp.html\">regular expression</a> matching against the location group id
     * @param {String} opts.boundingOfficeLike Posix <a href=\"regexp.html\">regular expression</a> matching against the location bounding office. When this field is used items with no bounding office set will not be present in results.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/Catalog}
     */
    getCwmsDataCatalogWithDataset(dataset, opts) {
      return this.getCwmsDataCatalogWithDatasetWithHttpInfo(dataset, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
