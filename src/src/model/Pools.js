/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Pool from './Pool';

/**
 * The Pools model module.
 * @module model/Pools
 * @version 1.4.0
 */
class Pools {
    /**
     * Constructs a new <code>Pools</code>.
     * @alias module:model/Pools
     */
    constructor() { 
        
        Pools.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Pools</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pools} obj Optional instance to populate.
     * @return {module:model/Pools} The populated <code>Pools</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pools();

            if (data.hasOwnProperty('page')) {
                obj['page'] = ApiClient.convertToType(data['page'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('pools')) {
                obj['pools'] = ApiClient.convertToType(data['pools'], [Pool]);
            }
            if (data.hasOwnProperty('next-page')) {
                obj['next-page'] = ApiClient.convertToType(data['next-page'], 'String');
            }
            if (data.hasOwnProperty('page-size')) {
                obj['page-size'] = ApiClient.convertToType(data['page-size'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pools</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pools</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['page'] && !(typeof data['page'] === 'string' || data['page'] instanceof String)) {
            throw new Error("Expected the field `page` to be a primitive type in the JSON string but got " + data['page']);
        }
        if (data['pools']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['pools'])) {
                throw new Error("Expected the field `pools` to be an array in the JSON data but got " + data['pools']);
            }
            // validate the optional field `pools` (array)
            for (const item of data['pools']) {
                Pool.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['next-page'] && !(typeof data['next-page'] === 'string' || data['next-page'] instanceof String)) {
            throw new Error("Expected the field `next-page` to be a primitive type in the JSON string but got " + data['next-page']);
        }

        return true;
    }


}



/**
 * The cursor to the current page of data
 * @member {String} page
 */
Pools.prototype['page'] = undefined;

/**
 * The total number of records retrieved; null or not present if not supported or unknown
 * @member {Number} total
 */
Pools.prototype['total'] = undefined;

/**
 * List of retrieved pools
 * @member {Array.<module:model/Pool>} pools
 */
Pools.prototype['pools'] = undefined;

/**
 * The cursor to the next page of data; null if there is no more data
 * @member {String} next-page
 */
Pools.prototype['next-page'] = undefined;

/**
 * The number of records fetched per-page; this may be larger than the number of records actually retrieved
 * @member {Number} page-size
 */
Pools.prototype['page-size'] = undefined;






export default Pools;

