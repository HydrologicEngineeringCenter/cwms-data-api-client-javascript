/* tslint:disable */
/* eslint-disable */
/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Clob } from './Clob';
import {
    ClobFromJSON,
    ClobFromJSONTyped,
    ClobToJSON,
} from './Clob';

/**
 * 
 * @export
 * @interface Clobs
 */
export interface Clobs {
    /**
     * List of retrieved clobs
     * @type {Array<Clob>}
     * @memberof Clobs
     */
    clobs?: Array<Clob>;
    /**
     * The cursor to the next page of data; null if there is no more data
     * @type {string}
     * @memberof Clobs
     */
    readonly nextPage?: string;
    /**
     * The cursor to the current page of data
     * @type {string}
     * @memberof Clobs
     */
    readonly page?: string;
    /**
     * The number of records fetched per-page; this may be larger than the number of records actually retrieved
     * @type {number}
     * @memberof Clobs
     */
    readonly pageSize?: number;
    /**
     * The total number of records retrieved; null or not present if not supported or unknown
     * @type {number}
     * @memberof Clobs
     */
    readonly total?: number;
}

/**
 * Check if a given object implements the Clobs interface.
 */
export function instanceOfClobs(value: object): boolean {
    return true;
}

export function ClobsFromJSON(json: any): Clobs {
    return ClobsFromJSONTyped(json, false);
}

export function ClobsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Clobs {
    if (json == null) {
        return json;
    }
    return {
        
        'clobs': json['clobs'] == null ? undefined : ((json['clobs'] as Array<any>).map(ClobFromJSON)),
        'nextPage': json['next-page'] == null ? undefined : json['next-page'],
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['page-size'] == null ? undefined : json['page-size'],
        'total': json['total'] == null ? undefined : json['total'],
    };
}

export function ClobsToJSON(value?: Clobs | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'clobs': value['clobs'] == null ? undefined : ((value['clobs'] as Array<any>).map(ClobToJSON)),
    };
}

