/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.cwmsjs);
  }
}(this, function(expect, cwmsjs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new cwmsjs.Location();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Location', function() {
    it('should create an instance of Location', function() {
      // uncomment below and update the code to test Location
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be.a(cwmsjs.Location);
    });

    it('should have the property officeId (base name: "office-id")', function() {
      // uncomment below and update the code to test the property officeId
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property publicName (base name: "public-name")', function() {
      // uncomment below and update the code to test the property publicName
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property longName (base name: "long-name")', function() {
      // uncomment below and update the code to test the property longName
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property timezoneName (base name: "timezone-name")', function() {
      // uncomment below and update the code to test the property timezoneName
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property locationType (base name: "location-type")', function() {
      // uncomment below and update the code to test the property locationType
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property locationKind (base name: "location-kind")', function() {
      // uncomment below and update the code to test the property locationKind
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property nation (base name: "nation")', function() {
      // uncomment below and update the code to test the property nation
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property stateInitial (base name: "state-initial")', function() {
      // uncomment below and update the code to test the property stateInitial
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property countyName (base name: "county-name")', function() {
      // uncomment below and update the code to test the property countyName
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property nearestCity (base name: "nearest-city")', function() {
      // uncomment below and update the code to test the property nearestCity
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property horizontalDatum (base name: "horizontal-datum")', function() {
      // uncomment below and update the code to test the property horizontalDatum
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property publishedLongitude (base name: "published-longitude")', function() {
      // uncomment below and update the code to test the property publishedLongitude
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property publishedLatitude (base name: "published-latitude")', function() {
      // uncomment below and update the code to test the property publishedLatitude
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property verticalDatum (base name: "vertical-datum")', function() {
      // uncomment below and update the code to test the property verticalDatum
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property elevation (base name: "elevation")', function() {
      // uncomment below and update the code to test the property elevation
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property mapLabel (base name: "map-label")', function() {
      // uncomment below and update the code to test the property mapLabel
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

    it('should have the property boundingOfficeId (base name: "bounding-office-id")', function() {
      // uncomment below and update the code to test the property boundingOfficeId
      //var instance = new cwmsjs.Location();
      //expect(instance).to.be();
    });

  });

}));
