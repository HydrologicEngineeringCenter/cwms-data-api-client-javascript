/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.cwmsjs);
  }
}(this, function(expect, cwmsjs) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new cwmsjs.CatalogEntry();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogEntry', function() {
    it('should create an instance of CatalogEntry', function() {
      // uncomment below and update the code to test CatalogEntry
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be.a(cwmsjs.CatalogEntry);
    });

    it('should have the property office (base name: "office")', function() {
      // uncomment below and update the code to test the property office
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property nearestCity (base name: "nearestCity")', function() {
      // uncomment below and update the code to test the property nearestCity
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property publicName (base name: "publicName")', function() {
      // uncomment below and update the code to test the property publicName
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property longName (base name: "longName")', function() {
      // uncomment below and update the code to test the property longName
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property kind (base name: "kind")', function() {
      // uncomment below and update the code to test the property kind
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "timeZone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property latitude (base name: "latitude")', function() {
      // uncomment below and update the code to test the property latitude
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property longitude (base name: "longitude")', function() {
      // uncomment below and update the code to test the property longitude
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property publishedLatitude (base name: "publishedLatitude")', function() {
      // uncomment below and update the code to test the property publishedLatitude
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property publishedLongitude (base name: "publishedLongitude")', function() {
      // uncomment below and update the code to test the property publishedLongitude
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property horizontalDatum (base name: "horizontalDatum")', function() {
      // uncomment below and update the code to test the property horizontalDatum
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property elevation (base name: "elevation")', function() {
      // uncomment below and update the code to test the property elevation
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property unit (base name: "unit")', function() {
      // uncomment below and update the code to test the property unit
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property verticalDatum (base name: "verticalDatum")', function() {
      // uncomment below and update the code to test the property verticalDatum
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property nation (base name: "nation")', function() {
      // uncomment below and update the code to test the property nation
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property county (base name: "county")', function() {
      // uncomment below and update the code to test the property county
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property boundingOffice (base name: "boundingOffice")', function() {
      // uncomment below and update the code to test the property boundingOffice
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property mapLabel (base name: "mapLabel")', function() {
      // uncomment below and update the code to test the property mapLabel
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property aliases (base name: "aliases")', function() {
      // uncomment below and update the code to test the property aliases
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property units (base name: "units")', function() {
      // uncomment below and update the code to test the property units
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property interval (base name: "interval")', function() {
      // uncomment below and update the code to test the property interval
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property intervalOffset (base name: "intervalOffset")', function() {
      // uncomment below and update the code to test the property intervalOffset
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

    it('should have the property extents (base name: "extents")', function() {
      // uncomment below and update the code to test the property extents
      //var instance = new cwmsjs.CatalogEntry();
      //expect(instance).to.be();
    });

  });

}));
