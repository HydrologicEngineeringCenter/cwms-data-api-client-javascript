"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TimeseriesToJSON = exports.TimeseriesFromJSONTyped = exports.TimeseriesFromJSON = exports.instanceOfTimeseries = exports.TimeseriesDateVersionTypeEnum = void 0;
const TimeseriesColumn_1 = require("./TimeseriesColumn");
const TimeseriesInterval_1 = require("./TimeseriesInterval");
const VerticalDatumInfo_1 = require("./VerticalDatumInfo");
/**
 * @export
 */
exports.TimeseriesDateVersionTypeEnum = {
    MaxAggregate: 'MAX_AGGREGATE',
    SingleVersion: 'SINGLE_VERSION',
    Unversioned: 'UNVERSIONED'
};
/**
 * Check if a given object implements the Timeseries interface.
 */
function instanceOfTimeseries(value) {
    if (!('units' in value))
        return false;
    return true;
}
exports.instanceOfTimeseries = instanceOfTimeseries;
function TimeseriesFromJSON(json) {
    return TimeseriesFromJSONTyped(json, false);
}
exports.TimeseriesFromJSON = TimeseriesFromJSON;
function TimeseriesFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'begin': json['begin'] == null ? undefined : (new Date(json['begin'])),
        'dateVersionType': json['date-version-type'] == null ? undefined : json['date-version-type'],
        'end': json['end'] == null ? undefined : (new Date(json['end'])),
        'interval': json['interval'] == null ? undefined : (0, TimeseriesInterval_1.TimeseriesIntervalFromJSON)(json['interval']),
        'intervalOffset': json['interval-offset'] == null ? undefined : json['interval-offset'],
        'name': json['name'] == null ? undefined : json['name'],
        'nextPage': json['next-page'] == null ? undefined : json['next-page'],
        'officeId': json['office-id'] == null ? undefined : json['office-id'],
        'page': json['page'] == null ? undefined : json['page'],
        'pageSize': json['page-size'] == null ? undefined : json['page-size'],
        'timeZone': json['time-zone'] == null ? undefined : json['time-zone'],
        'total': json['total'] == null ? undefined : json['total'],
        'units': json['units'],
        'valueColumns': json['value-columns'] == null ? undefined : (json['value-columns'].map(TimeseriesColumn_1.TimeseriesColumnFromJSON)),
        'values': json['values'] == null ? undefined : json['values'],
        'versionDate': json['version-date'] == null ? undefined : (new Date(json['version-date'])),
        'verticalDatumInfo': json['vertical-datum-info'] == null ? undefined : (0, VerticalDatumInfo_1.VerticalDatumInfoFromJSON)(json['vertical-datum-info']),
    };
}
exports.TimeseriesFromJSONTyped = TimeseriesFromJSONTyped;
function TimeseriesToJSON(value) {
    if (value == null) {
        return value;
    }
    return {
        'date-version-type': value['dateVersionType'],
        'interval': (0, TimeseriesInterval_1.TimeseriesIntervalToJSON)(value['interval']),
        'name': value['name'],
        'office-id': value['officeId'],
        'units': value['units'],
        'values': value['values'],
        'version-date': value['versionDate'] == null ? undefined : ((value['versionDate']).toISOString()),
        'vertical-datum-info': (0, VerticalDatumInfo_1.VerticalDatumInfoToJSON)(value['verticalDatumInfo']),
    };
}
exports.TimeseriesToJSON = TimeseriesToJSON;
