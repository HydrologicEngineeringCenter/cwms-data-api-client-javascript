/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { Location } from '../models/index';
export interface DeleteCwmsDataLocationsWithLocationIdRequest {
    locationId: string;
    office?: string;
}
export interface GetLocationsRequest {
    names?: string;
    office?: string;
    unit?: string;
    datum?: string;
    format?: string;
}
export interface GetLocationsWithLocationIdRequest {
    locationId: string;
    office: string;
    unit?: string;
}
export interface PatchCwmsDataLocationsWithLocationIdRequest {
    locationId: string;
    location: Location;
}
export interface PostCwmsDataLocationsRequest {
    location: Location;
}
/**
 *
 */
export declare class LocationsApi extends runtime.BaseAPI {
    /**
     * Delete CWMS Location
     * Delete CwmsData locations with locationId
     */
    deleteCwmsDataLocationsWithLocationIdRaw(requestParameters: DeleteCwmsDataLocationsWithLocationIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Delete CWMS Location
     * Delete CwmsData locations with locationId
     */
    deleteCwmsDataLocationsWithLocationId(requestParameters: DeleteCwmsDataLocationsWithLocationIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Returns CWMS Location Data.  The Catalog end-point is also capable of retrieving lists of locations and can filter on additional fields.
     * Get CwmsData locations
     */
    getLocationsRaw(requestParameters: GetLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Location>>>;
    /**
     * Returns CWMS Location Data.  The Catalog end-point is also capable of retrieving lists of locations and can filter on additional fields.
     * Get CwmsData locations
     */
    getLocations(requestParameters?: GetLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Location>>;
    /**
     * Returns CWMS Location Data
     * Get CwmsData locations with locationId
     */
    getLocationsWithLocationIdRaw(requestParameters: GetLocationsWithLocationIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Location>>;
    /**
     * Returns CWMS Location Data
     * Get CwmsData locations with locationId
     */
    getLocationsWithLocationId(requestParameters: GetLocationsWithLocationIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Location>;
    /**
     * Update CWMS Location
     * Patch CwmsData locations with locationId
     */
    patchCwmsDataLocationsWithLocationIdRaw(requestParameters: PatchCwmsDataLocationsWithLocationIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Update CWMS Location
     * Patch CwmsData locations with locationId
     */
    patchCwmsDataLocationsWithLocationId(requestParameters: PatchCwmsDataLocationsWithLocationIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Create new CWMS Location
     * Post CwmsData locations
     */
    postCwmsDataLocationsRaw(requestParameters: PostCwmsDataLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>>;
    /**
     * Create new CWMS Location
     * Post CwmsData locations
     */
    postCwmsDataLocations(requestParameters: PostCwmsDataLocationsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
}
