"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 1.12.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LevelsApi = void 0;
const runtime = require("../runtime");
const index_1 = require("../models/index");
/**
 *
 */
class LevelsApi extends runtime.BaseAPI {
    /**
     * Delete CWMS Location Level
     * Delete cwmsData levels with levelId
     */
    deleteCwmsDataLevelsWithLevelIdRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['levelId'] == null) {
                throw new runtime.RequiredError('levelId', 'Required parameter "levelId" was null or undefined when calling deleteCwmsDataLevelsWithLevelId().');
            }
            const queryParameters = {};
            if (requestParameters['cascadeDelete'] != null) {
                queryParameters['cascade-delete'] = requestParameters['cascadeDelete'];
            }
            if (requestParameters['office'] != null) {
                queryParameters['office'] = requestParameters['office'];
            }
            if (requestParameters['effectiveDate'] != null) {
                queryParameters['effective-date'] = requestParameters['effectiveDate'];
            }
            if (requestParameters['timezone'] != null) {
                queryParameters['timezone'] = requestParameters['timezone'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // ApiKey authentication
            }
            const response = yield this.request({
                path: `/levels/{level-id}`.replace(`{${"level-id"}}`, encodeURIComponent(String(requestParameters['levelId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Delete CWMS Location Level
     * Delete cwmsData levels with levelId
     */
    deleteCwmsDataLevelsWithLevelId(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteCwmsDataLevelsWithLevelIdRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Deletes requested specified level id
     * Delete cwmsData specifiedLevels with specifiedLevelId
     */
    deleteCwmsDataSpecifiedLevelsWithSpecifiedLevelIdRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['specifiedLevelId'] == null) {
                throw new runtime.RequiredError('specifiedLevelId', 'Required parameter "specifiedLevelId" was null or undefined when calling deleteCwmsDataSpecifiedLevelsWithSpecifiedLevelId().');
            }
            if (requestParameters['office'] == null) {
                throw new runtime.RequiredError('office', 'Required parameter "office" was null or undefined when calling deleteCwmsDataSpecifiedLevelsWithSpecifiedLevelId().');
            }
            const queryParameters = {};
            if (requestParameters['office'] != null) {
                queryParameters['office'] = requestParameters['office'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // ApiKey authentication
            }
            const response = yield this.request({
                path: `/specified-levels/{specified-level-id}`.replace(`{${"specified-level-id"}}`, encodeURIComponent(String(requestParameters['specifiedLevelId']))),
                method: 'DELETE',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Deletes requested specified level id
     * Delete cwmsData specifiedLevels with specifiedLevelId
     */
    deleteCwmsDataSpecifiedLevelsWithSpecifiedLevelId(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.deleteCwmsDataSpecifiedLevelsWithSpecifiedLevelIdRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Get cwmsData levels
     */
    getCwmsDataLevelsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['levelIdMask'] != null) {
                queryParameters['level-id-mask'] = requestParameters['levelIdMask'];
            }
            if (requestParameters['office'] != null) {
                queryParameters['office'] = requestParameters['office'];
            }
            if (requestParameters['unit'] != null) {
                queryParameters['unit'] = requestParameters['unit'];
            }
            if (requestParameters['datum'] != null) {
                queryParameters['datum'] = requestParameters['datum'];
            }
            if (requestParameters['begin'] != null) {
                queryParameters['begin'] = requestParameters['begin'];
            }
            if (requestParameters['end'] != null) {
                queryParameters['end'] = requestParameters['end'];
            }
            if (requestParameters['timezone'] != null) {
                queryParameters['timezone'] = requestParameters['timezone'];
            }
            if (requestParameters['format'] != null) {
                queryParameters['format'] = requestParameters['format'];
            }
            if (requestParameters['page'] != null) {
                queryParameters['page'] = requestParameters['page'];
            }
            if (requestParameters['pageSize'] != null) {
                queryParameters['page-size'] = requestParameters['pageSize'];
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/levels`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response);
        });
    }
    /**
     * Get cwmsData levels
     */
    getCwmsDataLevels(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getCwmsDataLevelsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Retrieves requested Location Level
     * Get cwmsData levels with levelId
     */
    getCwmsDataLevelsWithLevelIdRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['levelId'] == null) {
                throw new runtime.RequiredError('levelId', 'Required parameter "levelId" was null or undefined when calling getCwmsDataLevelsWithLevelId().');
            }
            if (requestParameters['office'] == null) {
                throw new runtime.RequiredError('office', 'Required parameter "office" was null or undefined when calling getCwmsDataLevelsWithLevelId().');
            }
            if (requestParameters['effectiveDate'] == null) {
                throw new runtime.RequiredError('effectiveDate', 'Required parameter "effectiveDate" was null or undefined when calling getCwmsDataLevelsWithLevelId().');
            }
            const queryParameters = {};
            if (requestParameters['office'] != null) {
                queryParameters['office'] = requestParameters['office'];
            }
            if (requestParameters['effectiveDate'] != null) {
                queryParameters['effective-date'] = requestParameters['effectiveDate'];
            }
            if (requestParameters['timezone'] != null) {
                queryParameters['timezone'] = requestParameters['timezone'];
            }
            if (requestParameters['unit'] != null) {
                queryParameters['unit'] = requestParameters['unit'];
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/levels/{level-id}`.replace(`{${"level-id"}}`, encodeURIComponent(String(requestParameters['levelId']))),
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.LocationLevelFromJSON)(jsonValue));
        });
    }
    /**
     * Retrieves requested Location Level
     * Get cwmsData levels with levelId
     */
    getCwmsDataLevelsWithLevelId(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getCwmsDataLevelsWithLevelIdRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Get cwmsData specifiedLevels
     */
    getCwmsDataSpecifiedLevelsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const queryParameters = {};
            if (requestParameters['office'] != null) {
                queryParameters['office'] = requestParameters['office'];
            }
            if (requestParameters['templateIdMask'] != null) {
                queryParameters['template-id-mask'] = requestParameters['templateIdMask'];
            }
            const headerParameters = {};
            const response = yield this.request({
                path: `/specified-levels`,
                method: 'GET',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.SpecifiedLevelFromJSON)(jsonValue));
        });
    }
    /**
     * Get cwmsData specifiedLevels
     */
    getCwmsDataSpecifiedLevels(requestParameters = {}, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            const response = yield this.getCwmsDataSpecifiedLevelsRaw(requestParameters, initOverrides);
            return yield response.value();
        });
    }
    /**
     * Update CWMS Location Level
     * Patch cwmsData levels with levelId
     */
    patchCwmsDataLevelsWithLevelIdRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['levelId'] == null) {
                throw new runtime.RequiredError('levelId', 'Required parameter "levelId" was null or undefined when calling patchCwmsDataLevelsWithLevelId().');
            }
            if (requestParameters['locationLevel'] == null) {
                throw new runtime.RequiredError('locationLevel', 'Required parameter "locationLevel" was null or undefined when calling patchCwmsDataLevelsWithLevelId().');
            }
            const queryParameters = {};
            if (requestParameters['effectiveDate'] != null) {
                queryParameters['effective-date'] = requestParameters['effectiveDate'];
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // ApiKey authentication
            }
            const response = yield this.request({
                path: `/levels/{level-id}`.replace(`{${"level-id"}}`, encodeURIComponent(String(requestParameters['levelId']))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.LocationLevelToJSON)(requestParameters['locationLevel']),
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Update CWMS Location Level
     * Patch cwmsData levels with levelId
     */
    patchCwmsDataLevelsWithLevelId(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.patchCwmsDataLevelsWithLevelIdRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Renames the requested specified level id
     * Patch cwmsData specifiedLevels with specifiedLevelId
     */
    patchCwmsDataSpecifiedLevelsWithSpecifiedLevelIdRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['specifiedLevelId'] == null) {
                throw new runtime.RequiredError('specifiedLevelId', 'Required parameter "specifiedLevelId" was null or undefined when calling patchCwmsDataSpecifiedLevelsWithSpecifiedLevelId().');
            }
            if (requestParameters['specifiedLevelId2'] == null) {
                throw new runtime.RequiredError('specifiedLevelId2', 'Required parameter "specifiedLevelId2" was null or undefined when calling patchCwmsDataSpecifiedLevelsWithSpecifiedLevelId().');
            }
            if (requestParameters['office'] == null) {
                throw new runtime.RequiredError('office', 'Required parameter "office" was null or undefined when calling patchCwmsDataSpecifiedLevelsWithSpecifiedLevelId().');
            }
            const queryParameters = {};
            if (requestParameters['specifiedLevelId2'] != null) {
                queryParameters['specified-level-id'] = requestParameters['specifiedLevelId2'];
            }
            if (requestParameters['office'] != null) {
                queryParameters['office'] = requestParameters['office'];
            }
            const headerParameters = {};
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // ApiKey authentication
            }
            const response = yield this.request({
                path: `/specified-levels/{specified-level-id}`.replace(`{${"specified-level-id"}}`, encodeURIComponent(String(requestParameters['specifiedLevelId']))),
                method: 'PATCH',
                headers: headerParameters,
                query: queryParameters,
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Renames the requested specified level id
     * Patch cwmsData specifiedLevels with specifiedLevelId
     */
    patchCwmsDataSpecifiedLevelsWithSpecifiedLevelId(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.patchCwmsDataSpecifiedLevelsWithSpecifiedLevelIdRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Create new CWMS Location Level
     * Post cwmsData levels
     */
    postCwmsDataLevelsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['locationLevel'] == null) {
                throw new runtime.RequiredError('locationLevel', 'Required parameter "locationLevel" was null or undefined when calling postCwmsDataLevels().');
            }
            const queryParameters = {};
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // ApiKey authentication
            }
            const response = yield this.request({
                path: `/levels`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.LocationLevelToJSON)(requestParameters['locationLevel']),
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Create new CWMS Location Level
     * Post cwmsData levels
     */
    postCwmsDataLevels(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.postCwmsDataLevelsRaw(requestParameters, initOverrides);
        });
    }
    /**
     * Create new SpecifiedLevel
     * Post cwmsData specifiedLevels
     */
    postCwmsDataSpecifiedLevelsRaw(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            if (requestParameters['specifiedLevel'] == null) {
                throw new runtime.RequiredError('specifiedLevel', 'Required parameter "specifiedLevel" was null or undefined when calling postCwmsDataSpecifiedLevels().');
            }
            const queryParameters = {};
            if (requestParameters['failIfExists'] != null) {
                queryParameters['fail-if-exists'] = requestParameters['failIfExists'];
            }
            const headerParameters = {};
            headerParameters['Content-Type'] = 'application/json;version=2';
            if (this.configuration && this.configuration.apiKey) {
                headerParameters["Authorization"] = yield this.configuration.apiKey("Authorization"); // ApiKey authentication
            }
            const response = yield this.request({
                path: `/specified-levels`,
                method: 'POST',
                headers: headerParameters,
                query: queryParameters,
                body: (0, index_1.SpecifiedLevelToJSON)(requestParameters['specifiedLevel']),
            }, initOverrides);
            return new runtime.VoidApiResponse(response);
        });
    }
    /**
     * Create new SpecifiedLevel
     * Post cwmsData specifiedLevels
     */
    postCwmsDataSpecifiedLevels(requestParameters, initOverrides) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.postCwmsDataSpecifiedLevelsRaw(requestParameters, initOverrides);
        });
    }
}
exports.LevelsApi = LevelsApi;
