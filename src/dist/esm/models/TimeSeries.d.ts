/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { TimeseriesColumn } from './TimeseriesColumn';
import type { TimeseriesInterval } from './TimeseriesInterval';
import type { TimeseriesValuesInnerInner } from './TimeseriesValuesInnerInner';
import type { VerticalDatumInfo } from './VerticalDatumInfo';
/**
 *
 * @export
 * @interface Timeseries
 */
export interface Timeseries {
    /**
     * The requested start time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')
     * @type {Date}
     * @memberof Timeseries
     */
    readonly begin?: Date;
    /**
     * Version type specifies the type of timeseries response to be received. Can be max aggregate or single version. Max aggregate cannot be run if version date field is specified.
     * @type {string}
     * @memberof Timeseries
     */
    dateVersionType?: TimeseriesDateVersionTypeEnum;
    /**
     * The requested end time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')
     * @type {Date}
     * @memberof Timeseries
     */
    readonly end?: Date;
    /**
     *
     * @type {TimeseriesInterval}
     * @memberof Timeseries
     */
    interval?: TimeseriesInterval;
    /**
     * Offset from top of interval
     * @type {number}
     * @memberof Timeseries
     */
    readonly intervalOffset?: number;
    /**
     * Time-series name
     * @type {string}
     * @memberof Timeseries
     */
    name?: string;
    /**
     * The cursor to the next page of data; null if there is no more data
     * @type {string}
     * @memberof Timeseries
     */
    readonly nextPage?: string;
    /**
     * Office ID that owns the time-series
     * @type {string}
     * @memberof Timeseries
     */
    officeId?: string;
    /**
     * The cursor to the current page of data
     * @type {string}
     * @memberof Timeseries
     */
    readonly page?: string;
    /**
     * The number of records fetched per-page; this may be larger than the number of records actually retrieved
     * @type {number}
     * @memberof Timeseries
     */
    readonly pageSize?: number;
    /**
     * Only on 21.1.1 Database. The timezone the Interval Offset is from.
     * @type {string}
     * @memberof Timeseries
     */
    readonly timeZone?: string;
    /**
     * The total number of records retrieved; null or not present if not supported or unknown
     * @type {number}
     * @memberof Timeseries
     */
    readonly total?: number;
    /**
     * The units of the time series data
     * @type {string}
     * @memberof Timeseries
     */
    units: string;
    /**
     *
     * @type {Array<TimeseriesColumn>}
     * @memberof Timeseries
     */
    readonly valueColumns?: Array<TimeseriesColumn>;
    /**
     *
     * @type {Array<Array<TimeseriesValuesInnerInner>>}
     * @memberof Timeseries
     */
    values?: Array<Array<TimeseriesValuesInnerInner>>;
    /**
     * The version date of the time series trace
     * @type {Date}
     * @memberof Timeseries
     */
    versionDate?: Date;
    /**
     *
     * @type {VerticalDatumInfo}
     * @memberof Timeseries
     */
    verticalDatumInfo?: VerticalDatumInfo;
}
/**
 * @export
 */
export declare const TimeseriesDateVersionTypeEnum: {
    readonly MaxAggregate: "MAX_AGGREGATE";
    readonly SingleVersion: "SINGLE_VERSION";
    readonly Unversioned: "UNVERSIONED";
};
export type TimeseriesDateVersionTypeEnum = typeof TimeseriesDateVersionTypeEnum[keyof typeof TimeseriesDateVersionTypeEnum];
/**
 * Check if a given object implements the Timeseries interface.
 */
export declare function instanceOfTimeseries(value: object): boolean;
export declare function TimeseriesFromJSON(json: any): Timeseries;
export declare function TimeseriesFromJSONTyped(json: any, ignoreDiscriminator: boolean): Timeseries;
export declare function TimeseriesToJSON(value?: Timeseries | null): any;
