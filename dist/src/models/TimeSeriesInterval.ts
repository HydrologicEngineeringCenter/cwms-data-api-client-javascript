/* tslint:disable */
/* eslint-disable */
/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TimeSeriesIntervalUnitsInner } from './TimeSeriesIntervalUnitsInner';
import {
    TimeSeriesIntervalUnitsInnerFromJSON,
    TimeSeriesIntervalUnitsInnerFromJSONTyped,
    TimeSeriesIntervalUnitsInnerToJSON,
} from './TimeSeriesIntervalUnitsInner';

/**
 * The interval of the time-series, in ISO-8601 duration format
 * @export
 * @interface TimeSeriesInterval
 */
export interface TimeSeriesInterval {
    /**
     * 
     * @type {number}
     * @memberof TimeSeriesInterval
     */
    seconds?: number;
    /**
     * 
     * @type {number}
     * @memberof TimeSeriesInterval
     */
    nano?: number;
    /**
     * 
     * @type {boolean}
     * @memberof TimeSeriesInterval
     */
    zero?: boolean;
    /**
     * 
     * @type {Array<TimeSeriesIntervalUnitsInner>}
     * @memberof TimeSeriesInterval
     */
    units?: Array<TimeSeriesIntervalUnitsInner>;
    /**
     * 
     * @type {boolean}
     * @memberof TimeSeriesInterval
     */
    negative?: boolean;
}

/**
 * Check if a given object implements the TimeSeriesInterval interface.
 */
export function instanceOfTimeSeriesInterval(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TimeSeriesIntervalFromJSON(json: any): TimeSeriesInterval {
    return TimeSeriesIntervalFromJSONTyped(json, false);
}

export function TimeSeriesIntervalFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeSeriesInterval {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'seconds': !exists(json, 'seconds') ? undefined : json['seconds'],
        'nano': !exists(json, 'nano') ? undefined : json['nano'],
        'zero': !exists(json, 'zero') ? undefined : json['zero'],
        'units': !exists(json, 'units') ? undefined : ((json['units'] as Array<any>).map(TimeSeriesIntervalUnitsInnerFromJSON)),
        'negative': !exists(json, 'negative') ? undefined : json['negative'],
    };
}

export function TimeSeriesIntervalToJSON(value?: TimeSeriesInterval | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'seconds': value.seconds,
        'nano': value.nano,
        'zero': value.zero,
        'units': value.units === undefined ? undefined : ((value.units as Array<any>).map(TimeSeriesIntervalUnitsInnerToJSON)),
        'negative': value.negative,
    };
}

