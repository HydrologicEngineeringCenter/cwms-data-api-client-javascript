/* tslint:disable */
/* eslint-disable */
/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Stream } from './Stream';
import {
    StreamFromJSON,
    StreamFromJSONTyped,
    StreamToJSON,
} from './Stream';

/**
 * 
 * @export
 * @interface Basin
 */
export interface Basin {
    /**
     * Owning office of object.
     * @type {string}
     * @memberof Basin
     */
    officeId: string;
    /**
     * 
     * @type {string}
     * @memberof Basin
     */
    basinName?: string;
    /**
     * 
     * @type {Stream}
     * @memberof Basin
     */
    primaryStream?: Stream;
    /**
     * 
     * @type {number}
     * @memberof Basin
     */
    sortOrder?: number;
    /**
     * 
     * @type {number}
     * @memberof Basin
     */
    basinArea?: number;
    /**
     * 
     * @type {number}
     * @memberof Basin
     */
    contributingArea?: number;
    /**
     * 
     * @type {string}
     * @memberof Basin
     */
    parentBasinId?: string;
}

/**
 * Check if a given object implements the Basin interface.
 */
export function instanceOfBasin(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "officeId" in value;

    return isInstance;
}

export function BasinFromJSON(json: any): Basin {
    return BasinFromJSONTyped(json, false);
}

export function BasinFromJSONTyped(json: any, ignoreDiscriminator: boolean): Basin {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'officeId': json['office-id'],
        'basinName': !exists(json, 'basin-name') ? undefined : json['basin-name'],
        'primaryStream': !exists(json, 'primary-stream') ? undefined : StreamFromJSON(json['primary-stream']),
        'sortOrder': !exists(json, 'sort-order') ? undefined : json['sort-order'],
        'basinArea': !exists(json, 'basin-area') ? undefined : json['basin-area'],
        'contributingArea': !exists(json, 'contributing-area') ? undefined : json['contributing-area'],
        'parentBasinId': !exists(json, 'parent-basin-id') ? undefined : json['parent-basin-id'],
    };
}

export function BasinToJSON(value?: Basin | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'office-id': value.officeId,
        'basin-name': value.basinName,
        'primary-stream': StreamToJSON(value.primaryStream),
        'sort-order': value.sortOrder,
        'basin-area': value.basinArea,
        'contributing-area': value.contributingArea,
        'parent-basin-id': value.parentBasinId,
    };
}

