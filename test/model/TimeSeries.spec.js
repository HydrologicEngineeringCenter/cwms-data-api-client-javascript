/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CwmsRadar);
  }
}(this, function(expect, CwmsRadar) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CwmsRadar.TimeSeries();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TimeSeries', function() {
    it('should create an instance of TimeSeries', function() {
      // uncomment below and update the code to test TimeSeries
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be.a(CwmsRadar.TimeSeries);
    });

    it('should have the property begin (base name: "begin")', function() {
      // uncomment below and update the code to test the property begin
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property end (base name: "end")', function() {
      // uncomment below and update the code to test the property end
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property interval (base name: "interval")', function() {
      // uncomment below and update the code to test the property interval
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property intervalOffset (base name: "interval-offset")', function() {
      // uncomment below and update the code to test the property intervalOffset
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property nextPage (base name: "next-page")', function() {
      // uncomment below and update the code to test the property nextPage
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property officeId (base name: "office-id")', function() {
      // uncomment below and update the code to test the property officeId
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property page (base name: "page")', function() {
      // uncomment below and update the code to test the property page
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property pageSize (base name: "page-size")', function() {
      // uncomment below and update the code to test the property pageSize
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property timeZone (base name: "time-zone")', function() {
      // uncomment below and update the code to test the property timeZone
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property total (base name: "total")', function() {
      // uncomment below and update the code to test the property total
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property units (base name: "units")', function() {
      // uncomment below and update the code to test the property units
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property valueColumns (base name: "value-columns")', function() {
      // uncomment below and update the code to test the property valueColumns
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property values (base name: "values")', function() {
      // uncomment below and update the code to test the property values
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

    it('should have the property verticalDatumInfo (base name: "vertical-datum-info")', function() {
      // uncomment below and update the code to test the property verticalDatumInfo
      //var instance = new CwmsRadar.TimeSeries();
      //expect(instance).to.be();
    });

  });

}));
