{
    "openapi": "3.0.1",
    "info": {
        "title": "CWMS Data API",
        "description": "CWMS REST API for Data Retrieval",
        "version": "2.0.0"
      },
      "servers": [
        {
          "url": "https://cwms-data.usace.army.mil/cwms-data",
          "description": "PRIMARY production server"
        },
        {
          "url": "https://water.usace.army.mil/cwms-data",
          "description": "Alias for the PRIMARY production server"
        }
      ],
    "security": [
        {
            "MultipleAccessManager": []
        }
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Get swtData",
                "operationId": "getSwtData",
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/auth/keys/{key-name}": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get swtData auth keys with keyName",
                "description": "View specific key",
                "operationId": "getSwtDataAuthKeysWithKeyName",
                "parameters": [
                    {
                        "name": "key-name",
                        "in": "path",
                        "description": "Name of the specific key to get more information for. NOTE: Case-sensitive.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKey"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Delete swtData auth keys with keyName",
                "description": "Delete API key for a user",
                "operationId": "deleteSwtDataAuthKeysWithKeyName",
                "parameters": [
                    {
                        "name": "key-name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKey"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/auth/keys": {
            "get": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Get swtData auth keys",
                "description": "View all keys for the current user",
                "operationId": "getSwtDataAuthKeys",
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiKey"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Authorization"
                ],
                "summary": "Post swtData auth keys",
                "description": "Create a new API Key for user. The randomly generated key is returned to the caller. A provided key will be ignored.",
                "operationId": "postSwtDataAuthKeys",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKey"
                            }
                        }
                    }
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKey"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/location/category/{category-id}": {
            "get": {
                "tags": [
                    "Location Categories"
                ],
                "summary": "Get swtData location category with categoryId",
                "description": "Retrieves requested Location Category",
                "operationId": "getSwtDataLocationCategoryWithCategoryId",
                "parameters": [
                    {
                        "name": "category-id",
                        "in": "path",
                        "description": "Specifies the Category whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Location Category whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationCategory"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Location Categories"
                ],
                "summary": "Delete swtData location category with categoryId",
                "description": "Deletes requested location category",
                "operationId": "deleteSwtDataLocationCategoryWithCategoryId",
                "parameters": [
                    {
                        "name": "category-id",
                        "in": "path",
                        "description": "The location category to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location category to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cascade-delete",
                        "in": "query",
                        "description": "Specifies whether to delete any location groups in this location category. Default: false",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/location/category": {
            "get": {
                "tags": [
                    "Location Categories"
                ],
                "summary": "Get swtData location category",
                "description": "Returns CWMS Location Category Data",
                "operationId": "getSwtDataLocationCategory",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location category(ies) whose data is to be included in the response. If this field is not specified, matching location category information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationCategory"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Location Categories"
                ],
                "summary": "Post swtData location category",
                "description": "Create new LocationCategory",
                "operationId": "postSwtDataLocationCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationCategory"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/location/group/{group-id}": {
            "get": {
                "tags": [
                    "Location Groups"
                ],
                "summary": "Get swtData location group with groupId",
                "description": "Retrieves requested Location Group",
                "operationId": "getSwtDataLocationGroupWithGroupId",
                "parameters": [
                    {
                        "name": "group-id",
                        "in": "path",
                        "description": "Specifies the location_group whose data is to be included in the response",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location group whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Specifies the category containing the location group whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationGroup"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "$ref": "#/components/schemas/CsvV1LocationGroup"
                                }
                            },
                            "application/geo+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Location Groups"
                ],
                "summary": "Delete swtData location group with groupId",
                "description": "Deletes requested location group",
                "operationId": "deleteSwtDataLocationGroupWithGroupId",
                "parameters": [
                    {
                        "name": "group-id",
                        "in": "path",
                        "description": "The location group to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Specifies the location category of the location group to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location group to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cascade-delete",
                        "in": "query",
                        "description": "Specifies whether to specifies whether to unassign any location assignments. Default: false",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Location Groups"
                ],
                "summary": "Patch swtData location group with groupId",
                "description": "Update existing LocationGroup. Allows for renaming group, assigning new locations, and unassigning all locations from the group.",
                "operationId": "patchSwtDataLocationGroupWithGroupId",
                "parameters": [
                    {
                        "name": "group-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replace-assigned-locs",
                        "in": "query",
                        "description": "Specifies whether to unassign all existing locations before assigning new locations specified in the content body Default: false",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the user making the request. This is the office that the location, group, and category belong to. If the group and/or category belong to the CWMS office, this only identifies the location.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/location/group": {
            "get": {
                "tags": [
                    "Location Groups"
                ],
                "summary": "Get swtData location group",
                "description": "Returns CWMS Location Groups Data",
                "operationId": "getSwtDataLocationGroup",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location group(s) whose data is to be included in the response. If this field is not specified, matching location groups information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include-assigned",
                        "in": "query",
                        "description": "Include the assigned locations in the returned location groups. (default: false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "location-category-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the location category id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LocationGroup"
                                    }
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CsvV1LocationGroup"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Location Groups"
                ],
                "summary": "Post swtData location group",
                "description": "Create new LocationGroup",
                "operationId": "postSwtDataLocationGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/locations/{location-id}": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get swtData locations with locationId",
                "description": "Returns CWMS Location Data",
                "operationId": "getSwtDataLocationsWithLocationId",
                "parameters": [
                    {
                        "name": "location-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Specifies the unit or unit system of the response. Valid values for the unit field are: \n* `EN`  Specifies English unit system.  Location values will be in the default English units for their parameters.\n* `SI`  Specifies the SI unit system.  Location values will be in the default SI units for their parameters.\n* `Other`  Any unit returned in the response to the units URI request that is appropriate for the requested parameters.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the location was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            },
                            "application/xml;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Location"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete swtData locations with locationId",
                "description": "Delete CWMS Location",
                "operationId": "deleteSwtDataLocationsWithLocationId",
                "parameters": [
                    {
                        "name": "location-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location whose data is to be deleted. If this field is not specified, matching location information will be deleted from all offices.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the location was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Locations"
                ],
                "summary": "Patch swtData locations with locationId",
                "description": "Update CWMS Location",
                "operationId": "patchSwtDataLocationsWithLocationId",
                "parameters": [
                    {
                        "name": "location-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the location was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/locations": {
            "get": {
                "tags": [
                    "Locations"
                ],
                "summary": "Get swtData locations",
                "description": "Returns CWMS Location Data.  The Catalog end-point is also capable of retrieving lists of locations and can filter on additional fields.",
                "operationId": "getSwtDataLocations",
                "parameters": [
                    {
                        "name": "names",
                        "in": "query",
                        "description": "Specifies the name(s) of the location(s) whose data is to be included in the response.  When the `format` parameter is not provided and `application/json;version=2` is specified in the accept header, this parameter is a Posix <a href=\"regexp.html\">regular expression</a> matching against the id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Specifies the unit or unit system of the response. Valid values for the unit field are:\n* `EN`  Specifies English unit system.  Location level values will be in the default English units for their parameters.\n* `SI`  Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\n* `Other`  Any unit returned in the response to the units URI request that is appropriate for the requested parameters.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datum",
                        "in": "query",
                        "description": "Specifies the elevation datum of the response. This field affects only vertical datum. Valid values for this field are:\n* `NAVD88`  The elevation values will in the specified or default units above the NAVD-88 datum.\n* `NGVD29`  The elevation values will be in the specified or default units above the NGVD-29 datum.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the encoding format of the response. Valid values for the format field for this URI are:\n\n* `tab`\n* `csv`\n* `xml`\n* `wml2` (only if name field is specified)\n* `json` (default)\n\n* `geojson`",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Location"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "text/tab-separated-values": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "application/vnd.opengis.waterml+xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "application/geo+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Post swtData locations",
                "description": "Create new CWMS Location",
                "operationId": "postSwtDataLocations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/states": {
            "get": {
                "tags": [
                    "States"
                ],
                "summary": "Get swtData states",
                "operationId": "getSwtDataStates",
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of states.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/State"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/counties": {
            "get": {
                "tags": [
                    "Counties"
                ],
                "summary": "Get swtData counties",
                "operationId": "getSwtDataCounties",
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of counties.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/County"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/offices/{office}": {
            "get": {
                "tags": [
                    "Offices"
                ],
                "summary": "Get swtData offices with office",
                "operationId": "getSwtDataOfficesWithOffice",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The 3 letter office ID you want more information for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "(CWMS-Data-Format-Deprecated: 2024-11-01 in favor of Accept header) Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n* `tab`\r\n* `csv`\r\n* `xml`\r\n* `json` (default)",
                        "deprecated": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of offices.",
                        "content": {
                            "": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfficeFormatV1"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Office"
                                }
                            },
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfficeFormatV1"
                                }
                            },
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Office"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Office"
                                }
                            },
                            "application/xml;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfficeFormatV1"
                                }
                            },
                            "application/xml;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Office"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/offices": {
            "get": {
                "tags": [
                    "Offices"
                ],
                "summary": "Get swtData offices",
                "operationId": "getSwtDataOffices",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "(CWMS-Data-Format-Deprecated: 2024-11-01 in favor of Accept header) Specifies the encoding format of the response. Valid value for the format field for this URI are:\r\n\n* `tab`\r\n\n* `csv`\r\n \n* `xml`\r\n\n* `json` (default)",
                        "deprecated": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "has-data",
                        "in": "query",
                        "description": "A flag ('True'/'False') When set to true this returns offices that have operational data. Default value is <b>False</b>,. <a href=\"https://github.com/USACE/cwms-data-api/issues/321\" target=\"_blank\">Feature #321</a>",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of offices.",
                        "content": {
                            "": {
                                "schema": {
                                    "$ref": "#/components/schemas/OfficeFormatV1"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Office"
                                    }
                                }
                            },
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OfficeFormatV1"
                                    }
                                }
                            },
                            "application/json;version=2": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Office"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/units": {
            "get": {
                "tags": [
                    "Units"
                ],
                "summary": "Get swtData units",
                "operationId": "getSwtDataUnits",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the encoding format of the response. Valid value for the format field for this URI are:\n* `tab`\n* `csv`\n* `xml`\n* `json` (default)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    },
                    "501": {
                        "description": "The format requested is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/parameters": {
            "get": {
                "tags": [
                    "Parameters"
                ],
                "summary": "Get swtData parameters",
                "operationId": "getSwtDataParameters",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the encoding format of the response. Valid value for the format field for this URI are:\n* `tab`\n* `csv`\n* `xml`\n* `json` (default)",
                        "deprecated": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the parameters whose data is to be included in the response. If this field is not specified, the session user's default office will be used.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Parameter"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Parameter"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timezones": {
            "get": {
                "tags": [
                    "TimeZones"
                ],
                "summary": "Get swtData timezones",
                "operationId": "getSwtDataTimezones",
                "parameters": [
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the encoding format of the response. Valid value for the format field for this URI are:\n* `tab`  \n* `csv`  \n* `xml`  \n* `json`  (default)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeZoneIds"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeZoneIds"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "The format requested is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/levels/{level-id}": {
            "get": {
                "tags": [
                    "Levels"
                ],
                "summary": "Get swtData levels with levelId",
                "description": "Retrieves requested Location Level",
                "operationId": "getSwtDataLevelsWithLevelId",
                "parameters": [
                    {
                        "name": "level-id",
                        "in": "path",
                        "description": "Specifies the requested location level.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the Location Level to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective-date",
                        "in": "query",
                        "description": "Specifies the effective date of Location Level to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the effective date field (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Desired unit for the values retrieved.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationLevel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Levels"
                ],
                "summary": "Delete swtData levels with levelId",
                "description": "Delete CWMS Location Level",
                "operationId": "deleteSwtDataLevelsWithLevelId",
                "parameters": [
                    {
                        "name": "level-id",
                        "in": "path",
                        "description": "Specifies the location level id of the Location Level to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cascade-delete",
                        "in": "query",
                        "description": "Specifies whether to cascade the delete.  Defaults to false.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location level whose data is to be deleted. If this field is not specified, matching location level information will be deleted from all offices.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective-date",
                        "in": "query",
                        "description": "Specifies the effective date of the level to be deleted. If not provided will delete all data and reference to the location level.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the value of the effective date field (unless otherwise specified).If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Levels"
                ],
                "summary": "Patch swtData levels with levelId",
                "description": "Update CWMS Location Level",
                "operationId": "patchSwtDataLevelsWithLevelId",
                "parameters": [
                    {
                        "name": "level-id",
                        "in": "path",
                        "description": "Specifies the location level id of the Location Level to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "effective-date",
                        "in": "query",
                        "description": "Specifies the effective date of Location Level that will be updated",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationLevel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationLevel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/levels": {
            "get": {
                "tags": [
                    "Levels"
                ],
                "summary": "Get swtData levels",
                "operationId": "getSwtDataLevels",
                "parameters": [
                    {
                        "name": "level-id-mask",
                        "in": "query",
                        "description": "Specifies the name(s) of the location level(s) whose data is to be included in the response. Uses * for all.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the location level(s) whose data is to be included in the response. If this field is not specified, matching location level information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Specifies the unit or unit system of the response. Valid values for the unit field are:\n* `EN`  Specifies English unit system.  Location level values will be in the default English units for their parameters.\n* `SI`  Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\n* `Other`  Any unit returned in the response to the units URI request that is appropriate for the requested parameters. ",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datum",
                        "in": "query",
                        "description": "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\n* `NAVD88`  The elevation values will in the specified or default units above the NAVD-88 datum.\n* `NGVD29`  The elevation values will be in the specified or default units above the NGVD-29 datum.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the encoding format of the response. Requests specifying an Accept header:application/json;version=2 must not include this field. Valid format field values for this URI are:\n* `tab`\n* `csv`\n* `xml`\n* `wml2` (only if name field is specified)\n* `json` (default)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationLevels"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Levels"
                ],
                "summary": "Post swtData levels",
                "description": "Create new CWMS Location Level",
                "operationId": "postSwtDataLevels",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationLevel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/LocationLevel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/levels/{level-id}/timeseries": {
            "get": {
                "tags": [
                    "Levels"
                ],
                "summary": "Get swtData levels with levelId timeseries",
                "description": "Retrieves requested Location Level",
                "operationId": "getSwtDataLevelsWithLevelIdTimeseries",
                "parameters": [
                    {
                        "name": "level-id",
                        "in": "path",
                        "description": "Specifies the requested location level.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the Location Level to be returned",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "interval",
                        "in": "query",
                        "description": "Interval time step for the returned time series. Pseudo-regular interval definitions will be treated like local regular. Irregular interval will generate daily time steps. Default: 0",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time. The format for this field is ISO 8601 extended, with optional timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.\r\nIgnored if begin was specified with offset and timezone.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Desired unit for the values retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter combination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a timeseries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A CWMS Time Series representation of the specified location level.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "application/xml;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/recent": {
            "get": {
                "tags": [
                    "TimeSeries"
                ],
                "summary": "Get swtData timeseries recent",
                "description": "Returns CWMS Timeseries Groups Data",
                "operationId": "getSwtDataTimeseriesRecent",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries group(s) whose data is to be included in the response. If this field is not specified, matching timeseries groups information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Specifies the category id of the timeseries to be included in the response.  Optional.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group-id",
                        "in": "query",
                        "description": "Specifies the group id of the timeseries to be included in the response.  Optional.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ts-ids",
                        "in": "query",
                        "description": "Accepts a comma separated list of timeseries ids to be included in the response.  Optional. Cannot be used in combination with category_id and group_id.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit-system",
                        "in": "query",
                        "description": "Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to EN.",
                        "schema": {
                            "$ref": "#/components/schemas/UnitSystem"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the timeseries group(s) were not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tsv"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/standard-text-id/{standard-text-id}": {
            "get": {
                "tags": [
                    "Standard Text"
                ],
                "summary": "Get swtData standardTextId with standardTextId",
                "description": "Retrieve a single Standard Text value",
                "operationId": "getSwtDataStandardTextIdWithStandardTextId",
                "parameters": [
                    {
                        "name": "standard-text-id",
                        "in": "path",
                        "description": "Specifies the text id of the standard text to retrieve. Default includes all text ids",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of thestandard text. Default includes all offices",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardTextValue"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Standard Text"
                ],
                "summary": "Delete swtData standardTextId with standardTextId",
                "description": "Delete a single Standard Text value",
                "operationId": "deleteSwtDataStandardTextIdWithStandardTextId",
                "parameters": [
                    {
                        "name": "standard-text-id",
                        "in": "path",
                        "description": "Specifies the text id of the standard text to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of thestandard text.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/standard-text-id": {
            "get": {
                "tags": [
                    "Standard Text"
                ],
                "summary": "Get swtData standardTextId",
                "description": "Retrieve a Standard Text catalog",
                "operationId": "getSwtDataStandardTextId",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Specifies the office filter of thestandard text.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "standard-text-id-mask",
                        "in": "query",
                        "description": "Specifies the text id filter of the standard text",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/StandardTextCatalog"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Standard Text"
                ],
                "summary": "Post swtData standardTextId",
                "description": "Create new Standard Text",
                "operationId": "postSwtDataStandardTextId",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/StandardTextValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/text": {
            "get": {
                "tags": [
                    "Text-TimeSeries"
                ],
                "summary": "Retrieve text time series values for a provided time window and date version.If individual values exceed 64 kilobytes, a URL to a separate download is provided instead of being included in the returned payload from this request.",
                "operationId": "getSwtDataTimeseriesText",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Text TimeSeries whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the ts-id of the text timeseries",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TextTimeSeries"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Text-TimeSeries"
                ],
                "summary": "Post swtData timeseries text",
                "description": "Create new TextTimeSeries",
                "operationId": "postSwtDataTimeseriesText",
                "parameters": [
                    {
                        "name": "replace-all",
                        "in": "query",
                        "description": "Whether to replace any and all existing text with the specified text. Default is false",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TextTimeSeries"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/text/{name}": {
            "delete": {
                "tags": [
                    "Text-TimeSeries"
                ],
                "summary": "Delete swtData timeseries text with name",
                "description": "Deletes requested text timeseries id",
                "operationId": "deleteSwtDataTimeseriesTextWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The time series identifier to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries identifier to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "text-mask",
                        "in": "query",
                        "description": "The standard text pattern to match. Use glob-style wildcard characters instead of sql-style wildcard characters for pattern matching.  For StandardTextTimeSeries this should be the Standard_Text_Id (such as 'E' for ESTIMATED)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version-date",
                        "in": "query",
                        "description": "The version date for the time series.  If not specified, maximum version date is used.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Text-TimeSeries"
                ],
                "summary": "Patch swtData timeseries text with name",
                "description": "Updates a text timeseries",
                "operationId": "patchSwtDataTimeseriesTextWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The id of the text timeseries to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replace-all",
                        "in": "query",
                        "description": "Whether to replace any and all existing text with the specified text. Default is:true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TextTimeSeries"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/text/{name}/value": {
            "get": {
                "tags": [
                    "Text-TimeSeries"
                ],
                "summary": "Get swtData timeseries text with name value",
                "operationId": "getSwtDataTimeseriesTextWithNameValue",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the id of the text timeseries",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Text TimeSeries whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The date of the text value to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version-date",
                        "in": "query",
                        "description": "The version date for the value to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clob-id",
                        "in": "query",
                        "description": "Will be removed in a schema update. This is a placeholder for integration testing with schema 23.3.16",
                        "deprecated": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/binary": {
            "get": {
                "tags": [
                    "Binary-TimeSeries"
                ],
                "summary": "Retrieve binary time series values for a provided time window and date version.If individual values exceed 64 kilobytes, a URL to a separate download is provided instead of being included in the returned payload from this request.",
                "operationId": "getSwtDataTimeseriesBinary",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Binary TimeSeries whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the id of the binary timeseries",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "binary-type-mask",
                        "in": "query",
                        "description": "The data type pattern expressed as either an internet media type (e.g. 'image/*') or a file extension (e.g. '.*'). Use glob-style wildcard characters as shown above instead of sql-style wildcard characters for pattern matching. Default is:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version-date",
                        "in": "query",
                        "description": "The version date for the time series.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/BinaryTimeSeries"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Binary-TimeSeries"
                ],
                "summary": "Post swtData timeseries binary",
                "description": "Create new BinaryTimeSeries",
                "operationId": "postSwtDataTimeseriesBinary",
                "parameters": [
                    {
                        "name": "replace-all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/BinaryTimeSeries"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/binary/{name}": {
            "delete": {
                "tags": [
                    "Binary-TimeSeries"
                ],
                "summary": "Delete swtData timeseries binary with name",
                "description": "Deletes requested binary timeseries id",
                "operationId": "deleteSwtDataTimeseriesBinaryWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The time series identifier to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries identifier to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "binary-type-mask",
                        "in": "query",
                        "description": "The data type pattern expressed as either an internet media type (e.g. 'image/*') or a file extension (e.g. '.*'). Use glob-style wildcard characters as shown above instead of sql-style wildcard characters for pattern matching. Default:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version-date",
                        "in": "query",
                        "description": "The version date for the time series.  If not specified, the maximum version date is used.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Binary-TimeSeries"
                ],
                "summary": "Patch swtData timeseries binary with name",
                "description": "Updates a binary timeseries",
                "operationId": "patchSwtDataTimeseriesBinaryWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The id of the binary timeseries to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replace-all",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/BinaryTimeSeries"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/binary/{name}/value": {
            "get": {
                "tags": [
                    "Binary-TimeSeries"
                ],
                "summary": "Get swtData timeseries binary with name value",
                "operationId": "getSwtDataTimeseriesBinaryWithNameValue",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the id of the binary timeseries",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Binary TimeSeries whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "The date of the binary value to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version-date",
                        "in": "query",
                        "description": "The version date for the value to retrieve.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "blob-id",
                        "in": "query",
                        "description": "Will be removed in a schema update. This is a placeholder for integration testing with schema 23.3.16",
                        "deprecated": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/category/{category-id}": {
            "get": {
                "tags": [
                    "TimeSeries Categories"
                ],
                "summary": "Get swtData timeseries category with categoryId",
                "description": "Retrieves requested timeseries category",
                "operationId": "getSwtDataTimeseriesCategoryWithCategoryId",
                "parameters": [
                    {
                        "name": "category-id",
                        "in": "path",
                        "description": "Specifies the Category whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries category whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the timeseries category was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeriesCategory"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TimeSeries Categories"
                ],
                "summary": "Delete swtData timeseries category with categoryId",
                "description": "Deletes requested time series category",
                "operationId": "deleteSwtDataTimeseriesCategoryWithCategoryId",
                "parameters": [
                    {
                        "name": "category-id",
                        "in": "path",
                        "description": "The time series category to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the time series category to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "cascade-delete",
                        "in": "query",
                        "description": "Specifies whether to delete any time series groups in this time series category. Default: false",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/category": {
            "get": {
                "tags": [
                    "TimeSeries Categories"
                ],
                "summary": "Get swtData timeseries category",
                "description": "Returns CWMS timeseries category Data",
                "operationId": "getSwtDataTimeseriesCategory",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries category(ies) whose data is to be included in the response. If this field is not specified, matching timeseries category information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the categories were not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeSeriesCategory"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TimeSeries Categories"
                ],
                "summary": "Post swtData timeseries category",
                "description": "Create new TimeSeriesCategory",
                "operationId": "postSwtDataTimeseriesCategory",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeriesCategory"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/identifier-descriptor/{name}": {
            "get": {
                "tags": [
                    "TimeSeries Identifier"
                ],
                "summary": "Get swtData timeseries identifierDescriptor with name",
                "description": "Retrieves requested timeseries identifier descriptor",
                "operationId": "getSwtDataTimeseriesIdentifierDescriptorWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-id",
                        "in": "path",
                        "description": "Specifies the identifier of the timeseries to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries identifier to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the timeseries identifier descriptor was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeriesIdentifierDescriptor"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TimeSeries Identifier"
                ],
                "summary": "Delete swtData timeseries identifierDescriptor with name",
                "description": "Deletes requested timeseries identifier",
                "operationId": "deleteSwtDataTimeseriesIdentifierDescriptorWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-id",
                        "in": "path",
                        "description": "The timeseries-id of the timeseries to be deleted. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "TimeSeries Identifier"
                ],
                "summary": "Patch swtData timeseries identifierDescriptor with name",
                "operationId": "patchSwtDataTimeseriesIdentifierDescriptorWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The timeseries id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries identifier to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-id",
                        "in": "query",
                        "description": "A new timeseries-id.  If specified a rename operation will be performed and snap-forward, snap-backward, and active must not be provided",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "interval-offset",
                        "in": "query",
                        "description": "The offset into the data interval in minutes.  If specified and a new timeseries-id is also specified both will be passed to a rename operation.  May also be passed to update operation.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "snap-forward",
                        "in": "query",
                        "description": "The new snap forward tolerance in minutes. This specifies how many minutes before the expected data time that data will be considered to be on time.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "snap-backward",
                        "in": "query",
                        "description": "The new snap backward tolerance in minutes. This specifies how many minutes after the expected data time that data will be considered to be on time.",
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "'True' or 'true' if the time series is active",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/identifier-descriptor": {
            "get": {
                "tags": [
                    "TimeSeries Identifier"
                ],
                "summary": "Get swtData timeseries identifierDescriptor",
                "description": "Returns CWMS timeseries identifier descriptorData",
                "operationId": "getSwtDataTimeseriesIdentifierDescriptor",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries identifier(s) whose data is to be included in the response. If this field is not specified, matching timeseries identifier information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-id-regex",
                        "in": "query",
                        "description": "A case insensitive RegExp that will be applied to the timeseries-id field. If this field is not specified the results will not be constrained by timeseries-id.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 500.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the time series identifier descriptors were not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeriesIdentifierDescriptors"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TimeSeries Identifier"
                ],
                "summary": "Post swtData timeseries identifierDescriptor",
                "description": "Create new TimeSeriesIdentifierDescriptor",
                "operationId": "postSwtDataTimeseriesIdentifierDescriptor",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeriesIdentifierDescriptor"
                            }
                        },
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeriesIdentifierDescriptor"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/group/{group-id}": {
            "get": {
                "tags": [
                    "Timeseries Groups"
                ],
                "summary": "Get swtData timeseries group with groupId",
                "description": "Retrieves requested timeseries group",
                "operationId": "getSwtDataTimeseriesGroupWithGroupId",
                "parameters": [
                    {
                        "name": "group-id",
                        "in": "path",
                        "description": "Specifies the timeseries group whose data is to be included in the response",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries group whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Specifies the category containing the timeseries group whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeriesGroup"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Timeseries Groups"
                ],
                "summary": "Delete swtData timeseries group with groupId",
                "description": "Deletes requested time series group",
                "operationId": "deleteSwtDataTimeseriesGroupWithGroupId",
                "parameters": [
                    {
                        "name": "group-id",
                        "in": "path",
                        "description": "The time series group to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Specifies the time series category of the time series group to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the time series group to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Timeseries Groups"
                ],
                "summary": "Patch swtData timeseries group with groupId",
                "description": "Update existing TimeSeriesGroup. Allows for renaming of the group, assigning new time series, and unassigning all time series from the group.",
                "operationId": "patchSwtDataTimeseriesGroupWithGroupId",
                "parameters": [
                    {
                        "name": "group-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "replace-assigned-ts",
                        "in": "query",
                        "description": "Specifies whether to unassign all existing time series before assigning new time series specified in the content body Default: false",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the user making the request. This is the office that the timeseries, group, and category belong to. If the group and/or category belong to the CWMS office, this only identifies the timeseries.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeriesGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/group": {
            "get": {
                "tags": [
                    "Timeseries Groups"
                ],
                "summary": "Get swtData timeseries group",
                "description": "Returns CWMS Timeseries Groups Data",
                "operationId": "getSwtDataTimeseriesGroup",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries group(s) whose data is to be included in the response. If this field is not specified, matching timeseries groups information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include-assigned",
                        "in": "query",
                        "description": "Include the assigned timeseries in the returned timeseries groups. (default: true)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "timeseries-category-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries category id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-group-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries group id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the timeseries group(s) were not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TimeSeriesGroup"
                                    }
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Timeseries Groups"
                ],
                "summary": "Post swtData timeseries group",
                "description": "Create new TimeSeriesGroup",
                "operationId": "postSwtDataTimeseriesGroup",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeriesGroup"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries": {
            "get": {
                "tags": [
                    "TimeSeries"
                ],
                "summary": "Get swtData timeseries",
                "operationId": "getSwtDataTimeseries",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the name(s) of the time series whose data is to be included in the response. A case insensitive comparison is used to match names.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the time series(s) whose data is to be included in the response. Required for:application/json;version=2 and application/xml;version=2. For other formats, if this field is not specified, matching location level information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Specifies the unit or unit system of the response. Valid values for the unit field are: \n* `EN`  (default) Specifies English unit system.  Location level values will be in the default English units for their parameters.\n* `SI`  Specifies the SI unit system.  Location level values will be in the default SI units for their parameters.\n* `Other`  Any unit returned in the response to the units URI request that is appropriate for the requested parameters.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version-date",
                        "in": "query",
                        "description": "Specifies the version date of a time series trace to be selected. The format for this field is ISO 8601 extended, i.e., 'format', e.g., '2021-06-10T13:00:00-0700' .If field is empty, query will return a max aggregate for the timeseries. Only supported for:application/json;version=2 and application/xml;version=2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datum",
                        "in": "query",
                        "description": "Specifies the elevation datum of the response. This field affects only elevation location levels. Valid values for this field are:\n* `NAVD88`  The elevation values will in the specified or default units above the NAVD-88 datum.\n* `NGVD29`  The elevation values will be in the specified or default units above the NGVD-29 datum.  This parameter is not supported for:application/json;version=2 or application/xml;version=2",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time. The format for this field is ISO 8601 extended, with optional timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified).  For application/json;version=2 and application/xml;version=2 the results are returned in UTC.  For other formats this parameter affects the time zone of times in the response. If this field is not specified, the default time zone of UTC shall be used.\r\nIgnored if begin was specified with offset and timezone.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "trim",
                        "in": "query",
                        "description": "Specifies whether to trim missing values from the beginning and end of the retrieved values. Only supported for:application/json;version=2 and application/xml;version=2. Default is true.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the encoding format of the response. Valid values for the format field for this URI are:\n* `tab`\n* `csv`\n* `xml`\n* `wml2` (only if name field is specified)\n* `json` (default)",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return large amounts of data as a series of pages. This parameter is used to describes the current location in the response stream.  This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 500.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter combination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a timeseries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of elements of the data set you've selected.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "application/xml;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            },
                            "": {
                                "schema": {
                                    "$ref": "#/components/schemas/TimeSeries"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TimeSeries"
                ],
                "summary": "Post swtData timeseries",
                "description": "Used to create and save time-series data. Data to be stored must have time stamps in UTC represented as epoch milliseconds ",
                "operationId": "postSwtDataTimeseries",
                "parameters": [
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the version-date field (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.\r\nIgnored if version-date was specified with offset and timezone.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "create-as-lrts",
                        "in": "query",
                        "description": "Flag indicating if timeseries should be created as Local Regular Time Series. 'True' or 'False', default is 'False'",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "store-rule",
                        "in": "query",
                        "description": "The business rule to use when merging the incoming with existing data\n<table  border=\"1\" summary=\"\">\n<tr><td colspan=2>Store Rules</td></tr>\n<tr>\n    <td>Delete Insert</td>\n    <td>All existing data in the time window will be deleted and then replaced with the new dataset.</td>\n</tr>\n<tr>\n    <td>Replace All</td>\n    <td>\n        <ul>\n            <li>When the new dataset's date/time exactly matches the date/time of an existing data value, the new data value will replace the existing data.</li>\n        <li>When the new dataset's data/time does not match an existing data/time (i.e., a new data/time - data value pair) then an insert to the database will occur.</li>\n            <li>When there's an existing \"data/time - data value pair\" without a corresponding date/time value pair, no change will happen to the existing date/time value pair.</li>\n        </ul>\n    </td>\n</tr>\n<tr>\n    <td>Replace With Non Missing</td>\n    <td>\n        <ul>\n            <li>New data is always inserted, i.e., an existing date/time-value pair does not already exist for the record.</li>\n            <li>If date/time-value pair does exist, then only non-missing value will replace the existing data value*.</li>\n        </ul>\n    </td>\n<tr>\n    <td>Replace Missing Values Only</td>\n    <td>\n        <ul>\n            <li>New data is always inserted, i.e., an existing date/time-value pair does not already exist for the record.</li>\n            <li>If date/time-value pair does exist, then only replace an existing data/time-value pair whose missing flag was set.</li>\n        </ul>\n    </td>\n<tr>\n    <td>Do Not Replace</td>\n    <td>\n        Only inserts new data values if an existing date/time-value pair does not already exist.\n        Note: an existing date/time-value pair whose missing value quality bit is set will NOT be overwritten.\n    </td>\n</tr>\n</table>",
                        "schema": {
                            "$ref": "#/components/schemas/StoreRule"
                        }
                    },
                    {
                        "name": "override-protection",
                        "in": "query",
                        "description": "A flag to ignore the protected data quality when storing data. 'True' or 'False'",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeries"
                            }
                        },
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeries"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/timeseries/{timeseries}": {
            "delete": {
                "tags": [
                    "TimeSeries"
                ],
                "summary": "Delete swtData timeseries with timeseries",
                "operationId": "deleteSwtDataTimeseriesWithTimeseries",
                "parameters": [
                    {
                        "name": "timeseries",
                        "in": "path",
                        "description": "The timeseries-id of the timeseries values to be deleted. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the timeseries to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window to delete. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window to delete.The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "This field specifies a default timezone to be used if the format of the begin, end, or version-date parameters do not include offset or time zone information. Defaults to UTC.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version-date",
                        "in": "query",
                        "description": "The version date/time of the time series in the specified or default time zone. If NULL, the earliest or latest version date will be used depending on p_max_version.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start-time-inclusive",
                        "in": "query",
                        "description": "A flag specifying whether any data at the start time should be deleted ('True') or only data <b><em>after</em></b> the start time ('False').  Default value is True",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "end-time-inclusive",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether any data at the end time should be deleted ('True') or only data <b><em>before</em></b> the end time ('False'). Default value is False",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "max-version",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether to use the earliest ('False') or latest ('True') version date for each time if p_version_date is NULL.  Default is 'True'",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "override-protection",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether to delete protected data. Default is False",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "TimeSeries"
                ],
                "summary": "Patch swtData timeseries with timeseries",
                "description": "Update a TimeSeries with provided values",
                "operationId": "patchSwtDataTimeseriesWithTimeseries",
                "parameters": [
                    {
                        "name": "timeseries",
                        "in": "path",
                        "description": "Full CWMS Timeseries name",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the version-date field (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.\r\nIgnored if version-date was specified with offset and timezone.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "create-as-lrts",
                        "in": "query",
                        "description": "",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "store-rule",
                        "in": "query",
                        "description": "The business rule to use when merging the incoming with existing data\n<table  border=\"1\" summary=\"\">\n<tr><td colspan=2>Store Rules</td></tr>\n<tr>\n    <td>Delete Insert</td>\n    <td>All existing data in the time window will be deleted and then replaced with the new dataset.</td>\n</tr>\n<tr>\n    <td>Replace All</td>\n    <td>\n        <ul>\n            <li>When the new dataset's date/time exactly matches the date/time of an existing data value, the new data value will replace the existing data.</li>\n        <li>When the new dataset's data/time does not match an existing data/time (i.e., a new data/time - data value pair) then an insert to the database will occur.</li>\n            <li>When there's an existing \"data/time - data value pair\" without a corresponding date/time value pair, no change will happen to the existing date/time value pair.</li>\n        </ul>\n    </td>\n</tr>\n<tr>\n    <td>Replace With Non Missing</td>\n    <td>\n        <ul>\n            <li>New data is always inserted, i.e., an existing date/time-value pair does not already exist for the record.</li>\n            <li>If date/time-value pair does exist, then only non-missing value will replace the existing data value*.</li>\n        </ul>\n    </td>\n<tr>\n    <td>Replace Missing Values Only</td>\n    <td>\n        <ul>\n            <li>New data is always inserted, i.e., an existing date/time-value pair does not already exist for the record.</li>\n            <li>If date/time-value pair does exist, then only replace an existing data/time-value pair whose missing flag was set.</li>\n        </ul>\n    </td>\n<tr>\n    <td>Do Not Replace</td>\n    <td>\n        Only inserts new data values if an existing date/time-value pair does not already exist.\n        Note: an existing date/time-value pair whose missing value quality bit is set will NOT be overwritten.\n    </td>\n</tr>\n</table>",
                        "schema": {
                            "$ref": "#/components/schemas/StoreRule"
                        }
                    },
                    {
                        "name": "override-protection",
                        "in": "query",
                        "description": "A flag to ignore the protected data quality when storing data.  \"'true' or 'false'\"",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeries"
                            }
                        },
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/TimeSeries"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/ratings/template/{template-id}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get swtData ratings template with templateId",
                "operationId": "getSwtDataRatingsTemplateWithTemplateId",
                "parameters": [
                    {
                        "name": "template-id",
                        "in": "path",
                        "description": "Specifies the template whose data is to be included in the response",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Rating Templates whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/RatingTemplate"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete swtData ratings template with templateId",
                "description": "Deletes requested rating specification",
                "operationId": "deleteSwtDataRatingsTemplateWithTemplateId",
                "parameters": [
                    {
                        "name": "template-id",
                        "in": "path",
                        "description": "The rating-template-id of the ratings data to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the ratings to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/ratings/template": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get swtData ratings template",
                "operationId": "getSwtDataRatingsTemplate",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Rating Templates whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template-id-mask",
                        "in": "query",
                        "description": "RegExp that specifies the rating template IDs to be included in the response. If this field is not specified, all rating templates shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/RatingTemplates"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Post swtData ratings template",
                "description": "Create new Rating Template",
                "operationId": "postSwtDataRatingsTemplate",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/RatingTemplate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/ratings/spec/{rating-id}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get swtData ratings spec with ratingId",
                "operationId": "getSwtDataRatingsSpecWithRatingId",
                "parameters": [
                    {
                        "name": "rating-id",
                        "in": "path",
                        "description": "Specifies the rating-id of the Rating Spec to be included in the response",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Rating Specs whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/RatingSpec"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete swtData ratings spec with ratingId",
                "description": "Deletes requested rating specification",
                "operationId": "deleteSwtDataRatingsSpecWithRatingId",
                "parameters": [
                    {
                        "name": "rating-id",
                        "in": "path",
                        "description": "The rating-spec-id of the ratings data to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the ratings to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/ratings/spec": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get swtData ratings spec",
                "operationId": "getSwtDataRatingsSpec",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Rating Specs whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating-id-mask",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a>  that specifies the rating IDs to be included in the response. If this field is not specified, all Rating Specs shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/RatingSpecs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Post swtData ratings spec",
                "description": "Create new Rating Specification",
                "operationId": "postSwtDataRatingsSpec",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/RatingSpec"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/ratings/metadata": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get swtData ratings metadata",
                "operationId": "getSwtDataRatingsMetadata",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Rating Specs whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rating-id-mask",
                        "in": "query",
                        "description": "RegExp that specifies the rating IDs to be included in the response. If this field is not specified, all Rating Specs shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start",
                        "in": "query",
                        "description": "Specifies the start of the time window of the effective dates to be included. If this field is not specified no start time will be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Specifies the end of the time window for effective dates to be included. If this field is not specified no end time will be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified). If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 50.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/RatingMetadataList"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/ratings/{rating-id}": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get swtData ratings with ratingId",
                "description": "Returns CWMS Rating Data",
                "operationId": "getSwtDataRatingsWithRatingId",
                "parameters": [
                    {
                        "name": "rating-id",
                        "in": "path",
                        "description": "The rating-id of the effective dates to be retrieve. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the ratingset to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "Specifies the start of the time window for data to be included in the response. If this field is not specified no start time will be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Specifies the end of the time window for data to be included in the response. If this field is not specified no end time will be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the retrieval method used.  If no method is provided EAGER will be used.",
                        "schema": {
                            "$ref": "#/components/schemas/DatabaseLoadMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "application/xml;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Delete swtData ratings with ratingId",
                "operationId": "deleteSwtDataRatingsWithRatingId",
                "parameters": [
                    {
                        "name": "rating-id",
                        "in": "path",
                        "description": "The rating-id of the effective dates to be deleted. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the ratings to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window to delete. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window to delete. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "This field specifies a default timezone to be used if the format of the begin, end, or version-date parameters do not include offset or time zone information. Defaults to UTC.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Patch swtData ratings with ratingId",
                "description": "Update a RatingSet",
                "operationId": "patchSwtDataRatingsWithRatingId",
                "parameters": [
                    {
                        "name": "rating-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store-template",
                        "in": "query",
                        "description": "Also store updates to the rating template. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        },
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/ratings": {
            "get": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Get swtData ratings",
                "operationId": "getSwtDataRatings",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the name(s) of the rating whose data is to be included in the response. A case insensitive comparison is used to match names.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Rating(s) whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Specifies the unit or unit system of the response. Valid values for the unit field are:\n* `EN`  Specifies English unit system.  Rating values will be in the default English units for their parameters.\n* `SI`   Specifies the SI unit system.  Rating values will be in the default SI units for their parameters.\n* `Other`  Any unit returned in the response to the units URI request that is appropriate for the requested parameters.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "datum",
                        "in": "query",
                        "description": "Specifies the elevation datum of the response. This field affects only elevation Ratings. Valid values for this field are:\n* `NAVD88`  The elevation values will in the specified or default units above the NAVD-88 datum.\n* `NGVD29`  The elevation values will be in the specified or default units above the NGVD-29 datum.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "at",
                        "in": "query",
                        "description": "Specifies the start of the time window for data to be included in the response. If this field is not specified, any required time window begins 24 hours prior to the specified or default end time.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "Specifies the end of the time window for data to be included in the response. If this field is not specified, any required time window ends at the current time",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "Specifies the time zone of the values of the begin and end fields (unless otherwise specified), as well as the time zone of any times in the response. If this field is not specified, the default time zone of UTC shall be used.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "Specifies the encoding format of the response. Valid values for the format field for this URI are:\n* `tab`\n* `csv`\n* `xml`\n* `json` (default)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a rating table.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Unit"
                                }
                            },
                            "text/tab-separated-values": {
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "text/csv": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Ratings"
                ],
                "summary": "Post swtData ratings",
                "description": "Create new RatingSet",
                "operationId": "postSwtDataRatings",
                "parameters": [
                    {
                        "name": "store-template",
                        "in": "query",
                        "description": "Also store updates to the rating template. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        },
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Unit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/catalog/{dataset}": {
            "get": {
                "tags": [
                    "Catalog"
                ],
                "summary": "Get swtData catalog with dataset",
                "operationId": "getSwtDataCatalogWithDataset",
                "parameters": [
                    {
                        "name": "dataset",
                        "in": "path",
                        "description": "A list of what data? E.g. Timeseries, Locations, Ratings, etc",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/CatalogableEndpoint"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 500.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "unit-system",
                        "in": "query",
                        "description": "Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.",
                        "schema": {
                            "$ref": "#/components/schemas/UnitSystem"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "3-4 letter office name representing the district you want to isolate data to.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-category-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries category id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-group-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries group id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location-category-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the location category id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location-group-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the location group id",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bounding-office-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the location bounding office. When this field is used items with no bounding office set will not be present in results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include-extents",
                        "in": "query",
                        "description": "Whether the returned catalog entries should include timeseries extents. Only valid for TIMESERIES. Default is true.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "exclude-empty",
                        "in": "query",
                        "description": "Specifies whether Timeseries that have empty extents should be excluded from the results.  For purposes of this parameter 'empty' is defined as VERSION_TIME, EARLIEST_TIME, LATEST_TIME and LAST_UPDATE all being null. This parameter does not control whether the extents are returned to the user, only whether matching timeseries are excluded. Only valid for TIMESERIES. Default is true.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "location-kind-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the location kind.  The location-kind is typically unset or one of the following: {\"SITE\", \"EMBANKMENT\", \"OVERFLOW\", \"TURBINE\", \"STREAM\", \"PROJECT\", \"STREAMGAGE\", \"BASIN\", \"OUTLET\", \"LOCK\", \"GATE\"}.  Multiple kinds can be matched by using Regular Expression OR clauses. For example: \"(SITE|STREAM)\"",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location-type-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the location type.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of elements the data set you've selected.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Catalog"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Catalog"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/basins/{name}": {
            "get": {
                "tags": [
                    "Basins"
                ],
                "summary": "Get swtData basins with name",
                "description": "Returns CWMS Basin Data",
                "operationId": "getSwtDataBasinsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the basin to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the basin whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Specifies the unit or unit system of the response. Valid values for the unit field are: \n* `EN`  (default) Specifies English unit system.  Basin area values will be in the default English units for their parameters.\n* `SI`  Specifies the SI unit system.  \n* `Other`  Any unit returned in the response to the units URI request that is appropriate for the requested parameters.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a basin.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.named+pg+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basin"
                                }
                            },
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basin"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basin"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Basins"
                ],
                "summary": "Delete swtData basins with name",
                "description": "Renames CWMS Basin",
                "operationId": "deleteSwtDataBasinsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the basin to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the basin to be renamed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used.",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Basins"
                ],
                "summary": "Patch swtData basins with name",
                "description": "Renames CWMS Basin",
                "operationId": "patchSwtDataBasinsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the new name for the basin.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the basin to be renamed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a basin.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/basins": {
            "get": {
                "tags": [
                    "Basins"
                ],
                "summary": "Get swtData basins",
                "description": "Returns CWMS Basin Data",
                "operationId": "getSwtDataBasins",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the basin whose data is to be included in the response. If this field is not specified, matching basin information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "description": "Specifies the unit or unit system of the response. Valid values for the unit field are: \n* `EN`  Specifies English unit system. Basin values will be in the default English units for their parameters. (This is default if no value is entered)\n* `SI`  Specifies the SI unit system. Basin values will be in the default SI units for their parameters.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a basin.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/vnd.named+pg+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basin"
                                }
                            },
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basin"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Basin"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Basins"
                ],
                "summary": "Post swtData basins",
                "description": "Creates CWMS Basin",
                "operationId": "postSwtDataBasins",
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Basin successfully stored to CWMS."
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/streams/{name}": {
            "get": {
                "tags": [
                    "Streams"
                ],
                "summary": "Get swtData streams with name",
                "description": "Returns CWMS Stream Data",
                "operationId": "getSwtDataStreamsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the stream-id of the stream to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the station. Defaults to mi.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stream"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stream"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Streams"
                ],
                "summary": "Delete swtData streams with name",
                "description": "Delete CWMS Stream",
                "operationId": "deleteSwtDataStreamsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the stream-id of the stream to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to \"DELETE_KEY\"",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the stream was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Streams"
                ],
                "summary": "Patch swtData streams with name",
                "description": "Rename CWMS Stream",
                "operationId": "patchSwtDataStreamsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the new stream-id. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream to be renamed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream successfully renamed in CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/streams": {
            "get": {
                "tags": [
                    "Streams"
                ],
                "summary": "Get swtData streams",
                "description": "Returns matching CWMS Stream Data for a Reservoir Project.",
                "operationId": "getSwtDataStreams",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Office id for the reservoir project location associated with the streams.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream-id-mask",
                        "in": "query",
                        "description": "Specifies the stream-id of the stream to be retrieved.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "diverts-from-stream-id-mask",
                        "in": "query",
                        "description": "Specifies the stream-id of the stream that the returned streams flow from.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flows-into-stream-id-mask",
                        "in": "query",
                        "description": "Specifies the stream-id of the stream that the returned streams flow into.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the station. Defaults to mi.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stream"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Stream"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Streams"
                ],
                "summary": "Post swtData streams",
                "description": "Create CWMS Stream",
                "operationId": "postSwtDataStreams",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/Stream"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/stream-locations/{office}/{name}/downstream-locations": {
            "get": {
                "tags": [
                    "StreamLocations"
                ],
                "summary": "Get swtData streamLocations with office with name downstreamLocations",
                "description": "Returns matching downstream stream locations.",
                "operationId": "getSwtDataStreamLocationsWithOfficeWithNameDownstreamLocations",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Office id for the stream location associated with the downstream locations.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the stream location whose downstream locations data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all-downstream",
                        "in": "query",
                        "description": "If true, retrieve all downstream locations.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "same-stream-only",
                        "in": "query",
                        "description": "If true, retrieve only locations on the same stream.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Station units.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stage-unit",
                        "in": "query",
                        "description": "Stage units.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area-unit",
                        "in": "query",
                        "description": "Area units.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamLocation"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/stream-locations/{office}/{name}/upstream-locations": {
            "get": {
                "tags": [
                    "StreamLocations"
                ],
                "summary": "Get swtData streamLocations with office with name upstreamLocations",
                "description": "Returns matching upstream stream locations.",
                "operationId": "getSwtDataStreamLocationsWithOfficeWithNameUpstreamLocations",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Office id for the stream location associated with the upstream locations.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the stream location whose upstream locations data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "all-upstream",
                        "in": "query",
                        "description": "If true, retrieve all upstream locations.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "same-stream-only",
                        "in": "query",
                        "description": "If true, retrieve only locations on the same stream.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Station units.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stage-unit",
                        "in": "query",
                        "description": "Stage units.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area-unit",
                        "in": "query",
                        "description": "Area units.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamLocation"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/stream-locations/{name}": {
            "get": {
                "tags": [
                    "StreamLocations"
                ],
                "summary": "Get swtData streamLocations with name",
                "description": "Returns CWMS Stream Location Data",
                "operationId": "getSwtDataStreamLocationsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the location-id of the stream location to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream location to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream-id",
                        "in": "query",
                        "description": "Specifies the stream-id of the stream location to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the station. Default units are mi.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stage-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the stage. Default units are ft.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the area. Default units are mi2.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamLocation"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamLocation"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "StreamLocations"
                ],
                "summary": "Delete swtData streamLocations with name",
                "description": "Delete CWMS Stream Location",
                "operationId": "deleteSwtDataStreamLocationsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the location-id of the stream location to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream location to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream-id",
                        "in": "query",
                        "description": "Specifies the stream-id of the stream location to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Stream Location not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream Location successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "StreamLocations"
                ],
                "summary": "Patch swtData streamLocations with name",
                "description": "Update CWMS Stream Location",
                "operationId": "patchSwtDataStreamLocationsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamLocation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream Location successfully updated to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/stream-locations": {
            "get": {
                "tags": [
                    "StreamLocations"
                ],
                "summary": "Get swtData streamLocations",
                "description": "Returns matching CWMS Stream Location Data for a Reservoir Project.",
                "operationId": "getSwtDataStreamLocations",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Office id for the reservoir project location associated with the stream locations.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream-id-mask",
                        "in": "query",
                        "description": "Specifies the stream-id of the stream that the returned stream locations belong to.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name-mask",
                        "in": "query",
                        "description": "Specifies the location-id of the stream location to be retrieved.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the station. Default units are mi.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stage-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the stage. Default units are ft.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "area-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the area. Default units are mi2.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamLocation"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamLocation"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "StreamLocations"
                ],
                "summary": "Post swtData streamLocations",
                "description": "Create CWMS Stream Location",
                "operationId": "postSwtDataStreamLocations",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamLocation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream Location successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/stream-reaches/{name}": {
            "get": {
                "tags": [
                    "StreamReaches"
                ],
                "summary": "Get swtData streamReaches with name",
                "description": "Returns CWMS Stream Reach Data",
                "operationId": "getSwtDataStreamReachesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the reach-id of the stream reach to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream reach to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream-id",
                        "in": "query",
                        "description": "Specifies the stream-id of the stream reach to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the station. Defaults to mi.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamReach"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamReach"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "StreamReaches"
                ],
                "summary": "Delete swtData streamReaches with name",
                "description": "Delete CWMS Stream Reach",
                "operationId": "deleteSwtDataStreamReachesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the reach-id of the stream reach to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream reach to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream Reach successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "StreamReaches"
                ],
                "summary": "Patch swtData streamReaches with name",
                "description": "Rename CWMS Stream Reach",
                "operationId": "patchSwtDataStreamReachesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the new reach-id. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the stream reach to be renamed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream Reach successfully renamed in CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/stream-reaches": {
            "get": {
                "tags": [
                    "StreamReaches"
                ],
                "summary": "Get swtData streamReaches",
                "description": "Returns matching CWMS Stream Reach Data for a Reservoir Project.",
                "operationId": "getSwtDataStreamReaches",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Office id for the reservoir project location associated with the stream reaches.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "stream-id-mask",
                        "in": "query",
                        "description": "Specifies the stream-id mask for the stream reaches.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reach-id-mask",
                        "in": "query",
                        "description": "Specifies the reach-id mask for the stream reaches.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "configuration-id-mask",
                        "in": "query",
                        "description": "Specifies the configuration-id mask for the stream reaches.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "station-unit",
                        "in": "query",
                        "description": "Specifies the unit of measure for the station. Defaults to mi.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamReach"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StreamReach"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "StreamReaches"
                ],
                "summary": "Post swtData streamReaches",
                "description": "Create CWMS Stream Reach",
                "operationId": "postSwtDataStreamReaches",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/StreamReach"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Stream Reach successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/measurements": {
            "get": {
                "tags": [
                    "Measurements"
                ],
                "summary": "Get swtData measurements",
                "description": "Returns matching measurement data.",
                "operationId": "getSwtDataMeasurements",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Office id mask for filtering measurements. Use null to retrieve measurements for all offices.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id-mask",
                        "in": "query",
                        "description": "Location id mask for filtering measurements. Use null to retrieve measurements for all locations.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min-number",
                        "in": "query",
                        "description": "Minimum measurement number-id for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max-number",
                        "in": "query",
                        "description": "Maximum measurement number-id for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window to delete. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'. A null value is treated as an unbounded start.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window to delete.The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.A null value is treated as an unbounded end.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "This field specifies a default timezone to be used if the format of the beginand end parameters do not include offset or time zone information. Defaults to UTC.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min-height",
                        "in": "query",
                        "description": "Minimum height for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max-height",
                        "in": "query",
                        "description": "Maximum height for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min-flow",
                        "in": "query",
                        "description": "Minimum flow for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max-flow",
                        "in": "query",
                        "description": "Maximum flow for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "agency",
                        "in": "query",
                        "description": "Agencies for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quality",
                        "in": "query",
                        "description": "Quality for filtering measurements.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "unit-system",
                        "in": "query",
                        "description": "Specifies the unit system of the response. Valid values for the unit field are: \n* `EN`  Specifies English unit system.  Location values will be in the default English units for their parameters.\n* `SI`  Specifies the SI unit system.  Location values will be in the default SI units for their parameters. If not specified, EN is used.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measurement"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Measurement"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Measurements"
                ],
                "summary": "Post swtData measurements",
                "description": "Create new measurement(s).",
                "operationId": "postSwtDataMeasurements",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided Measurement(s) already exist. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Measurement"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Measurement(s) successfully stored."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/measurements/{location-id}": {
            "delete": {
                "tags": [
                    "Measurements"
                ],
                "summary": "Delete swtData measurements with locationId",
                "description": "Delete an existing measurement.",
                "operationId": "deleteSwtDataMeasurementsWithLocationId",
                "parameters": [
                    {
                        "name": "location-id",
                        "in": "path",
                        "description": "Specifies the location-id of the measurement(s) to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the measurements to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window to delete. The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window to delete.The format for this field is ISO 8601 extended, with optional offset and timezone, i.e., 'YYYY-MM-dd'T'hh:mm:ss[Z'['VV']']', e.g., '2021-06-10T13:00:00-07:00'.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timezone",
                        "in": "query",
                        "description": "This field specifies a default timezone to be used if the format of the beginand end parameters do not include offset or time zone information. Defaults to UTC.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min-number",
                        "in": "query",
                        "description": "Specifies the min number-id of the measurement to delete.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "max-number",
                        "in": "query",
                        "description": "Specifies the max number-id of the measurement to delete.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Measurement not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Measurement successfully deleted."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/blobs/{blob-id}": {
            "get": {
                "tags": [
                    "Blob"
                ],
                "summary": "Get swtData blobs with blobId",
                "operationId": "getSwtDataBlobsWithBlobId",
                "parameters": [
                    {
                        "name": "blob-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/blobs": {
            "get": {
                "tags": [
                    "Blob"
                ],
                "summary": "Get swtData blobs",
                "operationId": "getSwtDataBlobs",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office. If this field is not specified, matching information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 20.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> describing the blob id's you want",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of blobs.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blobs"
                                }
                            },
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Blobs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Blob"
                ],
                "summary": "Post swtData blobs",
                "description": "Create new Blob",
                "operationId": "postSwtDataBlobs",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Blob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/clobs/{clob-id}": {
            "get": {
                "tags": [
                    "Clob"
                ],
                "summary": "Get swtData clobs with clobId",
                "description": "Get a single clob.  If the accept header is set to text/plain, the raw value is returned as the response body. Responses to text/plain requests are streamed and support the Range header.  When the accept header is set to application/json;version=2 the clob will be returned as a serialized Clob object with fields for office-id, id, description and value.",
                "operationId": "getSwtDataClobsWithClobId",
                "parameters": [
                    {
                        "name": "clob-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "clob-id",
                        "in": "query",
                        "description": "If this _query_ parameter is provided the id _path_ parameter is ignored and the value of the query parameter is used.   Note: this query parameter is necessary for id's that contain '/' or other special characters.  Because of abuse even properly escaped '/' in url paths are blocked.  When using this query parameter a valid path parameter must still be provided for the request to be properly routed.  If your clob id contains '/' you can't specify the clob-id query parameter and also specify the id path parameter because firewall and/or server rules will deny the request even though you are specifying this override. \"ignored\" is suggested.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns requested clob.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Clob"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Clob"
                ],
                "summary": "Delete swtData clobs with clobId",
                "description": "Delete clob",
                "operationId": "deleteSwtDataClobsWithClobId",
                "parameters": [
                    {
                        "name": "clob-id",
                        "in": "path",
                        "description": "Specifies the id of the clob to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the clob.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Clob"
                ],
                "summary": "Patch swtData clobs with clobId",
                "description": "Update clob",
                "operationId": "patchSwtDataClobsWithClobId",
                "parameters": [
                    {
                        "name": "clob-id",
                        "in": "path",
                        "description": "Specifies the id of the clob to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ignore-nulls",
                        "in": "query",
                        "description": "If true, null and empty fields in the provided clob will be ignored and the existing value of those fields left in place. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Clob"
                            }
                        },
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Clob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/clobs": {
            "get": {
                "tags": [
                    "Clob"
                ],
                "summary": "Get swtData clobs",
                "operationId": "getSwtDataClobs",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office. If this field is not specified, matching information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 20.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "include-values",
                        "in": "query",
                        "description": "Do you want the value associated with this particular clob (default: false)",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the id",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of clobs.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Clobs"
                                }
                            },
                            "application/xml;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Clobs"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Clob"
                ],
                "summary": "Post swtData clobs",
                "description": "Create new Clob",
                "operationId": "postSwtDataClobs",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Clob"
                            }
                        },
                        "application/xml;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/Clob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/pools/{pool-id}": {
            "get": {
                "tags": [
                    "Pools"
                ],
                "summary": "Get swtData pools with poolId",
                "description": "Retrieves requested Pool",
                "operationId": "getSwtDataPoolsWithPoolId",
                "parameters": [
                    {
                        "name": "pool-id",
                        "in": "path",
                        "description": "Specifies the pool whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Pool whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "query",
                        "description": "Specifies the project-id of the Pool whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bottom-mask",
                        "in": "query",
                        "description": "Bottom level mask. Default value:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "top-mask",
                        "in": "query",
                        "description": "Top level mask. Default value:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include-explicit",
                        "in": "query",
                        "description": "Specifies if the results should include explicit Pools. Default value:false",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include-implicit",
                        "in": "query",
                        "description": "Specifies if the results should include implicit Pools. Default value:true",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the Location Category was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pool"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/pools": {
            "get": {
                "tags": [
                    "Pools"
                ],
                "summary": "Get swtData pools",
                "description": "Returns Pools Data",
                "operationId": "getSwtDataPools",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the data in the response. If this field is not specified, matching items from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id-mask",
                        "in": "query",
                        "description": "Project Id mask. Default value:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name-mask",
                        "in": "query",
                        "description": "Name mask. Default value:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "bottom-mask",
                        "in": "query",
                        "description": "Bottom level mask. Default value:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "top-mask",
                        "in": "query",
                        "description": "Top level mask. Default value:*",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include-explicit",
                        "in": "query",
                        "description": "Specifies if the results should include explicit Pools. Default value:false",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include-implicit",
                        "in": "query",
                        "description": "Specifies if the results should include implicit Pools. Default value:true",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the pools were not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/Pools"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/specified-levels": {
            "get": {
                "tags": [
                    "Levels"
                ],
                "summary": "Get swtData specifiedLevels",
                "operationId": "getSwtDataSpecifiedLevels",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Specified Levels whose data is to be included in the response. If this field is not specified, matching rating information from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "template-id-mask",
                        "in": "query",
                        "description": "Mask that specifies the IDs to be included in the response. If this field is not specified, all specified levels shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpecifiedLevel"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Levels"
                ],
                "summary": "Post swtData specifiedLevels",
                "description": "Create new SpecifiedLevel",
                "operationId": "postSwtDataSpecifiedLevels",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/SpecifiedLevel"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/specified-levels/{specified-level-id}": {
            "delete": {
                "tags": [
                    "Levels"
                ],
                "summary": "Delete swtData specifiedLevels with specifiedLevelId",
                "description": "Deletes requested specified level id",
                "operationId": "deleteSwtDataSpecifiedLevelsWithSpecifiedLevelId",
                "parameters": [
                    {
                        "name": "specified-level-id",
                        "in": "path",
                        "description": "The specified level id to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the timeseries identifier to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Levels"
                ],
                "summary": "Patch swtData specifiedLevels with specifiedLevelId",
                "description": "Renames the requested specified level id",
                "operationId": "patchSwtDataSpecifiedLevelsWithSpecifiedLevelId",
                "parameters": [
                    {
                        "name": "specified-level-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "specified-level-id",
                        "in": "query",
                        "description": "The new specified level id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the specified level to be renamed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/forecast-instance/{name}": {
            "get": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Get swtData forecastInstance with name",
                "description": "Used to get all forecast instances for a given forecast spec",
                "operationId": "getSwtDataForecastInstanceWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the spec id of the forecast spec whose forecast instance data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forecast-date",
                        "in": "query",
                        "description": "Specifies the forecast date time of the forecast instance to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issue-date",
                        "in": "query",
                        "description": "Specifies the issue date time of the forecast instance to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the forecast spec whose forecast instance is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "designator",
                        "in": "query",
                        "description": "Specifies the designator of the forecast spec whose forecast instance data to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter combination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a forecast instance.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of elements of the data set you've selected.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForecastInstance"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Delete swtData forecastInstance with name",
                "description": "Used to delete forecast instance data based on unique fields",
                "operationId": "deleteSwtDataForecastInstanceWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the spec id of the forecast spec associated with the forecast instanceto be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forecast-date",
                        "in": "query",
                        "description": "Specifies the forecast date time of the forecast instance to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issue-date",
                        "in": "query",
                        "description": "Specifies the issue date time of the forecast instance to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the forecast spec associated with the forecast instance to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "designator",
                        "in": "query",
                        "description": "Specifies the designator of the forecast spec associated with the forecast instance to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a forecast instance.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Patch swtData forecastInstance with name",
                "description": "Update a forecast instance with new max age, notes, forecast fileand forecast info key/value pairs.",
                "operationId": "patchSwtDataForecastInstanceWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the spec id of the forecast spec to be updated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/ForecastInstance"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the ForecastInstance was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/forecast-instance": {
            "get": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Get swtData forecastInstance",
                "description": "Used to get all forecast instances for a given forecast spec",
                "operationId": "getSwtDataForecastInstance",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the forecast spec whose forecast instance is to be included in the response. Default will be all offices.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the spec id of the forecast spec whose forecast instance data is to be included in the response. Default will be all names.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "designator",
                        "in": "query",
                        "description": "Specifies the designator of the forecast spec whose forecast instance data to be included in the response. ",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter combination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of elements of the data set you've selected.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForecastInstance"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Post swtData forecastInstance",
                "description": "Used to create and save a forecast instance",
                "operationId": "postSwtDataForecastInstance",
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/ForecastInstance"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/forecast-spec/{name}": {
            "get": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Get swtData forecastSpec with name",
                "description": "Used to query a single forecast spec record",
                "operationId": "getSwtDataForecastSpecWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the spec id of the forecast spec whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the forecast spec whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "designator",
                        "in": "query",
                        "description": "Specifies the designator of the forecast spec whose data to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter combination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a forecast spec.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Returns the requested forecast spec",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForecastSpec"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Delete swtData forecastSpec with name",
                "description": "Used to delete forecast spec data based on unique fields",
                "operationId": "deleteSwtDataForecastSpecWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the spec id of the forecast spec whose data is to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the forecast spec whose data is to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "designator",
                        "in": "query",
                        "description": "Specifies the designator of the forecast spec whose data is to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to \"DELETE_KEY\"",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a forecast spec.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Patch swtData forecastSpec with name",
                "description": "Update a forecast spec with provided values",
                "operationId": "patchSwtDataForecastSpecWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Forecast spec id to be updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/ForecastSpec"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the forecast spec was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/forecast-spec": {
            "get": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Get swtData forecastSpec",
                "description": "Used to query multiple forecast specs",
                "operationId": "getSwtDataForecastSpec",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the forecast spec whose data is to be included in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id-mask",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a>  that specifies the spec IDs to be included in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "designator-mask",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a>  that specifies the designator of the forecast spec whose data to be included in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-entity",
                        "in": "query",
                        "description": "Specifies the source identity of the forecast spec whose data is to be included in the response.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter combination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "A list of elements of the data set you've selected.",
                        "content": {
                            "application/json;version=2": {
                                "schema": {
                                    "$ref": "#/components/schemas/ForecastSpec"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Post swtData forecastSpec",
                "description": "Used to create and save forecast spec data",
                "operationId": "postSwtDataForecastSpec",
                "requestBody": {
                    "content": {
                        "application/json;version=2": {
                            "schema": {
                                "$ref": "#/components/schemas/ForecastSpec"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/forecast-instance/{name}/file-data": {
            "get": {
                "tags": [
                    "Forecast"
                ],
                "summary": "Get swtData forecastInstance with name fileData",
                "description": "Used to download forecast file for the given parameters",
                "operationId": "getSwtDataForecastInstanceWithNameFileData",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the spec id of the forecast spec whose forecast instance data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "forecast-date",
                        "in": "query",
                        "description": "Specifies the forecast date time of the forecast instance to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "issue-date",
                        "in": "query",
                        "description": "Specifies the issue date time of the forecast instance to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the forecast spec whose forecast instance is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "designator",
                        "in": "query",
                        "description": "Specifies the designator of the forecast spec whose forecast instance data to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter combination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a forecast instance.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/octet-stream": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/status-update/{name}": {
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Post swtData projects statusUpdate with name",
                "description": "Publishes a message on the office's STATUS queue that a project has been updated for a specified application",
                "operationId": "postSwtDataProjectsStatusUpdateWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The location identifier of the project that has been updated",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "The office generating the message (and owning the project).",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "application-id",
                        "in": "query",
                        "description": "A text string identifying the application for which the update applies.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "source-id",
                        "in": "query",
                        "description": "An application-defined string of the instance and/or component that generated the message. If NULL or not specified, the generated message will not include this item.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "timeseries-id",
                        "in": "query",
                        "description": "A time series identifier of the time series associated with the update. If NULL or not specified, the generated message will not include this item.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start time of the updates to the time series. If NULL or not specified, the generated message will not include this item.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end time of the updates to the time series. If NULL or not specified, the generated message will not include this item.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/water-user/{water-user}": {
            "get": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Get swtData projects with office with projectId waterUser with waterUser",
                "description": "Gets a specified water user.",
                "operationId": "getSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUser",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaterUserContract"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Delete swtData projects with office with projectId waterUser with waterUser",
                "description": "Deletes a water user from CWMS.",
                "operationId": "deleteSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUser",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Default is DELETE_KEY.",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Patch swtData projects with office with projectId waterUser with waterUser",
                "description": "Updates a water user in CWMS.",
                "operationId": "patchSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUser",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the new name of the water user entity.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/WaterUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Water user successfully updated in CWMS."
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/water-user": {
            "get": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Get swtData projects with office with projectId waterUser",
                "description": "Gets all water users.",
                "operationId": "getSwtDataProjectsWithOfficeWithProjectIdWaterUser",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the water user is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the water user is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaterUser"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Post swtData projects with office with projectId waterUser",
                "description": "Stores a water user to CWMS.",
                "operationId": "postSwtDataProjectsWithOfficeWithProjectIdWaterUser",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "If true, the operation will fail if the water user already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/WaterUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Water user successfully stored to CWMS."
                    },
                    "501": {
                        "description": "Requested format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/water-user/{water-user}/contracts/{contract-name}": {
            "get": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Get swtData projects with office with projectId waterUser with waterUser contracts with contractName",
                "description": "Return a specified water contract",
                "operationId": "getSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUserContractsWithContractName",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contract-name",
                        "in": "path",
                        "description": "The name of the contract to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find any contracts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaterUserContract"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaterUserContract"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Delete swtData projects with office with projectId waterUser with waterUser contracts with contractName",
                "description": "Delete a specified water contract",
                "operationId": "deleteSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUserContractsWithContractName",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contract-name",
                        "in": "path",
                        "description": "The name of the contract to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to DELETE_KEY.",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Patch swtData projects with office with projectId waterUser with waterUser contracts with contractName",
                "description": "Renames a water contract",
                "operationId": "patchSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUserContractsWithContractName",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contract-name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contract-name",
                        "in": "query",
                        "description": "Specifies the new name of the contract.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/WaterUserContract"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find a contract",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/water-user/{water-user}/contracts": {
            "get": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Get swtData projects with office with projectId waterUser with waterUser contracts",
                "description": "Return all water contracts",
                "operationId": "getSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUserContracts",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Specifies the office that the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "Specifies the project id of the contract.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "Specifies the water user of the contract.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find any contracts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaterUserContract"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WaterUserContract"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Post swtData projects with office with projectId waterUser with waterUser contracts",
                "description": "Create a new water contract",
                "operationId": "postSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUserContracts",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The project Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "If true, the contract will not be stored if it already exists.",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ignore-nulls",
                        "in": "query",
                        "description": "If true, null fields will be ignored when storing the contract.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/WaterUserContract"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Water contract successfully stored to CWMS."
                    },
                    "501": {
                        "description": "Requested format is not implemented."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/water-user/{water-user}/contracts/{contract-name}/pumps/{name}": {
            "delete": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Delete swtData projects with office with projectId waterUser with waterUser contracts with contractName pumps with name",
                "description": "Disassociate a pump from a contract",
                "operationId": "deleteSwtDataProjectsWithOfficeWithProjectIdWaterUserWithWaterUserContractsWithContractNamePumpsWithName",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office the project is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "The name of the project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "water-user",
                        "in": "path",
                        "description": "The name of the water user the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contract-name",
                        "in": "path",
                        "description": "The name of the contract the pump is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The name of the pump to be disassociated from the specified contract.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pump-type",
                        "in": "query",
                        "description": "The type of pump to be disassociated from the contract. Expected values: IN, OUT, OUT BELOW",
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/PumpType"
                        }
                    },
                    {
                        "name": "delete-accounting",
                        "in": "query",
                        "description": "Whether to delete the associated accounting data. Defaults to FALSE.",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/contract-types": {
            "get": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Get swtData projects with office contractTypes",
                "description": "Get all water contract types",
                "operationId": "getSwtDataProjectsWithOfficeContractTypes",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office Id the contract is associated with.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The provided combination of parameters did not find any contracts.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/LookupType"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LookupType"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "Requested format is not implemented."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Post swtData projects with office contractTypes",
                "description": "Create a new water contract type",
                "operationId": "postSwtDataProjectsWithOfficeContractTypes",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provideddisplay value already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/LookupType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Contract type successfully stored to CWMS."
                    },
                    "501": {
                        "description": "Requested format is not implemented."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/contract-types/{display-value}": {
            "delete": {
                "tags": [
                    "Water Contracts"
                ],
                "summary": "Delete swtData projects with office contractTypes with displayValue",
                "description": "Delete a water contract type",
                "operationId": "deleteSwtDataProjectsWithOfficeContractTypesWithDisplayValue",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "The office associated with the contract type to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "display-value",
                        "in": "path",
                        "description": "The location associated with the contract type to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/embankments/{name}": {
            "get": {
                "tags": [
                    "Embankments"
                ],
                "summary": "Get swtData projects embankments with name",
                "description": "Returns CWMS Embankment Data",
                "operationId": "getSwtDataProjectsEmbankmentsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the embankment to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the embankment to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Embankment"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Embankment"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Embankments"
                ],
                "summary": "Delete swtData projects embankments with name",
                "description": "Delete CWMS Embankment",
                "operationId": "deleteSwtDataProjectsEmbankmentsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the embankment to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the embankment to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to \"DELETE_KEY\"",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the embankment was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Embankment successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Embankments"
                ],
                "summary": "Patch swtData projects embankments with name",
                "description": "Rename CWMS Embankment",
                "operationId": "patchSwtDataProjectsEmbankmentsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the new embankment name. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the embankment to be renamed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Embankment successfully renamed in CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/embankments": {
            "get": {
                "tags": [
                    "Embankments"
                ],
                "summary": "Get swtData projects embankments",
                "description": "Returns matching CWMS Embankment Data for a Reservoir Project.",
                "operationId": "getSwtDataProjectsEmbankments",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Office id for the reservoir project location associated with the embankments.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "query",
                        "description": "Specifies the project-id of the Embankments whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Embankment"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Embankment"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Embankments"
                ],
                "summary": "Post swtData projects embankments",
                "description": "Create CWMS Embankment",
                "operationId": "postSwtDataProjectsEmbankments",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/Embankment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Embankment successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/turbines/{name}": {
            "get": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Get swtData projects turbines with name",
                "description": "Returns CWMS Turbine Data",
                "operationId": "getSwtDataProjectsTurbinesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the turbine to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the turbine to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/Turbine"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Turbine"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Delete swtData projects turbines with name",
                "description": "Delete CWMS Turbine",
                "operationId": "deleteSwtDataProjectsTurbinesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the turbine to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the turbine to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to \"DELETE_KEY\"",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the turbine was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Turbine successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Patch swtData projects turbines with name",
                "description": "Rename CWMS Turbine",
                "operationId": "patchSwtDataProjectsTurbinesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the new turbine name. ",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the turbine to be renamed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Turbine successfully renamed in to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/turbines": {
            "get": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Get swtData projects turbines",
                "description": "Returns matching CWMS Turbine Data for a Reservoir Project.",
                "operationId": "getSwtDataProjectsTurbines",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Office id for the reservoir project location associated with the turbines.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "query",
                        "description": "Specifies the project-id of the Turbines whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Turbine"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Turbine"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Post swtData projects turbines",
                "description": "Create CWMS Turbine",
                "operationId": "postSwtDataProjectsTurbines",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/Turbine"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Turbine"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Turbine successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{name}/turbine-changes": {
            "get": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Get swtData projects with office with name turbineChanges",
                "description": "Returns matching CWMS Turbine Change Data for a Reservoir Project.",
                "operationId": "getSwtDataProjectsWithOfficeWithNameTurbineChanges",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Office id for the reservoir project location associated with the turbine changes.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of project of the Turbine changes whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start-time-inclusive",
                        "in": "query",
                        "description": "A flag specifying whether any data at the start time should be retrieved ('True') or only data <b><em>after</em></b> the start time ('False').  Default value is True",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "end-time-inclusive",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether any data at the end time should be retrieved ('True') or only data <b><em>before</em></b> the end time ('False'). Default value is False",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "unit-system",
                        "in": "query",
                        "description": "Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to EN.",
                        "schema": {
                            "$ref": "#/components/schemas/UnitSystem"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "the maximum number of turbine changes to retrieve, regardless of time window. A positive integer is interpreted as the maximum number of changes from the beginning of the time window. A negative integer is interpreted as the maximum number from the end of the time window. Default 500.A page cursor will not be returned by this DTO. Instead, the next page can be determined by querying the next set of changes using the last returned change date and using start-time-inclusive=false",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TurbineChange"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Post swtData projects with office with name turbineChanges",
                "description": "Create CWMS Turbine Changes",
                "operationId": "postSwtDataProjectsWithOfficeWithNameTurbineChanges",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Office id for the reservoir project location associated with the turbine changes.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of project of the Turbine changes whose data is to stored.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "override-protection",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether to delete protected data. Default is False",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/TurbineChange"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TurbineChange"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Project Id or Turbine location Ids not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Turbine successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Turbines"
                ],
                "summary": "Delete swtData projects with office with name turbineChanges",
                "description": "Delete CWMS Turbine Changes",
                "operationId": "deleteSwtDataProjectsWithOfficeWithNameTurbineChanges",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Specifies the owning office of the project for changes to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of project for the turbine changes to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "override-protection",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether to delete protected data. Default is False",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the project was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Turbine successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/outlets/{name}": {
            "get": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Get swtData projects outlets with name",
                "description": "Returns CWMS Outlet Data",
                "operationId": "getSwtDataProjectsOutletsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the location-id of the Outlet to be created.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the outlet to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outlet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Outlet"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Delete swtData projects outlets with name",
                "description": "Delete CWMS Outlet",
                "operationId": "deleteSwtDataProjectsOutletsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the location-id of the outlet to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the outlet to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to \"DELETE_KEY\"",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the outlet was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Outlet successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Patch swtData projects outlets with name",
                "description": "Rename CWMS Outlet",
                "operationId": "patchSwtDataProjectsOutletsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Specifies the new outlet location-id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the outlet to be renamed.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "CWMS Outlet successfully renamed."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/outlets": {
            "get": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Get swtData projects outlets",
                "description": "Returns matching CWMS Outlet Data for a Reservoir Project.",
                "operationId": "getSwtDataProjectsOutlets",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Office id for the reservoir project location associated with the outlets.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "query",
                        "description": "Specifies the project-id of the Outlets whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Outlet"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Outlet"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Post swtData projects outlets",
                "description": "Create CWMS Outlet",
                "operationId": "postSwtDataProjectsOutlets",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/Outlet"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Outlet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Outlet successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/gate-changes": {
            "post": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Post swtData projects gateChanges",
                "description": "Create CWMS Gate Changes",
                "operationId": "postSwtDataProjectsGateChanges",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided Gate Changes already exist. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GateChange"
                                }
                            }
                        },
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/GateChange"
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "Gate Changes successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/gate-changes": {
            "get": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Get swtData projects with office with projectId gateChanges",
                "description": "Returns matching CWMS gate change data for a Reservoir Project.",
                "operationId": "getSwtDataProjectsWithOfficeWithProjectIdGateChanges",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Office id for the reservoir project location associated with the Gate Changes.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "Specifies the project-id of the Gate Changes whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start-time-inclusive",
                        "in": "query",
                        "description": "A flag specifying whether any data at the start time should be retrieved ('True') or only data <b><em>after</em></b> the start time ('False').  Default value is True",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "end-time-inclusive",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether any data at the end time should be retrieved ('True') or only data <b><em>before</em></b> the end time ('False'). Default value is False",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "unit-system",
                        "in": "query",
                        "description": "Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to EN.",
                        "schema": {
                            "$ref": "#/components/schemas/UnitSystem"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "the maximum number of gate changes to retrieve, regardless of time window. A positive integer is interpreted as the maximum number of changes from the beginning of the time window. A negative integer is interpreted as the maximum number from the end of the time window. Default 500.A page cursor will not be returned by this DTO. Instead, the next page can be determined by querying the next set of changes using the last returned change date and using start-time-inclusive=false",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GateChange"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GateChange"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Delete swtData projects with office with projectId gateChanges",
                "description": "Deletes matching CWMS gate change data for a Reservoir Project.",
                "operationId": "deleteSwtDataProjectsWithOfficeWithProjectIdGateChanges",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Office id for the reservoir project location associated with the Gate Changes.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "Specifies the project-id of the Gate Changes whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "begin",
                        "in": "query",
                        "description": "The start of the time window",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "end",
                        "in": "query",
                        "description": "The end of the time window.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "override-protection",
                        "in": "query",
                        "description": "A flag ('True'/'False') specifying whether to delete protected data. Default is False",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the project was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Gate changes successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/virtual-outlets/{name}": {
            "get": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Get swtData projects with office with projectId virtualOutlets with name",
                "description": "Returns CWMS Virtual Outlet Data",
                "operationId": "getSwtDataProjectsWithOfficeWithProjectIdVirtualOutletsWithName",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Specifies the owning office of the virtual outlet to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "Specifies the project-id of the virtual outlets whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the location-id of the virtual outlet to be created.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualOutlet"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/VirtualOutlet"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Delete swtData projects with office with projectId virtualOutlets with name",
                "description": "Delete CWMS Virtual Outlet",
                "operationId": "deleteSwtDataProjectsWithOfficeWithProjectIdVirtualOutletsWithName",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Specifies the owning office of the virtual outlet to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "Specifies the project id of the virtual outlet to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the location id of the virtual outlet to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to \"DELETE_KEY\"",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the virtual outlet was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Virtual Outlet successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{office}/{project-id}/virtual-outlets": {
            "get": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Get swtData projects with office with projectId virtualOutlets",
                "description": "Returns matching CWMS Virtual Outlet Data for a Reservoir Project.",
                "operationId": "getSwtDataProjectsWithOfficeWithProjectIdVirtualOutlets",
                "parameters": [
                    {
                        "name": "office",
                        "in": "path",
                        "description": "Office id for the reservoir project location associated with the virtual outlets.  Defaults to the user session id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-id",
                        "in": "path",
                        "description": "Specifies the project-id of the virtual outlets whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VirtualOutlet"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/VirtualOutlet"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/virtual-outlets": {
            "post": {
                "tags": [
                    "Outlets"
                ],
                "summary": "Post swtData projects virtualOutlets",
                "description": "Create CWMS Virtual Outlet",
                "operationId": "postSwtDataProjectsVirtualOutlets",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/VirtualOutlet"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VirtualOutlet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Virtual Outlet successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/locations": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get swtData projects locations",
                "description": "Get a list of project child locations",
                "operationId": "getSwtDataProjectsLocations",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the project_id.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "location-kind-like",
                        "in": "query",
                        "description": "Posix <a href=\"regexp.html\">regular expression</a> matching against the location kind.  The pattern will be matched against the valid location-kinds for Project child locations:{\"EMBANKMENT\", \"TURBINE\", \"OUTLET\", \"LOCK\", \"GATE\"}. Multiple kinds can be matched by using Regular Expression OR clauses. For example: \"(TURBINE|OUTLET)\"",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProjectChildLocations"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects/{name}": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get swtData projects with name",
                "description": "Retrieves requested Project",
                "operationId": "getSwtDataProjectsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the project to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the Project whose data is to be included in the response.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the Project was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json;version=1": {
                                "schema": {
                                    "$ref": "#/components/schemas/Project"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Projects"
                ],
                "summary": "Delete swtData projects with name",
                "description": "Deletes requested reservoir project",
                "operationId": "deleteSwtDataProjectsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The project identifier to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the project to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "description": "Specifies the delete method used. Defaults to \"DELETE_KEY\"",
                        "schema": {
                            "$ref": "#/components/schemas/DeleteMethod"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Projects"
                ],
                "summary": "Patch swtData projects with name",
                "description": "Rename a project",
                "operationId": "patchSwtDataProjectsWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "The new name of the project",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "The office of the project to be renamed",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get swtData projects",
                "description": "Returns Projects Data",
                "operationId": "getSwtDataProjects",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the data in the response. If this field is not specified, matching items from all offices shall be returned.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id-mask",
                        "in": "query",
                        "description": "Project Id mask.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "This end point can return a lot of data, this identifies where in the request you are. This is an opaque value, and can be obtained from the 'next-page' value in the response.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "description": "How many entries per page returned. Default 100.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the projects were not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Projects"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "request format is not implemented"
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Projects"
                ],
                "summary": "Post swtData projects",
                "description": "Create new Project",
                "operationId": "postSwtDataProjects",
                "parameters": [
                    {
                        "name": "fail-if-exists",
                        "in": "query",
                        "description": "Create will fail if provided ID already exists. Default: true",
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;version=1": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Project"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/properties/{name}": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get swtData properties with name",
                "description": "Returns CWMS Property Data",
                "operationId": "getSwtDataPropertiesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the property to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the property to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Specifies the category id of the property to be retrieved.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "default-value",
                        "in": "query",
                        "description": "Specifies the default value if the property does not exist.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Properties"
                ],
                "summary": "Delete swtData properties with name",
                "description": "Delete CWMS Property",
                "operationId": "deleteSwtDataPropertiesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the name of the property to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the property to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Specifies the category id of the property to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the property was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Property successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Properties"
                ],
                "summary": "Patch swtData properties with name",
                "description": "Update CWMS Property",
                "operationId": "patchSwtDataPropertiesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Property"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Property successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/properties": {
            "get": {
                "tags": [
                    "Properties"
                ],
                "summary": "Get swtData properties",
                "description": "Returns matching CWMS Property Data.",
                "operationId": "getSwtDataProperties",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Filters properties to the specified office mask",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category-id",
                        "in": "query",
                        "description": "Filters properties to the specified category mask",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name-mask",
                        "in": "query",
                        "description": "Filters properties to the specified name mask",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Property"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Properties"
                ],
                "summary": "Post swtData properties",
                "description": "Create CWMS Property",
                "operationId": "postSwtDataProperties",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Property"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Property successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/lookup-types": {
            "get": {
                "tags": [
                    "LookupTypes"
                ],
                "summary": "Get swtData lookupTypes",
                "description": "Returns matching CWMS Lookup Type Data.",
                "operationId": "getSwtDataLookupTypes",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filters lookup types to the specified category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "Filters lookup types to the specified prefix",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Filters lookup types to the specified office ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LookupType"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "LookupTypes"
                ],
                "summary": "Post swtData lookupTypes",
                "description": "Create CWMS Lookup Type",
                "operationId": "postSwtDataLookupTypes",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Specifies the category id of the lookup type to be created.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "Specifies the prefix of the lookup type to be created.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LookupType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Lookup Type successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/lookup-types/{name}": {
            "delete": {
                "tags": [
                    "LookupTypes"
                ],
                "summary": "Delete swtData lookupTypes with name",
                "description": "Delete CWMS Lookup Type",
                "operationId": "deleteSwtDataLookupTypesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Specifies the category id of the lookup type to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "Specifies the prefix of the lookup type to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the owning office of the lookup type to be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Based on the combination of inputs provided the lookup type was not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Lookup Type successfully deleted from CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "LookupTypes"
                ],
                "summary": "Patch swtData lookupTypes with name",
                "description": "Update CWMS Lookup Type",
                "operationId": "patchSwtDataLookupTypesWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Specifies the category id of the lookup type to be updated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "prefix",
                        "in": "query",
                        "description": "Specifies the prefix of the lookup type to be updated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LookupType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "Lookup Type successfully stored to CWMS."
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/project-locks/{name}": {
            "get": {
                "tags": [
                    "Project Locks"
                ],
                "summary": "Get swtData projectLocks with name",
                "description": "Return a lock if the specified project is locked. Otherwise 404",
                "operationId": "getSwtDataProjectLocksWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "The id of the project.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "The office id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "application-id",
                        "in": "query",
                        "description": "The application-id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No matching Lock was found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectLock"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Project Locks"
                ],
                "summary": "Delete swtData projectLocks with name",
                "description": "Revokes a project lock, if successful the lock is deleted",
                "operationId": "deleteSwtDataProjectLocksWithName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Specifies the project-id to be deleted",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the office of the lock.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "revoke-timeout",
                        "in": "query",
                        "description": "time in seconds to wait for existing lock to be revoked. Default: 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/project-locks": {
            "get": {
                "tags": [
                    "Project Locks"
                ],
                "summary": "Get swtData projectLocks",
                "description": "Get a list of project locks",
                "operationId": "getSwtDataProjectLocks",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Specifies the office mask to be used to filter the locks. Supports '*' but is typically a single office.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-mask",
                        "in": "query",
                        "description": "Specifies the project mask to be used to filter the locks. Defaults to '*'",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "application-mask",
                        "in": "query",
                        "description": "Specifies the application mask to be used to filter the locks. Defaults to '*'",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectLock"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Project Locks"
                ],
                "summary": "Post swtData projectLocks",
                "description": "Requests the creation of a new Reservoir Project Lock",
                "operationId": "postSwtDataProjectLocks",
                "parameters": [
                    {
                        "name": "revoke-existing",
                        "in": "query",
                        "description": "If an existing lock is found should a revoke be attempted? Default: false",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "revoke-timeout",
                        "in": "query",
                        "description": "time in seconds to wait for existing lock to be revoked. Default: 10",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Users must provide a Lock object specifying the officeId, projectId and applicationId. Other fields will be ignored.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProjectLock"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProjectLockId"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/project-locks/deny": {
            "post": {
                "tags": [
                    "Project Locks"
                ],
                "summary": "Post swtData projectLocks deny",
                "description": "Deny a Lock revoke request.",
                "operationId": "postSwtDataProjectLocksDeny",
                "parameters": [
                    {
                        "name": "lock-id",
                        "in": "query",
                        "description": "The id of the lock.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/project-locks/release": {
            "post": {
                "tags": [
                    "Project Locks"
                ],
                "summary": "Post swtData projectLocks release",
                "description": "Releases a project lock",
                "operationId": "postSwtDataProjectLocksRelease",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "The user's office.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "lock-id",
                        "in": "query",
                        "description": "The id of the lock to release.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/project-lock-rights": {
            "get": {
                "tags": [
                    "Project Lock Revoker Rights"
                ],
                "summary": "Get swtData projectLockRights",
                "description": "Get a list of project lock revoker rights ",
                "operationId": "getSwtDataProjectLockRights",
                "parameters": [
                    {
                        "name": "office-mask",
                        "in": "query",
                        "description": "Specifies the office mask to be used to filter the lock revoker rights. Supports '*' but is typically a single office.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-mask",
                        "in": "query",
                        "description": "Specifies the project mask to be used to filter the lock revoker rights. Defaults to '*'",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "application-mask",
                        "in": "query",
                        "description": "Specifies the application mask to be used to filter the lock revoker rights. Defaults to '*'",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LockRevokerRights"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/project-lock-rights/remove-all": {
            "post": {
                "tags": [
                    "Project Lock Revoker Rights"
                ],
                "summary": "Post swtData projectLockRights removeAll",
                "description": "Revokes a project lock, if successful the lock is deleted",
                "operationId": "postSwtDataProjectLockRightsRemoveAll",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the session office.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "application-id",
                        "in": "query",
                        "description": "Specifies the application id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user-id",
                        "in": "query",
                        "description": "Specifies the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        },
        "/project-lock-rights/update": {
            "post": {
                "tags": [
                    "Project Lock Revoker Rights"
                ],
                "summary": "Post swtData projectLockRights update",
                "description": "Update Lock Revoker Rights.",
                "operationId": "postSwtDataProjectLockRightsUpdate",
                "parameters": [
                    {
                        "name": "office",
                        "in": "query",
                        "description": "Specifies the session office.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "project-mask",
                        "in": "query",
                        "description": "Specifies the project mask to be used Defaults to '*'",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "application-id",
                        "in": "query",
                        "description": "Specifies the application id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user-id",
                        "in": "query",
                        "description": "Specifies the user.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "allow",
                        "in": "query",
                        "description": "True to add the user to the allow list, False to add to the deny list",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CdaError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "CwmsAAACacAuth": []
                    },
                    {
                        "ApiKey": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "CdaError": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "incidentIdentifier": {
                        "type": "string",
                        "description": "A randomly generated number to help identify your request in the logs for analysis.."
                    },
                    "details": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    }
                }
            },
            "ApiKey": {
                "required": [
                    "key-name",
                    "user-id"
                ],
                "type": "object",
                "properties": {
                    "user-id": {
                        "type": "string"
                    },
                    "key-name": {
                        "type": "string"
                    },
                    "api-key": {
                        "type": "string"
                    },
                    "created": {
                        "type": "string",
                        "description": "The instant this Key was created, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "expires": {
                        "type": "string",
                        "description": "When this key expires, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')",
                        "format": "date-time"
                    }
                }
            },
            "location_category": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "description": "A representation of a location category"
            },
            "LocationCategory": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "description": "A representation of a location category"
            },
            "AssignedLocation": {
                "type": "object",
                "properties": {
                    "location-id": {
                        "type": "string"
                    },
                    "office-id": {
                        "type": "string"
                    },
                    "alias-id": {
                        "type": "string"
                    },
                    "attribute": {
                        "type": "number"
                    },
                    "ref-location-id": {
                        "type": "string"
                    }
                }
            },
            "location_group": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "location-category": {
                        "$ref": "#/components/schemas/location_category"
                    },
                    "description": {
                        "type": "string"
                    },
                    "shared-loc-alias-id": {
                        "type": "string"
                    },
                    "shared-ref-location-id": {
                        "type": "string"
                    },
                    "loc-group-attribute": {
                        "type": "number"
                    },
                    "assigned-locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssignedLocation"
                        }
                    }
                },
                "description": "A representation of a location group"
            },
            "LocationGroup": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "location-category": {
                        "$ref": "#/components/schemas/location_category"
                    },
                    "description": {
                        "type": "string"
                    },
                    "shared-loc-alias-id": {
                        "type": "string"
                    },
                    "shared-ref-location-id": {
                        "type": "string"
                    },
                    "loc-group-attribute": {
                        "type": "number"
                    },
                    "assigned-locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssignedLocation"
                        }
                    }
                },
                "description": "A representation of a location group"
            },
            "LocationGroup_CSV": {
                "type": "object",
                "description": "Single LocationGroup or List of LocationGroups in comma separated format",
                "example": "#LocationGroup Id, OfficeId, Description, CategoryId, CategoryOfficeId, SharedLocAliasId, SharedRefLocationId, LocGroupAttribute\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
            },
            "CsvV1LocationGroup": {
                "type": "object",
                "description": "Single LocationGroup or List of LocationGroups in comma separated format",
                "example": "#LocationGroup Id, OfficeId, Description, CategoryId, CategoryOfficeId, SharedLocAliasId, SharedRefLocationId, LocGroupAttribute\r\nCERL,Construction Engineering Research Laboratory,Field Operating Activity\tERD\r\nCHL,Coastal and Hydraulics Laboratory,Field Operating Activity\tERD\r\nNAB,Baltimore District,District,NAD\r\nNAD,North Atlantic Division,Division Headquarters,HQ"
            },
            "Unit": {
                "type": "object"
            },
            "Location": {
                "required": [
                    "name",
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "name": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "public-name": {
                        "type": "string"
                    },
                    "long-name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "timezone-name": {
                        "type": "string"
                    },
                    "location-type": {
                        "type": "string"
                    },
                    "location-kind": {
                        "type": "string"
                    },
                    "nation": {
                        "type": "string",
                        "enum": [
                            "US",
                            "CANADA",
                            "MEXICO"
                        ]
                    },
                    "state-initial": {
                        "type": "string"
                    },
                    "county-name": {
                        "type": "string"
                    },
                    "nearest-city": {
                        "type": "string"
                    },
                    "horizontal-datum": {
                        "type": "string"
                    },
                    "published-longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "published-latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "vertical-datum": {
                        "type": "string"
                    },
                    "elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "map-label": {
                        "type": "string"
                    },
                    "bounding-office-id": {
                        "type": "string"
                    },
                    "elevation-units": {
                        "type": "string"
                    }
                }
            },
            "state": {
                "required": [
                    "name",
                    "state-initial"
                ],
                "type": "object",
                "properties": {
                    "state-initial": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "description": "A representation of a state"
            },
            "State": {
                "required": [
                    "name",
                    "state-initial"
                ],
                "type": "object",
                "properties": {
                    "state-initial": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "description": "A representation of a state"
            },
            "county": {
                "required": [
                    "county-id",
                    "name",
                    "state-initial"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "county-id": {
                        "type": "string"
                    },
                    "state-initial": {
                        "type": "string"
                    }
                },
                "description": "A representation of a county"
            },
            "County": {
                "required": [
                    "county-id",
                    "name",
                    "state-initial"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "county-id": {
                        "type": "string"
                    },
                    "state-initial": {
                        "type": "string"
                    }
                },
                "description": "A representation of a county"
            },
            "OfficeFormatV1": {
                "type": "object",
                "properties": {
                    "offices": {
                        "$ref": "#/components/schemas/OfficesFMT"
                    }
                }
            },
            "OfficesFMT": {
                "type": "object",
                "properties": {
                    "offices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/office"
                        }
                    }
                }
            },
            "office": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "long-name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "unknown",
                            "corps headquarters",
                            "division headquarters",
                            "division regional",
                            "district",
                            "filed operating activity"
                        ]
                    },
                    "reports-to": {
                        "type": "string",
                        "description": "Reference to another office, like a division, that this office reports to."
                    }
                },
                "description": "A representation of a CWMS office"
            },
            "Office": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "long-name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "unknown",
                            "corps headquarters",
                            "division headquarters",
                            "division regional",
                            "district",
                            "filed operating activity"
                        ]
                    },
                    "reports-to": {
                        "type": "string",
                        "description": "Reference to another office, like a division, that this office reports to."
                    }
                },
                "description": "A representation of a CWMS office"
            },
            "parameter": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "name": {
                        "type": "string"
                    },
                    "base-parameter": {
                        "type": "string"
                    },
                    "sub-parameter": {
                        "type": "string"
                    },
                    "sub-parameter-description": {
                        "type": "string"
                    },
                    "db-unit-id": {
                        "type": "string"
                    },
                    "unit-long-name": {
                        "type": "string"
                    },
                    "unit-description": {
                        "type": "string"
                    }
                }
            },
            "Parameter": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "name": {
                        "type": "string"
                    },
                    "base-parameter": {
                        "type": "string"
                    },
                    "sub-parameter": {
                        "type": "string"
                    },
                    "sub-parameter-description": {
                        "type": "string"
                    },
                    "db-unit-id": {
                        "type": "string"
                    },
                    "unit-long-name": {
                        "type": "string"
                    },
                    "unit-description": {
                        "type": "string"
                    }
                }
            },
            "time-zone": {
                "required": [
                    "time-zone"
                ],
                "type": "object",
                "properties": {
                    "time-zone": {
                        "type": "string"
                    }
                }
            },
            "time-zones": {
                "type": "object",
                "properties": {
                    "time-zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/time-zone"
                        }
                    }
                }
            },
            "TimeZoneIds": {
                "type": "object",
                "properties": {
                    "time-zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/time-zone"
                        }
                    }
                }
            },
            "LocationLevel": {
                "required": [
                    "location-level-id",
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "location-level-id": {
                        "type": "string",
                        "description": "Name of the location level"
                    },
                    "seasonal-time-series-id": {
                        "type": "string",
                        "description": "Timeseries ID (e.g. from the times series catalog) to use as the location level. Mutually exclusive with seasonalValues and siParameterUnitsConstantValue"
                    },
                    "specified-level-id": {
                        "type": "string",
                        "description": "Generic name of this location level. Common names are 'Top of Dam', 'Streambed', 'Bottom of Dam'."
                    },
                    "parameter-type-id": {
                        "type": "string",
                        "description": "To indicate if single or aggregate value",
                        "enum": [
                            "Inst",
                            "Ave",
                            "Min",
                            "Max",
                            "Total"
                        ]
                    },
                    "parameter-id": {
                        "type": "string",
                        "description": "Data Type such as Stage, Elevation, or others."
                    },
                    "constant-value": {
                        "type": "number",
                        "description": "Single value for this location level. Mutually exclusive with seasonableTimeSeriesId and seasonValues.",
                        "format": "double"
                    },
                    "level-units-id": {
                        "type": "string",
                        "description": "Units the provided levels are in"
                    },
                    "level-date": {
                        "type": "string",
                        "description": "The date/time at which this location level configuration takes effect.",
                        "format": "date-time"
                    },
                    "level-comment": {
                        "type": "string"
                    },
                    "interval-origin": {
                        "type": "string",
                        "description": "The start point of provided seasonal values",
                        "format": "date-time"
                    },
                    "interval-months": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "interval-minutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "interpolate-string": {
                        "type": "string",
                        "description": "Indicating whether or not to interpolate between seasonal values.",
                        "enum": [
                            "T",
                            "F"
                        ]
                    },
                    "duration-id": {
                        "type": "string",
                        "description": "0 if parameterTypeId is Inst. Otherwise duration indicating the time window of the aggregate value."
                    },
                    "attribute-value": {
                        "type": "number"
                    },
                    "attribute-units-id": {
                        "type": "string"
                    },
                    "attribute-parameter-type-id": {
                        "type": "string"
                    },
                    "attribute-parameter-id": {
                        "type": "string"
                    },
                    "attribute-duration-id": {
                        "type": "string"
                    },
                    "attribute-comment": {
                        "type": "string"
                    },
                    "seasonal-values": {
                        "type": "array",
                        "description": "List of Repeating seasonal values. The values repeater after the specified interval. A yearly interval seasonable could have 12 different values, one for each month for example. Mutually exclusive with seasonalTimeSeriesId and siParameterUnitsConstantValue",
                        "items": {
                            "$ref": "#/components/schemas/SeasonalValueBean"
                        }
                    }
                }
            },
            "SeasonalValueBean": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "format": "double"
                    },
                    "offset-months": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "offset-minutes": {
                        "type": "integer"
                    }
                },
                "description": "List of Repeating seasonal values. The values repeater after the specified interval. A yearly interval seasonable could have 12 different values, one for each month for example. Mutually exclusive with seasonalTimeSeriesId and siParameterUnitsConstantValue"
            },
            "location-levels": {
                "type": "object",
                "properties": {
                    "levels": {
                        "type": "array",
                        "description": "List of retrieved location levels",
                        "items": {
                            "$ref": "#/components/schemas/LocationLevel"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "LocationLevels": {
                "type": "object",
                "properties": {
                    "levels": {
                        "type": "array",
                        "description": "List of retrieved location levels",
                        "items": {
                            "$ref": "#/components/schemas/LocationLevel"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "Offset": {
                "type": "object",
                "properties": {
                    "estimate": {
                        "type": "boolean"
                    },
                    "to-datum": {
                        "type": "string"
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "TimeSeries.Column": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "ordinal": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "datatype": {
                        "type": "string"
                    }
                },
                "readOnly": true
            },
            "TimeSeries.Record": {
                "type": "object",
                "properties": {
                    "date-time": {
                        "type": "integer",
                        "description": "Milliseconds since 1970-01-01 (Unix Epoch), always UTC",
                        "format": "int64"
                    },
                    "value": {
                        "type": "number",
                        "description": "Requested time-series data value",
                        "format": "double"
                    },
                    "quality-code": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "description": "List of retrieved time-series values"
            },
            "timeseries": {
                "required": [
                    "units"
                ],
                "type": "object",
                "properties": {
                    "begin": {
                        "type": "string",
                        "description": "The requested start time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "date-version-type": {
                        "type": "string",
                        "description": "Version type specifies the type of timeseries response to be received. Can be max aggregate or single version. Max aggregate cannot be run if version date field is specified.",
                        "enum": [
                            "MAX_AGGREGATE",
                            "SINGLE_VERSION",
                            "UNVERSIONED"
                        ]
                    },
                    "end": {
                        "type": "string",
                        "description": "The requested end time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "interval": {
                        "type": "object",
                        "properties": {
                            "seconds": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "units": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "duration": {
                                            "type": "object",
                                            "properties": {
                                                "seconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "nano": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "zero": {
                                                    "type": "boolean"
                                                },
                                                "negative": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "durationEstimated": {
                                            "type": "boolean"
                                        },
                                        "dateBased": {
                                            "type": "boolean"
                                        },
                                        "timeBased": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "nano": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "zero": {
                                "type": "boolean"
                            },
                            "negative": {
                                "type": "boolean"
                            }
                        },
                        "description": "The interval of the time-series, in ISO-8601 duration format",
                        "format": "Java Duration",
                        "readOnly": true
                    },
                    "interval-offset": {
                        "type": "integer",
                        "description": "Offset from top of interval",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Time-series name"
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "office-id": {
                        "type": "string",
                        "description": "Office ID that owns the time-series"
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "time-zone": {
                        "type": "string",
                        "description": "Only on 21.1.1 Database. The timezone the Interval Offset is from.",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    },
                    "units": {
                        "type": "string",
                        "description": "The units of the time series data"
                    },
                    "value-columns": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TimeSeries.Column"
                        }
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "description": "Time is Milliseconds since the UNIX Epoch. Value is Double (for missing data you can use null, or -Float.MAX_VALUE (-340282346638528859811704183484516925440), quality is an integer.) If you are using missing data set the quality to 5.Failure to do this may result in silently ignoring that value on not storing a placeholder which can be important in irregular and psuedo regular timeseries.",
                            "example": [
                                1509654000000,
                                54.3,
                                0
                            ],
                            "items": {
                                "type": "object",
                                "properties": {
                                    "date-time": {
                                        "type": "integer",
                                        "description": "Milliseconds since 1970-01-01 (Unix Epoch), always UTC",
                                        "format": "int64"
                                    },
                                    "value": {
                                        "type": "number",
                                        "description": "Requested time-series data value",
                                        "format": "double"
                                    },
                                    "quality-code": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "description": "List of retrieved time-series values"
                            }
                        }
                    },
                    "version-date": {
                        "type": "string",
                        "description": "The version date of the time series trace",
                        "format": "date-time"
                    },
                    "vertical-datum-info": {
                        "$ref": "#/components/schemas/vertical-datum-info"
                    }
                }
            },
            "vertical-datum-info": {
                "type": "object",
                "properties": {
                    "office": {
                        "type": "string"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "native-datum": {
                        "type": "string"
                    },
                    "elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "offsets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Offset"
                        }
                    }
                }
            },
            "TimeSeries": {
                "required": [
                    "units"
                ],
                "type": "object",
                "properties": {
                    "begin": {
                        "type": "string",
                        "description": "The requested start time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "date-version-type": {
                        "type": "string",
                        "description": "Version type specifies the type of timeseries response to be received. Can be max aggregate or single version. Max aggregate cannot be run if version date field is specified.",
                        "enum": [
                            "MAX_AGGREGATE",
                            "SINGLE_VERSION",
                            "UNVERSIONED"
                        ]
                    },
                    "end": {
                        "type": "string",
                        "description": "The requested end time of the data, in ISO-8601 format with offset and timezone ('yyyy-MM-dd'T'HH:mm:ssZ'['VV']'')",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "interval": {
                        "type": "object",
                        "properties": {
                            "seconds": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "units": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "duration": {
                                            "type": "object",
                                            "properties": {
                                                "seconds": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "nano": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "zero": {
                                                    "type": "boolean"
                                                },
                                                "negative": {
                                                    "type": "boolean"
                                                }
                                            }
                                        },
                                        "durationEstimated": {
                                            "type": "boolean"
                                        },
                                        "dateBased": {
                                            "type": "boolean"
                                        },
                                        "timeBased": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            },
                            "nano": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "zero": {
                                "type": "boolean"
                            },
                            "negative": {
                                "type": "boolean"
                            }
                        },
                        "description": "The interval of the time-series, in ISO-8601 duration format",
                        "format": "Java Duration",
                        "readOnly": true
                    },
                    "interval-offset": {
                        "type": "integer",
                        "description": "Offset from top of interval",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "Time-series name"
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "office-id": {
                        "type": "string",
                        "description": "Office ID that owns the time-series"
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "time-zone": {
                        "type": "string",
                        "description": "Only on 21.1.1 Database. The timezone the Interval Offset is from.",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    },
                    "units": {
                        "type": "string",
                        "description": "The units of the time series data"
                    },
                    "value-columns": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TimeSeries.Column"
                        }
                    },
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "description": "Time is Milliseconds since the UNIX Epoch. Value is Double (for missing data you can use null, or -Float.MAX_VALUE (-340282346638528859811704183484516925440), quality is an integer.) If you are using missing data set the quality to 5.Failure to do this may result in silently ignoring that value on not storing a placeholder which can be important in irregular and psuedo regular timeseries.",
                            "example": [
                                1509654000000,
                                54.3,
                                0
                            ],
                            "items": {
                                "type": "object",
                                "properties": {
                                    "date-time": {
                                        "type": "integer",
                                        "description": "Milliseconds since 1970-01-01 (Unix Epoch), always UTC",
                                        "format": "int64"
                                    },
                                    "value": {
                                        "type": "number",
                                        "description": "Requested time-series data value",
                                        "format": "double"
                                    },
                                    "quality-code": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "description": "List of retrieved time-series values"
                            }
                        }
                    },
                    "version-date": {
                        "type": "string",
                        "description": "The version date of the time series trace",
                        "format": "date-time"
                    },
                    "vertical-datum-info": {
                        "$ref": "#/components/schemas/vertical-datum-info"
                    }
                }
            },
            "UnitSystem": {
                "type": "string",
                "description": "Unit System desired in response. Can be SI (International Scientific) or EN (Imperial.) If unspecified, defaults to SI.",
                "enum": [
                    "SI",
                    "EN"
                ]
            },
            "Tsv": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/TsvId"
                    },
                    "value": {
                        "type": "number",
                        "format": "double"
                    },
                    "qualityCode": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "endDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "TsvId": {
                "type": "object",
                "properties": {
                    "tsCode": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dateTime": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "versionDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dataEntryDate": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "StandardTextId": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "StandardTextValue": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/StandardTextId"
                    },
                    "standard-text": {
                        "type": "string"
                    }
                }
            },
            "StandardTextCatalog": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StandardTextValue"
                        }
                    }
                }
            },
            "DeleteMethod": {
                "type": "string",
                "enum": [
                    "DELETE_ALL",
                    "DELETE_KEY",
                    "DELETE_DATA"
                ]
            },
            "RegularTextTimeSeriesRow": {
                "type": "object",
                "properties": {
                    "date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "data-entry-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "text-value": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "media-type": {
                        "type": "string"
                    },
                    "quality-code": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "dest-flag": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value-url": {
                        "type": "string"
                    }
                }
            },
            "TextTimeSeries": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "name": {
                        "type": "string"
                    },
                    "interval-offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "time-zone": {
                        "type": "string"
                    },
                    "date-version-type": {
                        "type": "string",
                        "description": "Version type specifies the type of timeseries response to be received. Can be max aggregate or single version. Max aggregate cannot be run if version date field is specified.",
                        "enum": [
                            "MAX_AGGREGATE",
                            "SINGLE_VERSION",
                            "UNVERSIONED"
                        ]
                    },
                    "version-date": {
                        "type": "string",
                        "description": "The version date of the time series trace",
                        "format": "date-time"
                    },
                    "regular-text-values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RegularTextTimeSeriesRow"
                        }
                    }
                }
            },
            "BinaryTimeSeries": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "name": {
                        "type": "string"
                    },
                    "interval-offset": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "time-zone": {
                        "type": "string"
                    },
                    "date-version-type": {
                        "type": "string",
                        "description": "Version type specifies the type of timeseries response to be received. Can be max aggregate or single version. Max aggregate cannot be run if version date field is specified.",
                        "enum": [
                            "MAX_AGGREGATE",
                            "SINGLE_VERSION",
                            "UNVERSIONED"
                        ]
                    },
                    "version-date": {
                        "type": "string",
                        "description": "The version date of the time series trace",
                        "format": "date-time"
                    },
                    "binary-values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BinaryTimeSeriesRow"
                        }
                    }
                }
            },
            "BinaryTimeSeriesRow": {
                "type": "object",
                "properties": {
                    "date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "data-entry-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "media-type": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "dest-flag": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "binary-value": {
                        "type": "string",
                        "format": "byte"
                    },
                    "value-url": {
                        "type": "string"
                    },
                    "quality-code": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "timeseries-category": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "description": "A representation of a TimeSeries category"
            },
            "TimeSeriesCategory": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "description": "A representation of a TimeSeries category"
            },
            "TimeSeriesIdentifierDescriptor": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "time-series-id": {
                        "type": "string"
                    },
                    "timezone-name": {
                        "type": "string"
                    },
                    "interval-offset-minutes": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "TimeSeriesIdentifierDescriptors": {
                "type": "object",
                "properties": {
                    "descriptors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TimeSeriesIdentifierDescriptor"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "AssignedTimeSeries": {
                "type": "object",
                "properties": {
                    "officeId": {
                        "type": "string"
                    },
                    "timeseriesId": {
                        "type": "string"
                    },
                    "tsCode": {
                        "type": "number"
                    },
                    "aliasId": {
                        "type": "string"
                    },
                    "refTsId": {
                        "type": "string"
                    },
                    "attribute": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "timeseries-group": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "time-series-category": {
                        "$ref": "#/components/schemas/timeseries-category"
                    },
                    "description": {
                        "type": "string"
                    },
                    "shared-alias-id": {
                        "type": "string"
                    },
                    "shared-ref-ts-id": {
                        "type": "string"
                    },
                    "assigned-time-series": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssignedTimeSeries"
                        }
                    }
                },
                "description": "A representation of a timeseries group"
            },
            "TimeSeriesGroup": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "time-series-category": {
                        "$ref": "#/components/schemas/timeseries-category"
                    },
                    "description": {
                        "type": "string"
                    },
                    "shared-alias-id": {
                        "type": "string"
                    },
                    "shared-ref-ts-id": {
                        "type": "string"
                    },
                    "assigned-time-series": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssignedTimeSeries"
                        }
                    }
                },
                "description": "A representation of a timeseries group"
            },
            "StoreRule": {
                "type": "string",
                "enum": [
                    "REPLACE ALL",
                    "DO NOT REPLACE",
                    "REPLACE MISSING VALUES ONLY",
                    "REPLACE WITH NON MISSING",
                    "DELETE INSERT"
                ]
            },
            "ParameterSpec": {
                "type": "object",
                "properties": {
                    "parameter": {
                        "type": "string"
                    },
                    "in-range-method": {
                        "type": "string"
                    },
                    "out-range-low-method": {
                        "type": "string"
                    },
                    "out-range-high-method": {
                        "type": "string"
                    }
                }
            },
            "RatingTemplate": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "dependent-parameter": {
                        "type": "string"
                    },
                    "independent-parameter-specs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ParameterSpec"
                        }
                    },
                    "rating-ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "RatingTemplates": {
                "type": "object",
                "properties": {
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "templates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RatingTemplate"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "IndependentRoundingSpec": {
                "type": "object",
                "properties": {
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "RatingSpec": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "rating-id": {
                        "type": "string"
                    },
                    "template-id": {
                        "type": "string"
                    },
                    "location-id": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "source-agency": {
                        "type": "string"
                    },
                    "in-range-method": {
                        "type": "string"
                    },
                    "out-range-low-method": {
                        "type": "string"
                    },
                    "out-range-high-method": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "auto-update": {
                        "type": "boolean"
                    },
                    "auto-activate": {
                        "type": "boolean"
                    },
                    "auto-migrate-extension": {
                        "type": "boolean"
                    },
                    "independent-rounding-specs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IndependentRoundingSpec"
                        }
                    },
                    "dependent-rounding-spec": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "effective-dates": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                }
            },
            "RatingSpecs": {
                "type": "object",
                "properties": {
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "specs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RatingSpec"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "AbstractRatingMetadata": {
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string"
                    },
                    "rating-spec-id": {
                        "type": "string"
                    },
                    "units-id": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "effective-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "create-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "transition-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "vertical-datum-info": {
                        "$ref": "#/components/schemas/vertical-datum-info"
                    },
                    "rating-type": {
                        "type": "string"
                    }
                },
                "description": "Rating Metadata",
                "discriminator": {
                    "propertyName": "rating-type",
                    "mapping": {
                        "table": "#/components/schemas/TableRating",
                        "transitional": "#/components/schemas/TransitionalRating",
                        "virtual": "#/components/schemas/VirtualRating",
                        "expression-rating": "#/components/schemas/ExpressionRating",
                        "usgs": "#/components/schemas/UsgsStreamRating"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/TableRating"
                    },
                    {
                        "$ref": "#/components/schemas/TransitionalRating"
                    },
                    {
                        "$ref": "#/components/schemas/VirtualRating"
                    },
                    {
                        "$ref": "#/components/schemas/ExpressionRating"
                    },
                    {
                        "$ref": "#/components/schemas/UsgsStreamRating"
                    }
                ]
            },
            "ExpressionRating": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractRatingMetadata"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "expression": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "RatingMetadata": {
                "type": "object",
                "properties": {
                    "rating-spec": {
                        "$ref": "#/components/schemas/RatingSpec"
                    },
                    "ratings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AbstractRatingMetadata"
                        }
                    }
                }
            },
            "RatingMetadataList": {
                "type": "object",
                "properties": {
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "rating-metadata": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RatingMetadata"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "SourceRating": {
                "type": "object"
            },
            "TableRating": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractRatingMetadata"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "in-range-method": {
                                "type": "string"
                            },
                            "out-range-low-method": {
                                "type": "string"
                            },
                            "out-range-high-method": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "TransitionalRating": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractRatingMetadata"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "source-ratings": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "conditions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "evaluations": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "UsgsStreamRating": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/TableRating"
                    }
                ]
            },
            "VirtualRating": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/AbstractRatingMetadata"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "source-ratings": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SourceRating"
                                }
                            },
                            "connections": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "DatabaseLoadMethod": {
                "type": "string",
                "enum": [
                    "EAGER",
                    "LAZY",
                    "REFERENCE"
                ]
            },
            "CatalogableEndpoint": {
                "type": "string",
                "description": "Set of data for which a larger catalog can be built.",
                "enum": [
                    "TIMESERIES",
                    "LOCATIONS"
                ]
            },
            "CatalogEntry": {
                "type": "object",
                "properties": {
                    "office": {
                        "type": "string"
                    }
                },
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/LocationCatalogEntry"
                    },
                    {
                        "$ref": "#/components/schemas/TimeseriesCatalogEntry"
                    }
                ]
            },
            "LocationCatalogEntry": {
                "type": "object",
                "properties": {
                    "office": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "nearest-city": {
                        "type": "string"
                    },
                    "public-name": {
                        "type": "string"
                    },
                    "long-name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "kind": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "time-zone": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "published-latitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "published-longitude": {
                        "type": "number",
                        "format": "double"
                    },
                    "horizontal-datum": {
                        "type": "string"
                    },
                    "elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "vertical-datum": {
                        "type": "string"
                    },
                    "nation": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "county": {
                        "type": "string"
                    },
                    "bounding-office": {
                        "type": "string"
                    },
                    "map-label": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "aliases": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/alias"
                        }
                    }
                }
            },
            "TimeseriesCatalogEntry": {
                "type": "object",
                "properties": {
                    "office": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "units": {
                        "type": "string"
                    },
                    "interval": {
                        "type": "string"
                    },
                    "interval-offset": {
                        "type": "integer",
                        "description": "Offset from top of interval",
                        "format": "int64"
                    },
                    "time-zone": {
                        "type": "string",
                        "description": "Only on 21.1.1 Database. The timezone the Interval Offset is from."
                    },
                    "extents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/extents"
                        }
                    }
                }
            },
            "alias": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "catalog": {
                "type": "object",
                "properties": {
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CatalogEntry"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "extents": {
                "type": "object",
                "properties": {
                    "earliest-time": {
                        "type": "string",
                        "description": "Earliest value in the timeseries",
                        "format": "date-time"
                    },
                    "last-update": {
                        "type": "string",
                        "description": "Last update in the timeseries",
                        "format": "date-time"
                    },
                    "latest-time": {
                        "type": "string",
                        "description": "Latest value in the timeseries",
                        "format": "date-time"
                    },
                    "version-time": {
                        "type": "string",
                        "description": "TimeSeries version to which this extent information applies",
                        "format": "date-time"
                    }
                },
                "description": "TimeSeries extent information"
            },
            "Catalog": {
                "type": "object",
                "properties": {
                    "entries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CatalogEntry"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "Basin": {
                "required": [
                    "basin-id"
                ],
                "type": "object",
                "properties": {
                    "basin-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "sort-order": {
                        "type": "number",
                        "format": "double"
                    },
                    "total-drainage-area": {
                        "type": "number",
                        "format": "double"
                    },
                    "contributing-drainage-area": {
                        "type": "number",
                        "format": "double"
                    },
                    "parent-basin-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "area-unit": {
                        "type": "string"
                    },
                    "primary-stream-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    }
                }
            },
            "Stream": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "starts-downstream": {
                        "type": "boolean"
                    },
                    "flows-into-stream-node": {
                        "$ref": "#/components/schemas/StreamNode"
                    },
                    "diverts-from-stream-node": {
                        "$ref": "#/components/schemas/StreamNode"
                    },
                    "length": {
                        "type": "number",
                        "format": "double"
                    },
                    "average-slope": {
                        "type": "number",
                        "format": "double"
                    },
                    "length-units": {
                        "type": "string"
                    },
                    "slope-units": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "id": {
                        "$ref": "#/components/schemas/CwmsId"
                    }
                }
            },
            "StreamLocation": {
                "required": [
                    "stream-location-node"
                ],
                "type": "object",
                "properties": {
                    "stream-location-node": {
                        "$ref": "#/components/schemas/StreamLocationNode"
                    },
                    "published-station": {
                        "type": "number",
                        "format": "double"
                    },
                    "navigation-station": {
                        "type": "number",
                        "format": "double"
                    },
                    "lowest-measurable-stage": {
                        "type": "number",
                        "format": "double"
                    },
                    "total-drainage-area": {
                        "type": "number",
                        "format": "double"
                    },
                    "ungaged-drainage-area": {
                        "type": "number",
                        "format": "double"
                    },
                    "area-units": {
                        "type": "string"
                    },
                    "stage-units": {
                        "type": "string"
                    }
                }
            },
            "StreamReach": {
                "required": [
                    "downstream-node",
                    "id",
                    "stream-id",
                    "upstream-node"
                ],
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "downstream-node": {
                        "$ref": "#/components/schemas/StreamLocationNode"
                    },
                    "upstream-node": {
                        "$ref": "#/components/schemas/StreamLocationNode"
                    },
                    "configuration-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "stream-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "id": {
                        "$ref": "#/components/schemas/CwmsId"
                    }
                }
            },
            "CwmsId": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "StreamNode": {
                "required": [
                    "stream-id"
                ],
                "type": "object",
                "properties": {
                    "stream-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "bank": {
                        "type": "string",
                        "enum": [
                            "L",
                            "R"
                        ]
                    },
                    "station": {
                        "type": "number",
                        "format": "double"
                    },
                    "station-units": {
                        "type": "string"
                    }
                }
            },
            "StreamLocationNode": {
                "required": [
                    "id",
                    "stream-node"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "stream-node": {
                        "$ref": "#/components/schemas/StreamNode"
                    }
                }
            },
            "Measurement": {
                "required": [
                    "id",
                    "instant",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "height-unit": {
                        "type": "string"
                    },
                    "flow-unit": {
                        "type": "string"
                    },
                    "temp-unit": {
                        "type": "string"
                    },
                    "velocity-unit": {
                        "type": "string"
                    },
                    "area-unit": {
                        "type": "string"
                    },
                    "used": {
                        "type": "boolean"
                    },
                    "agency": {
                        "type": "string"
                    },
                    "party": {
                        "type": "string"
                    },
                    "wm-comments": {
                        "type": "string"
                    },
                    "instant": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "number": {
                        "type": "string"
                    },
                    "streamflow-measurement": {
                        "$ref": "#/components/schemas/StreamflowMeasurement"
                    },
                    "supplemental-streamflow-measurement": {
                        "$ref": "#/components/schemas/SupplementalStreamflowMeasurement"
                    },
                    "usgs-measurement": {
                        "$ref": "#/components/schemas/UsgsMeasurement"
                    }
                }
            },
            "StreamflowMeasurement": {
                "type": "object",
                "properties": {
                    "gage-height": {
                        "type": "number",
                        "format": "double"
                    },
                    "flow": {
                        "type": "number",
                        "format": "double"
                    },
                    "quality": {
                        "type": "string"
                    }
                }
            },
            "SupplementalStreamflowMeasurement": {
                "type": "object",
                "properties": {
                    "channel-flow": {
                        "type": "number",
                        "format": "double"
                    },
                    "overbank-flow": {
                        "type": "number",
                        "format": "double"
                    },
                    "overbank-max-depth": {
                        "type": "number",
                        "format": "double"
                    },
                    "channel-max-depth": {
                        "type": "number",
                        "format": "double"
                    },
                    "avg-velocity": {
                        "type": "number",
                        "format": "double"
                    },
                    "surface-velocity": {
                        "type": "number",
                        "format": "double"
                    },
                    "max-velocity": {
                        "type": "number",
                        "format": "double"
                    },
                    "effective-flow-area": {
                        "type": "number",
                        "format": "double"
                    },
                    "cross-sectional-area": {
                        "type": "number",
                        "format": "double"
                    },
                    "mean-gage": {
                        "type": "number",
                        "format": "double"
                    },
                    "top-width": {
                        "type": "number",
                        "format": "double"
                    },
                    "main-channel-area": {
                        "type": "number",
                        "format": "double"
                    },
                    "overbank-area": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "UsgsMeasurement": {
                "type": "object",
                "properties": {
                    "remarks": {
                        "type": "string"
                    },
                    "current-rating": {
                        "type": "string"
                    },
                    "control-condition": {
                        "type": "string"
                    },
                    "shift-used": {
                        "type": "number",
                        "format": "double"
                    },
                    "percent-difference": {
                        "type": "number",
                        "format": "double"
                    },
                    "flow-adjustment": {
                        "type": "string"
                    },
                    "delta-height": {
                        "type": "number",
                        "format": "double"
                    },
                    "delta-time": {
                        "type": "number",
                        "format": "double"
                    },
                    "air-temp": {
                        "type": "number",
                        "format": "double"
                    },
                    "water-temp": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Blob": {
                "required": [
                    "id",
                    "office-id",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "media-type-id": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string",
                        "format": "byte"
                    }
                }
            },
            "blobs": {
                "type": "object",
                "properties": {
                    "blobs": {
                        "type": "array",
                        "description": "List of retrieved blobs",
                        "items": {
                            "$ref": "#/components/schemas/Blob"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "Blobs": {
                "type": "object",
                "properties": {
                    "blobs": {
                        "type": "array",
                        "description": "List of retrieved blobs",
                        "items": {
                            "$ref": "#/components/schemas/Blob"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "clob": {
                "required": [
                    "id",
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "Clob": {
                "required": [
                    "id",
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    }
                }
            },
            "clobs": {
                "type": "object",
                "properties": {
                    "clobs": {
                        "type": "array",
                        "description": "List of retrieved clobs",
                        "items": {
                            "$ref": "#/components/schemas/clob"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "Clobs": {
                "type": "object",
                "properties": {
                    "clobs": {
                        "type": "array",
                        "description": "List of retrieved clobs",
                        "items": {
                            "$ref": "#/components/schemas/clob"
                        }
                    },
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "Pool": {
                "type": "object",
                "properties": {
                    "poolName": {
                        "$ref": "#/components/schemas/PoolNameType"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "bottomLevelId": {
                        "type": "string"
                    },
                    "topLevelId": {
                        "type": "string"
                    },
                    "implicit": {
                        "type": "boolean"
                    },
                    "attribute": {
                        "type": "number"
                    },
                    "description": {
                        "type": "string"
                    },
                    "clobText": {
                        "type": "string"
                    }
                },
                "description": "List of retrieved pools"
            },
            "PoolNameType": {
                "type": "object",
                "properties": {
                    "poolName": {
                        "type": "string"
                    },
                    "officeId": {
                        "type": "string"
                    }
                }
            },
            "pools": {
                "type": "object",
                "properties": {
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pools": {
                        "type": "array",
                        "description": "List of retrieved pools",
                        "items": {
                            "$ref": "#/components/schemas/Pool"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "Pools": {
                "type": "object",
                "properties": {
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pools": {
                        "type": "array",
                        "description": "List of retrieved pools",
                        "items": {
                            "$ref": "#/components/schemas/Pool"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "SpecifiedLevel": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "forecast-instance": {
                "type": "object",
                "properties": {
                    "spec": {
                        "$ref": "#/components/schemas/forecast-spec"
                    },
                    "date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue-date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "first-date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last-date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "max-age": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Forecast Instance Notes"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "filename": {
                        "type": "string",
                        "description": "Forecast Filename"
                    },
                    "file-description": {
                        "type": "string",
                        "description": "Description of Forecast File"
                    },
                    "file-media-type": {
                        "type": "string",
                        "description": "Forecast File Media Type"
                    },
                    "file-data": {
                        "type": "string",
                        "description": "Forecast File binary data",
                        "format": "byte"
                    },
                    "file-data-url": {
                        "type": "string",
                        "description": "Link to Forecast File binary data"
                    }
                }
            },
            "forecast-spec": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "spec-id": {
                        "type": "string",
                        "description": "Forecast Spec ID"
                    },
                    "designator": {
                        "type": "string",
                        "description": "Forecast Designator"
                    },
                    "location-id": {
                        "type": "string",
                        "description": "Location IDs"
                    },
                    "source-entity-id": {
                        "type": "string",
                        "description": "Source Entity ID"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of Forecast"
                    },
                    "time-series-ids": {
                        "type": "array",
                        "description": "List of Time Series IDs belonging to this Forecast Spec",
                        "items": {
                            "type": "string",
                            "description": "List of Time Series IDs belonging to this Forecast Spec"
                        }
                    }
                }
            },
            "ForecastInstance": {
                "type": "object",
                "properties": {
                    "spec": {
                        "$ref": "#/components/schemas/forecast-spec"
                    },
                    "date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "issue-date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "first-date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last-date-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "max-age": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Forecast Instance Notes"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "filename": {
                        "type": "string",
                        "description": "Forecast Filename"
                    },
                    "file-description": {
                        "type": "string",
                        "description": "Description of Forecast File"
                    },
                    "file-media-type": {
                        "type": "string",
                        "description": "Forecast File Media Type"
                    },
                    "file-data": {
                        "type": "string",
                        "description": "Forecast File binary data",
                        "format": "byte"
                    },
                    "file-data-url": {
                        "type": "string",
                        "description": "Link to Forecast File binary data"
                    }
                }
            },
            "ForecastSpec": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "spec-id": {
                        "type": "string",
                        "description": "Forecast Spec ID"
                    },
                    "designator": {
                        "type": "string",
                        "description": "Forecast Designator"
                    },
                    "location-id": {
                        "type": "string",
                        "description": "Location IDs"
                    },
                    "source-entity-id": {
                        "type": "string",
                        "description": "Source Entity ID"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of Forecast"
                    },
                    "time-series-ids": {
                        "type": "array",
                        "description": "List of Time Series IDs belonging to this Forecast Spec",
                        "items": {
                            "type": "string",
                            "description": "List of Time Series IDs belonging to this Forecast Spec"
                        }
                    }
                }
            },
            "LookupType": {
                "required": [
                    "display-value",
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "display-value": {
                        "type": "string"
                    },
                    "tooltip": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "WaterUser": {
                "required": [
                    "entity-name",
                    "project-id",
                    "water-right"
                ],
                "type": "object",
                "properties": {
                    "entity-name": {
                        "type": "string"
                    },
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "water-right": {
                        "type": "string"
                    }
                }
            },
            "WaterUserContract": {
                "required": [
                    "contract-effective-date",
                    "contract-expiration-date",
                    "contract-id",
                    "contract-type",
                    "contracted-storage",
                    "future-use-allocation",
                    "future-use-percent-activated",
                    "initial-use-allocation",
                    "office-id",
                    "storage-units-id",
                    "total-alloc-percent-activated",
                    "water-user"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "water-user": {
                        "$ref": "#/components/schemas/WaterUser"
                    },
                    "contract-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "contract-type": {
                        "$ref": "#/components/schemas/LookupType"
                    },
                    "contract-effective-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "contract-expiration-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "contracted-storage": {
                        "type": "number",
                        "format": "double"
                    },
                    "initial-use-allocation": {
                        "type": "number",
                        "format": "double"
                    },
                    "future-use-allocation": {
                        "type": "number",
                        "format": "double"
                    },
                    "storage-units-id": {
                        "type": "string"
                    },
                    "future-use-percent-activated": {
                        "type": "number",
                        "format": "double"
                    },
                    "total-alloc-percent-activated": {
                        "type": "number",
                        "format": "double"
                    },
                    "pump-out-location": {
                        "$ref": "#/components/schemas/water_supply_pump"
                    },
                    "pump-out-below-location": {
                        "$ref": "#/components/schemas/water_supply_pump"
                    },
                    "pump-in-location": {
                        "$ref": "#/components/schemas/water_supply_pump"
                    }
                }
            },
            "water_supply_pump": {
                "required": [
                    "pumpLocation",
                    "pumpType"
                ],
                "type": "object",
                "properties": {
                    "pumpLocation": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "pumpType": {
                        "type": "string",
                        "enum": [
                            "IN",
                            "OUT",
                            "BELOW"
                        ]
                    }
                }
            },
            "PumpType": {
                "type": "string",
                "enum": [
                    "IN",
                    "OUT",
                    "BELOW"
                ]
            },
            "Embankment": {
                "required": [
                    "location",
                    "project-id"
                ],
                "type": "object",
                "properties": {
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "structure-type": {
                        "$ref": "#/components/schemas/LookupType"
                    },
                    "upstream-side-slope": {
                        "type": "number",
                        "format": "double"
                    },
                    "downstream-side-slope": {
                        "type": "number",
                        "format": "double"
                    },
                    "structure-length": {
                        "type": "number",
                        "format": "double"
                    },
                    "max-height": {
                        "type": "number",
                        "format": "double"
                    },
                    "top-width": {
                        "type": "number",
                        "format": "double"
                    },
                    "length-units": {
                        "type": "string"
                    },
                    "downstream-protection-type": {
                        "$ref": "#/components/schemas/LookupType"
                    },
                    "upstream-protection-type": {
                        "$ref": "#/components/schemas/LookupType"
                    }
                }
            },
            "Turbine": {
                "required": [
                    "location",
                    "project-id"
                ],
                "type": "object",
                "properties": {
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    }
                }
            },
            "TurbineChange": {
                "required": [
                    "change-date",
                    "discharge-computation-type",
                    "project-id",
                    "reason-type"
                ],
                "type": "object",
                "properties": {
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "change-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "protected": {
                        "type": "boolean"
                    },
                    "discharge-computation-type": {
                        "$ref": "#/components/schemas/LookupType"
                    },
                    "reason-type": {
                        "$ref": "#/components/schemas/LookupType"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "new-total-discharge-override": {
                        "type": "number",
                        "format": "double"
                    },
                    "old-total-discharge-override": {
                        "type": "number",
                        "format": "double"
                    },
                    "discharge-units": {
                        "type": "string"
                    },
                    "tailwater-elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevation-units": {
                        "type": "string"
                    },
                    "settings": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TurbineSetting"
                        }
                    },
                    "pool-elevation": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "TurbineSetting": {
                "required": [
                    "discharge-units",
                    "generation-units",
                    "location-id",
                    "new-discharge",
                    "old-discharge"
                ],
                "type": "object",
                "properties": {
                    "location-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "discharge-units": {
                        "type": "string"
                    },
                    "old-discharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "new-discharge": {
                        "type": "number",
                        "format": "double"
                    },
                    "generation-units": {
                        "type": "string"
                    },
                    "scheduled-load": {
                        "type": "number",
                        "format": "double"
                    },
                    "real-power": {
                        "type": "number",
                        "format": "double"
                    }
                }
            },
            "Outlet": {
                "required": [
                    "location",
                    "project-id"
                ],
                "type": "object",
                "properties": {
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "rating-group-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "rating-spec-id": {
                        "type": "string"
                    },
                    "rating-category-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    }
                }
            },
            "GateChange": {
                "required": [
                    "change-date",
                    "discharge-computation-type",
                    "project-id",
                    "reason-type"
                ],
                "type": "object",
                "properties": {
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "change-date": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "reference-elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "pool-elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "protected": {
                        "type": "boolean"
                    },
                    "discharge-computation-type": {
                        "$ref": "#/components/schemas/LookupType"
                    },
                    "reason-type": {
                        "$ref": "#/components/schemas/LookupType"
                    },
                    "notes": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "new-total-discharge-override": {
                        "type": "number",
                        "format": "double"
                    },
                    "old-total-discharge-override": {
                        "type": "number",
                        "format": "double"
                    },
                    "discharge-units": {
                        "type": "string"
                    },
                    "tailwater-elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "elevation-units": {
                        "type": "string"
                    },
                    "settings": {
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GateSetting"
                        }
                    }
                },
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "GateSetting": {
                "required": [
                    "invert-elevation",
                    "location-id",
                    "opening",
                    "opening-parameter",
                    "opening-units"
                ],
                "type": "object",
                "properties": {
                    "location-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "opening": {
                        "type": "number",
                        "format": "double"
                    },
                    "opening-parameter": {
                        "type": "string"
                    },
                    "opening-units": {
                        "type": "string"
                    },
                    "invert-elevation": {
                        "type": "number",
                        "format": "double"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "VirtualOutlet": {
                "required": [
                    "project-id",
                    "virtual-outlet-id"
                ],
                "type": "object",
                "properties": {
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "virtual-outlet-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "virtual-records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VirtualOutletRecord"
                        }
                    }
                }
            },
            "VirtualOutletRecord": {
                "required": [
                    "outlet-id"
                ],
                "type": "object",
                "properties": {
                    "outlet-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "downstream-outlet-ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CwmsId"
                        }
                    }
                }
            },
            "LocationsWithProjectKind": {
                "type": "object",
                "properties": {
                    "kind": {
                        "type": "string",
                        "enum": [
                            "EMBANKMENT",
                            "TURBINE",
                            "OUTLET",
                            "LOCK",
                            "GATE"
                        ]
                    },
                    "location-ids": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CwmsId"
                        }
                    }
                }
            },
            "ProjectChildLocations": {
                "type": "object",
                "properties": {
                    "project-id": {
                        "$ref": "#/components/schemas/CwmsId"
                    },
                    "locations-by-kind": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LocationsWithProjectKind"
                        }
                    }
                }
            },
            "Project": {
                "type": "object",
                "properties": {
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "federal-cost": {
                        "type": "number"
                    },
                    "non-federal-cost": {
                        "type": "number"
                    },
                    "cost-year": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "cost-unit": {
                        "type": "string"
                    },
                    "federal-o-and-m-cost": {
                        "type": "number"
                    },
                    "non-federal-o-and-m-cost": {
                        "type": "number"
                    },
                    "authorizing-law": {
                        "type": "string"
                    },
                    "project-owner": {
                        "type": "string"
                    },
                    "hydropower-desc": {
                        "type": "string"
                    },
                    "sedimentation-desc": {
                        "type": "string"
                    },
                    "downstream-urban-desc": {
                        "type": "string"
                    },
                    "bank-full-capacity-desc": {
                        "type": "string"
                    },
                    "pump-back-location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "near-gage-location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "yield-time-frame-start": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "yield-time-frame-end": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "project-remarks": {
                        "type": "string"
                    }
                }
            },
            "Projects": {
                "type": "object",
                "properties": {
                    "next-page": {
                        "type": "string",
                        "description": "The cursor to the next page of data; null if there is no more data",
                        "readOnly": true
                    },
                    "page": {
                        "type": "string",
                        "description": "The cursor to the current page of data",
                        "readOnly": true
                    },
                    "page-size": {
                        "type": "integer",
                        "description": "The number of records fetched per-page; this may be larger than the number of records actually retrieved",
                        "format": "int32",
                        "readOnly": true
                    },
                    "projects": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Project"
                        }
                    },
                    "total": {
                        "type": "integer",
                        "description": "The total number of records retrieved; null or not present if not supported or unknown",
                        "format": "int32",
                        "readOnly": true
                    }
                }
            },
            "property": {
                "required": [
                    "category",
                    "name",
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "category": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    }
                }
            },
            "Property": {
                "required": [
                    "category",
                    "name",
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "category": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "comment": {
                        "type": "string"
                    }
                }
            },
            "ProjectLock": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "project-id": {
                        "type": "string"
                    },
                    "application-id": {
                        "type": "string"
                    },
                    "acquire-time": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "session-user": {
                        "type": "string"
                    },
                    "os-user": {
                        "type": "string"
                    },
                    "session-program": {
                        "type": "string"
                    },
                    "session-machine": {
                        "type": "string"
                    }
                }
            },
            "ProjectLockId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "LockRevokerRights": {
                "required": [
                    "office-id"
                ],
                "type": "object",
                "properties": {
                    "office-id": {
                        "type": "string",
                        "description": "Owning office of object."
                    },
                    "project-id": {
                        "type": "string"
                    },
                    "application-id": {
                        "type": "string"
                    },
                    "user-id": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "CwmsAAACacAuth": {
                "type": "apiKey",
                "description": "Auth handler running on same tomcat instance as the data api.",
                "name": "JSESSIONIDSSO",
                "in": "cookie"
            },
            "ApiKey": {
                "type": "apiKey",
                "description": "Key value as generated from the /auth/keys endpoint. NOTE: you MUST manually prefix your key with 'apikey ' (without the single quotes).",
                "name": "Authorization",
                "in": "header",
                "scheme": "apikey"
            }
        }
    }
}