/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CdaError from '../model/CdaError';
import TimeSeriesGroup from '../model/TimeSeriesGroup';

/**
* TimeseriesGroups service.
* @module api/TimeseriesGroupsApi
* @version 3.0
*/
export default class TimeseriesGroupsApi {

    /**
    * Constructs a new TimeseriesGroupsApi. 
    * @alias module:api/TimeseriesGroupsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCwmsDataTimeseriesGroupWithGroupId operation.
     * @callback module:api/TimeseriesGroupsApi~deleteCwmsDataTimeseriesGroupWithGroupIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete cwmsData timeseries group with groupId
     * Deletes requested time series group
     * @param {String} groupId The time series group to be deleted
     * @param {String} categoryId Specifies the time series category of the time series group to be deleted
     * @param {String} office Specifies the owning office of the time series group to be deleted
     * @param {module:api/TimeseriesGroupsApi~deleteCwmsDataTimeseriesGroupWithGroupIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCwmsDataTimeseriesGroupWithGroupId(groupId, categoryId, office, callback) {
      let postBody = null;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling deleteCwmsDataTimeseriesGroupWithGroupId");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling deleteCwmsDataTimeseriesGroupWithGroupId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling deleteCwmsDataTimeseriesGroupWithGroupId");
      }

      let pathParams = {
        'group-id': groupId
      };
      let queryParams = {
        'category-id': categoryId,
        'office': office
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'CwmsAAACacAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/timeseries/group/{group-id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataTimeseriesGroup operation.
     * @callback module:api/TimeseriesGroupsApi~getCwmsDataTimeseriesGroupCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/TimeSeriesGroup>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData timeseries group
     * Returns CWMS Timeseries Groups Data
     * @param {Object} opts Optional parameters
     * @param {String} [office] Specifies the owning office of the timeseries group(s) whose data is to be included in the response. If this field is not specified, matching timeseries groups information from all offices shall be returned.
     * @param {Boolean} [includeAssigned] Include the assigned timeseries in the returned timeseries groups. (default: true)
     * @param {String} [timeseriesCategoryLike] Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries category id
     * @param {String} [timeseriesGroupLike] Posix <a href=\"regexp.html\">regular expression</a> matching against the timeseries group id
     * @param {module:api/TimeseriesGroupsApi~getCwmsDataTimeseriesGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/TimeSeriesGroup>}
     */
    getCwmsDataTimeseriesGroup(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'office': opts['office'],
        'include-assigned': opts['includeAssigned'],
        'timeseries-category-like': opts['timeseriesCategoryLike'],
        'timeseries-group-like': opts['timeseriesGroupLike']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [TimeSeriesGroup];
      return this.apiClient.callApi(
        '/cwms-data/timeseries/group', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataTimeseriesGroupWithGroupId operation.
     * @callback module:api/TimeseriesGroupsApi~getCwmsDataTimeseriesGroupWithGroupIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TimeSeriesGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData timeseries group with groupId
     * Retrieves requested timeseries group
     * @param {String} groupId Specifies the timeseries group whose data is to be included in the response
     * @param {String} office Specifies the owning office of the timeseries group whose data is to be included in the response.
     * @param {String} categoryId Specifies the category containing the timeseries group whose data is to be included in the response.
     * @param {module:api/TimeseriesGroupsApi~getCwmsDataTimeseriesGroupWithGroupIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TimeSeriesGroup}
     */
    getCwmsDataTimeseriesGroupWithGroupId(groupId, office, categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling getCwmsDataTimeseriesGroupWithGroupId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling getCwmsDataTimeseriesGroupWithGroupId");
      }
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getCwmsDataTimeseriesGroupWithGroupId");
      }

      let pathParams = {
        'group-id': groupId
      };
      let queryParams = {
        'office': office,
        'category-id': categoryId
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = TimeSeriesGroup;
      return this.apiClient.callApi(
        '/cwms-data/timeseries/group/{group-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the patchCwmsDataTimeseriesGroupWithGroupId operation.
     * @callback module:api/TimeseriesGroupsApi~patchCwmsDataTimeseriesGroupWithGroupIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Patch cwmsData timeseries group with groupId
     * Update existing TimeSeriesGroup
     * @param {String} groupId 
     * @param {String} office Specifies the owning office of the time series group to be updated
     * @param {module:model/TimeSeriesGroup} timeSeriesGroup 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [replaceAssignedTs] Specifies whether to unassign all existing time series before assigning new time series specified in the content body Default: false
     * @param {module:api/TimeseriesGroupsApi~patchCwmsDataTimeseriesGroupWithGroupIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    patchCwmsDataTimeseriesGroupWithGroupId(groupId, office, timeSeriesGroup, opts, callback) {
      opts = opts || {};
      let postBody = timeSeriesGroup;
      // verify the required parameter 'groupId' is set
      if (groupId === undefined || groupId === null) {
        throw new Error("Missing the required parameter 'groupId' when calling patchCwmsDataTimeseriesGroupWithGroupId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling patchCwmsDataTimeseriesGroupWithGroupId");
      }
      // verify the required parameter 'timeSeriesGroup' is set
      if (timeSeriesGroup === undefined || timeSeriesGroup === null) {
        throw new Error("Missing the required parameter 'timeSeriesGroup' when calling patchCwmsDataTimeseriesGroupWithGroupId");
      }

      let pathParams = {
        'group-id': groupId
      };
      let queryParams = {
        'replace-assigned-ts': opts['replaceAssignedTs'],
        'office': office
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'CwmsAAACacAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/timeseries/group/{group-id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCwmsDataTimeseriesGroup operation.
     * @callback module:api/TimeseriesGroupsApi~postCwmsDataTimeseriesGroupCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Post cwmsData timeseries group
     * Create new TimeSeriesGroup
     * @param {module:model/TimeSeriesGroup} timeSeriesGroup 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [failIfExists] Create will fail if provided ID already exists. Default: true
     * @param {module:api/TimeseriesGroupsApi~postCwmsDataTimeseriesGroupCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postCwmsDataTimeseriesGroup(timeSeriesGroup, opts, callback) {
      opts = opts || {};
      let postBody = timeSeriesGroup;
      // verify the required parameter 'timeSeriesGroup' is set
      if (timeSeriesGroup === undefined || timeSeriesGroup === null) {
        throw new Error("Missing the required parameter 'timeSeriesGroup' when calling postCwmsDataTimeseriesGroup");
      }

      let pathParams = {
      };
      let queryParams = {
        'fail-if-exists': opts['failIfExists']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'CwmsAAACacAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/timeseries/group', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
