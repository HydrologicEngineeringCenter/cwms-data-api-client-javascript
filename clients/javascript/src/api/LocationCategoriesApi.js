/**
 * CWMS_JS
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CdaError from '../model/CdaError';
import LocationCategory from '../model/LocationCategory';

/**
* LocationCategories service.
* @module api/LocationCategoriesApi
* @version 3.0
*/
export default class LocationCategoriesApi {

    /**
    * Constructs a new LocationCategoriesApi. 
    * @alias module:api/LocationCategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the deleteCwmsDataLocationCategoryWithCategoryId operation.
     * @callback module:api/LocationCategoriesApi~deleteCwmsDataLocationCategoryWithCategoryIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete cwmsData location category with categoryId
     * Deletes requested location category
     * @param {String} categoryId The location category to be deleted
     * @param {String} office Specifies the owning office of the location category to be deleted
     * @param {Object} opts Optional parameters
     * @param {Boolean} [cascadeDelete] Specifies whether to delete any location groups in this location category. Default: false
     * @param {module:api/LocationCategoriesApi~deleteCwmsDataLocationCategoryWithCategoryIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCwmsDataLocationCategoryWithCategoryId(categoryId, office, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling deleteCwmsDataLocationCategoryWithCategoryId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling deleteCwmsDataLocationCategoryWithCategoryId");
      }

      let pathParams = {
        'category-id': categoryId
      };
      let queryParams = {
        'office': office,
        'cascade-delete': opts['cascadeDelete']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'CwmsAAACacAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/location/category/{category-id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataLocationCategory operation.
     * @callback module:api/LocationCategoriesApi~getCwmsDataLocationCategoryCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/LocationCategory>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData location category
     * Returns CWMS Location Category Data
     * @param {Object} opts Optional parameters
     * @param {String} [office] Specifies the owning office of the location category(ies) whose data is to be included in the response. If this field is not specified, matching location category information from all offices shall be returned.
     * @param {module:api/LocationCategoriesApi~getCwmsDataLocationCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/LocationCategory>}
     */
    getCwmsDataLocationCategory(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'office': opts['office']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [LocationCategory];
      return this.apiClient.callApi(
        '/cwms-data/location/category', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCwmsDataLocationCategoryWithCategoryId operation.
     * @callback module:api/LocationCategoriesApi~getCwmsDataLocationCategoryWithCategoryIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LocationCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get cwmsData location category with categoryId
     * Retrieves requested Location Category
     * @param {String} categoryId Specifies the Category whose data is to be included in the response.
     * @param {String} office Specifies the owning office of the Location Category whose data is to be included in the response.
     * @param {module:api/LocationCategoriesApi~getCwmsDataLocationCategoryWithCategoryIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LocationCategory}
     */
    getCwmsDataLocationCategoryWithCategoryId(categoryId, office, callback) {
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getCwmsDataLocationCategoryWithCategoryId");
      }
      // verify the required parameter 'office' is set
      if (office === undefined || office === null) {
        throw new Error("Missing the required parameter 'office' when calling getCwmsDataLocationCategoryWithCategoryId");
      }

      let pathParams = {
        'category-id': categoryId
      };
      let queryParams = {
        'office': office
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = LocationCategory;
      return this.apiClient.callApi(
        '/cwms-data/location/category/{category-id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postCwmsDataLocationCategory operation.
     * @callback module:api/LocationCategoriesApi~postCwmsDataLocationCategoryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Post cwmsData location category
     * Create new LocationCategory
     * @param {module:model/LocationCategory} locationCategory 
     * @param {module:api/LocationCategoriesApi~postCwmsDataLocationCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    postCwmsDataLocationCategory(locationCategory, callback) {
      let postBody = locationCategory;
      // verify the required parameter 'locationCategory' is set
      if (locationCategory === undefined || locationCategory === null) {
        throw new Error("Missing the required parameter 'locationCategory' when calling postCwmsDataLocationCategory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKey', 'CwmsAAACacAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/cwms-data/location/category', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
