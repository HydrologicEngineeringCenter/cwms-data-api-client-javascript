/**
 * CWMS Data API
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TimeSeriesIntervalUnitsInner from './TimeSeriesIntervalUnitsInner';

/**
 * The TimeSeriesInterval model module.
 * @module model/TimeSeriesInterval
 * @version 3.0
 */
class TimeSeriesInterval {
    /**
     * Constructs a new <code>TimeSeriesInterval</code>.
     * The interval of the time-series, in ISO-8601 duration format
     * @alias module:model/TimeSeriesInterval
     */
    constructor() { 
        
        TimeSeriesInterval.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TimeSeriesInterval</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TimeSeriesInterval} obj Optional instance to populate.
     * @return {module:model/TimeSeriesInterval} The populated <code>TimeSeriesInterval</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TimeSeriesInterval();

            if (data.hasOwnProperty('seconds')) {
                obj['seconds'] = ApiClient.convertToType(data['seconds'], 'Number');
            }
            if (data.hasOwnProperty('nano')) {
                obj['nano'] = ApiClient.convertToType(data['nano'], 'Number');
            }
            if (data.hasOwnProperty('zero')) {
                obj['zero'] = ApiClient.convertToType(data['zero'], 'Boolean');
            }
            if (data.hasOwnProperty('negative')) {
                obj['negative'] = ApiClient.convertToType(data['negative'], 'Boolean');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], [TimeSeriesIntervalUnitsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TimeSeriesInterval</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TimeSeriesInterval</code>.
     */
    static validateJSON(data) {
        if (data['units']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['units'])) {
                throw new Error("Expected the field `units` to be an array in the JSON data but got " + data['units']);
            }
            // validate the optional field `units` (array)
            for (const item of data['units']) {
                TimeSeriesIntervalUnitsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Number} seconds
 */
TimeSeriesInterval.prototype['seconds'] = undefined;

/**
 * @member {Number} nano
 */
TimeSeriesInterval.prototype['nano'] = undefined;

/**
 * @member {Boolean} zero
 */
TimeSeriesInterval.prototype['zero'] = undefined;

/**
 * @member {Boolean} negative
 */
TimeSeriesInterval.prototype['negative'] = undefined;

/**
 * @member {Array.<module:model/TimeSeriesIntervalUnitsInner>} units
 */
TimeSeriesInterval.prototype['units'] = undefined;






export default TimeSeriesInterval;

