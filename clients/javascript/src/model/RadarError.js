/**
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RadarError model module.
 * @module model/RadarError
 * @version 2.5
 */
class RadarError {
    /**
     * Constructs a new <code>RadarError</code>.
     * @alias module:model/RadarError
     */
    constructor() { 
        
        RadarError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RadarError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RadarError} obj Optional instance to populate.
     * @return {module:model/RadarError} The populated <code>RadarError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RadarError();

            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('incidentIdentifier')) {
                obj['incidentIdentifier'] = ApiClient.convertToType(data['incidentIdentifier'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], {'String': Object});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RadarError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RadarError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['incidentIdentifier'] && !(typeof data['incidentIdentifier'] === 'string' || data['incidentIdentifier'] instanceof String)) {
            throw new Error("Expected the field `incidentIdentifier` to be a primitive type in the JSON string but got " + data['incidentIdentifier']);
        }

        return true;
    }


}



/**
 * @member {String} message
 */
RadarError.prototype['message'] = undefined;

/**
 * A randomly generated number to help identify your request in the logs for analysis..
 * @member {String} incidentIdentifier
 */
RadarError.prototype['incidentIdentifier'] = undefined;

/**
 * @member {Object.<String, Object>} details
 */
RadarError.prototype['details'] = undefined;






export default RadarError;

