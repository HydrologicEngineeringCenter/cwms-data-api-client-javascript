/*
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import org.openapitools.client.model.TimeSeriesIntervalUnitsInnerDuration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TimeSeriesIntervalUnitsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-07-12T11:57:07.491-05:00[America/Chicago]")
public class TimeSeriesIntervalUnitsInner {
  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private TimeSeriesIntervalUnitsInnerDuration duration;

  public static final String SERIALIZED_NAME_DURATION_ESTIMATED = "durationEstimated";
  @SerializedName(SERIALIZED_NAME_DURATION_ESTIMATED)
  private Boolean durationEstimated;

  public static final String SERIALIZED_NAME_DATE_BASED = "dateBased";
  @SerializedName(SERIALIZED_NAME_DATE_BASED)
  private Boolean dateBased;

  public static final String SERIALIZED_NAME_TIME_BASED = "timeBased";
  @SerializedName(SERIALIZED_NAME_TIME_BASED)
  private Boolean timeBased;

  public TimeSeriesIntervalUnitsInner() {
  }

  public TimeSeriesIntervalUnitsInner duration(TimeSeriesIntervalUnitsInnerDuration duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @javax.annotation.Nullable

  public TimeSeriesIntervalUnitsInnerDuration getDuration() {
    return duration;
  }


  public void setDuration(TimeSeriesIntervalUnitsInnerDuration duration) {
    this.duration = duration;
  }


  public TimeSeriesIntervalUnitsInner durationEstimated(Boolean durationEstimated) {
    
    this.durationEstimated = durationEstimated;
    return this;
  }

   /**
   * Get durationEstimated
   * @return durationEstimated
  **/
  @javax.annotation.Nullable

  public Boolean getDurationEstimated() {
    return durationEstimated;
  }


  public void setDurationEstimated(Boolean durationEstimated) {
    this.durationEstimated = durationEstimated;
  }


  public TimeSeriesIntervalUnitsInner dateBased(Boolean dateBased) {
    
    this.dateBased = dateBased;
    return this;
  }

   /**
   * Get dateBased
   * @return dateBased
  **/
  @javax.annotation.Nullable

  public Boolean getDateBased() {
    return dateBased;
  }


  public void setDateBased(Boolean dateBased) {
    this.dateBased = dateBased;
  }


  public TimeSeriesIntervalUnitsInner timeBased(Boolean timeBased) {
    
    this.timeBased = timeBased;
    return this;
  }

   /**
   * Get timeBased
   * @return timeBased
  **/
  @javax.annotation.Nullable

  public Boolean getTimeBased() {
    return timeBased;
  }


  public void setTimeBased(Boolean timeBased) {
    this.timeBased = timeBased;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeSeriesIntervalUnitsInner timeSeriesIntervalUnitsInner = (TimeSeriesIntervalUnitsInner) o;
    return Objects.equals(this.duration, timeSeriesIntervalUnitsInner.duration) &&
        Objects.equals(this.durationEstimated, timeSeriesIntervalUnitsInner.durationEstimated) &&
        Objects.equals(this.dateBased, timeSeriesIntervalUnitsInner.dateBased) &&
        Objects.equals(this.timeBased, timeSeriesIntervalUnitsInner.timeBased);
  }

  @Override
  public int hashCode() {
    return Objects.hash(duration, durationEstimated, dateBased, timeBased);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeSeriesIntervalUnitsInner {\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    durationEstimated: ").append(toIndentedString(durationEstimated)).append("\n");
    sb.append("    dateBased: ").append(toIndentedString(dateBased)).append("\n");
    sb.append("    timeBased: ").append(toIndentedString(timeBased)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("duration");
    openapiFields.add("durationEstimated");
    openapiFields.add("dateBased");
    openapiFields.add("timeBased");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TimeSeriesIntervalUnitsInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TimeSeriesIntervalUnitsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TimeSeriesIntervalUnitsInner is not found in the empty JSON string", TimeSeriesIntervalUnitsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!TimeSeriesIntervalUnitsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TimeSeriesIntervalUnitsInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      // validate the optional field `duration`
      if (jsonObj.get("duration") != null && !jsonObj.get("duration").isJsonNull()) {
        TimeSeriesIntervalUnitsInnerDuration.validateJsonObject(jsonObj.getAsJsonObject("duration"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TimeSeriesIntervalUnitsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TimeSeriesIntervalUnitsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TimeSeriesIntervalUnitsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TimeSeriesIntervalUnitsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<TimeSeriesIntervalUnitsInner>() {
           @Override
           public void write(JsonWriter out, TimeSeriesIntervalUnitsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TimeSeriesIntervalUnitsInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TimeSeriesIntervalUnitsInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TimeSeriesIntervalUnitsInner
  * @throws IOException if the JSON string is invalid with respect to TimeSeriesIntervalUnitsInner
  */
  public static TimeSeriesIntervalUnitsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TimeSeriesIntervalUnitsInner.class);
  }

 /**
  * Convert an instance of TimeSeriesIntervalUnitsInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

