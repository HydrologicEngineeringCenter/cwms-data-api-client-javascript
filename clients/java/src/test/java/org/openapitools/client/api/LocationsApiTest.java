/*
 * CWMS Radar
 * CWMS REST API for Data Retrieval
 *
 * The version of the OpenAPI document: 2.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Location;
import org.openapitools.client.model.RadarError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationsApi
 */
@Disabled
public class LocationsApiTest {

    private final LocationsApi api = new LocationsApi();

    /**
     * Delete cwmsData locations with locationId
     *
     * Delete CWMS Location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCwmsDataLocationsWithLocationIdTest() throws ApiException {
        String locationId = null;
        String office = null;
        api.deleteCwmsDataLocationsWithLocationId(locationId, office);
        // TODO: test validations
    }

    /**
     * Get cwmsData locations
     *
     * Returns CWMS Location Data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCwmsDataLocationsTest() throws ApiException {
        String names = null;
        String office = null;
        String unit = null;
        String datum = null;
        String format = null;
        Object response = api.getCwmsDataLocations(names, office, unit, datum, format);
        // TODO: test validations
    }

    /**
     * Get cwmsData locations with locationId
     *
     * Returns CWMS Location Data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCwmsDataLocationsWithLocationIdTest() throws ApiException {
        String locationId = null;
        String office = null;
        String unit = null;
        Location response = api.getCwmsDataLocationsWithLocationId(locationId, office, unit);
        // TODO: test validations
    }

    /**
     * Patch cwmsData locations with locationId
     *
     * Update CWMS Location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void patchCwmsDataLocationsWithLocationIdTest() throws ApiException {
        String locationId = null;
        String office = null;
        Location location = null;
        api.patchCwmsDataLocationsWithLocationId(locationId, office, location);
        // TODO: test validations
    }

    /**
     * Post cwmsData locations
     *
     * Create new CWMS Location
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postCwmsDataLocationsTest() throws ApiException {
        String office = null;
        Location location = null;
        api.postCwmsDataLocations(office, location);
        // TODO: test validations
    }

}
